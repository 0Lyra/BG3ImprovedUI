<ls:UIWidget d:DataContext="{d:DesignInstance {x:Type ls:Dialogue}, IsDesignTimeCreatable=True}" d:DesignHeight="2160" d:DesignWidth="3840" ls:UIWidget.ContextName="Dialogue" mc:Ignorable="d" x:Name="Dialogue" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ls="clr-namespace:ls" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/DialogueTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ls:LSMessageBoxData Text="{Binding Source='h3de62469gbf26g4390ga9a5g530b768217fe', Converter={StaticResource TranslatedStringConverter}}" Title="{Binding Source='h4ce24528g0b74g4dc1g8ba6g80071f09ac12', Converter={StaticResource TranslatedStringConverter}}" UUID="UUID" x:Key="OnAttackMessageBox">
                <ls:LSMessageBoxData.Actions>
                    <ls:LSGameCommandData ActionName="{Binding Source='hf52bf842g05beg48dega717gca15b3678e0e', Converter={StaticResource TranslatedStringConverter}}" BoundEvent="UIAccept" Command="{Binding DataContext.AttackCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" ControlTemplate="{StaticResource BlueButton}"/>
                    <ls:LSGameCommandData ActionName="{Binding Source='heded8384gb4f5g439dg9883g5cf950b2bbfc', Converter={StaticResource TranslatedStringConverter}}" BoundEvent="UICancel" Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseMessageBox" ControlTemplate="{StaticResource RedButton}"/>
                </ls:LSMessageBoxData.Actions>
            </ls:LSMessageBoxData>
            <System:Int16 x:Key="ShowCharacterSelectionCount">1</System:Int16>
            <Style TargetType="ls:LSInputBinding" x:Key="Dialogue.ContinueBinding">
                <Setter Property="PlayerID" Value="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <Setter Property="Command" Value="{Binding SelectorEnterCommand.ActionCommand}"/>
                <Setter Property="CommandParameter" Value="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <Setter Property="SoundID" Value="UI_Input_Dialogue_Continue"/>
            </Style>
            <Storyboard x:Key="Dialogue.Anim">
                <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.4" From="0.0" Storyboard.TargetProperty="Opacity" To="1">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <BooleanAnimationUsingKeyFrames Duration="0:0:0.4" Storyboard.TargetProperty="IsHitTestVisible">
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                </BooleanAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </ls:UIWidget.Resources>
    <ContentControl DataContext="{Binding CurrentPlayer.SelectedCharacter.ActiveDialogue}" d:DataContext="{d:DesignInstance {x:Type ls:Dialogue}, IsDesignTimeCreatable=False}">
        <Grid>
            <ContentControl HorizontalAlignment="Center" Template="{DynamicResource PollNotification}" VerticalAlignment="Top">
                <ContentControl.Style>
                    <Style BasedOn="{StaticResource {x:Type ContentControl}}" TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.Data.IsCommunityPollEnabled, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PollNotification}" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
                <TextBlock Foreground="{StaticResource LS_PrimaryColor}" HorizontalAlignment="Center" Text="{Binding PollNotification}" VerticalAlignment="Center"/>
            </ContentControl>
            <ls:LSInputBinding BoundEvent="UIUp" Command="{Binding SelectorUpCommand.ActionCommand}" PlayerID="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            <ls:LSInputBinding BoundEvent="UIDown" Command="{Binding SelectorDownCommand.ActionCommand}" PlayerID="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            <ls:LSInputBinding BoundEvent="UIEndTurn" Style="{StaticResource Dialogue.ContinueBinding}"/>
            <!-- this is an alternative to allow pressing "1" to on continue nodes -->
            <ls:LSInputBinding BoundEvent="UISelectSlot1" IsEnabled="{Binding ShowAnswers, Converter={StaticResource InvertBoolConverter}, Mode=OneWay}" Style="{StaticResource Dialogue.ContinueBinding}"/>
            <ContentControl Template="{StaticResource Dialogue.DialogueNotification}"/>
            <!-- dialogue text and answers -->
            <ContentControl Template="{StaticResource Dialogue.BodyAndAnswersContainer}"/>
            <!-- debug view of important internals -->
            <!--
            <StackPanel Margin="400,300,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"><TextBlock FontSize="50" Foreground="White"><Run Text="ShowSubtitle: " /><Run Text="{Binding ShowSubtitle, Mode=OneWay}" /></TextBlock><TextBlock FontSize="50" Foreground="White"><Run Text="ShowAnswers: " /><Run Text="{Binding ShowAnswers, Mode=OneWay}" /></TextBlock><TextBlock FontSize="50" Foreground="White"><Run Text="ShowAnswersAllowed: " /><Run Text="{Binding ShowAnswersAllowed, Mode=OneWay}" /></TextBlock><TextBlock FontSize="50" Foreground="White"><Run Text="WaitingForInput: " /><Run Text="{Binding WaitingForInput, Mode=OneWay}" /></TextBlock><TextBlock FontSize="50" Foreground="White"><Run Text="Num Answers: " /><Run Text="{Binding Answers.Count, Mode=OneWay}" /></TextBlock></StackPanel>-->
            <!-- tabs -->
            <Grid HorizontalAlignment="Stretch" Margin="36,0,36,35" VerticalAlignment="Bottom" x:Name="Tabs">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="IsHitTestVisible" Value="False"/>
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAnswers, Mode=OneWay}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Dialogue.Anim}" x:Name="Anim"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Anim"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.SelectedCharacterCanChangeActiveDialogueSpeaker, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Dialogue.Anim}" x:Name="SelectorAnim"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="SelectorAnim"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <Rectangle Margin="40 0 0 180" VerticalAlignment="Bottom" x:Name="TooltipHolder"/>
            <!-- Buttons -->
            <ls:LSButton Command="{Binding DataContext.StopListeningCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" HorizontalAlignment="Right" Margin="30" SoundID="UI_HUD_Dialogue_StopListening" Style="{DynamicResource CloseButton}" VerticalAlignment="Top" Visibility="{Binding DataContext.ActiveDialogueIsListening, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource BoolToVisibleConverter}}" x:Name="btnStopListening"/>
            <StackPanel HorizontalAlignment="Left" Margin="40 0 0 20" Name="ButtonsContainer" Orientation="Vertical" VerticalAlignment="Bottom">
                <!--#region Character selection-->
                <ContentControl DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" IsHitTestVisible="{Binding Path=IsChecked, ElementName=btnToggleCharacters}" Opacity="0" Visibility="Collapsed">
                    <ListBox Background="Transparent" BorderBrush="Transparent" ItemContainerStyle="{StaticResource Dialogue.PlayerPortraits}" ItemsSource="{Binding CurrentPlayer.AssignedCharacters}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" SelectedItem="{Binding CurrentPlayer.SelectedCharacter, Mode=OneWay}" x:Name="PortraitHolder">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <ContentControl.Style>
                        <Style BasedOn="{StaticResource {x:Type ContentControl}}" TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnToggleCharacters}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" Storyboard.TargetProperty="Opacity" To="1">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" Storyboard.TargetProperty="Opacity" To="0">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <!--#endregion-->
                <StackPanel Orientation="Horizontal">
                    <ls:LSButton Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleGameMenu" Content="{Binding ShortShortcut}" DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='Menu', RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_EscapeMenu_Open" Style="{StaticResource GameMenuButtonStyle}" ToolTipService.Placement="Top" x:Name="btnMenu">
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='hb9a8dd57g134fg425fg9da0g1dc579af0c60',Converter={StaticResource TranslatedStringConverter}, ConverterParameter='Loca'}"/>
                        </ls:LSButton.ToolTip>
                    </ls:LSButton>
                    <ls:LSToggleButton HorizontalAlignment="Left" SoundID="UI_HUD_Dialogue_ExpandCharacters" Style="{StaticResource Dialogue.ExpandCharactersButtonStyle}" ToolTipService.Placement="Top" Visibility="{Binding CurrentPlayer.AssignedCharacters.Count, Converter={StaticResource CountToVisibleConverter}, ConverterParameter={StaticResource ShowCharacterSelectionCount}}" x:Name="btnToggleCharacters">
                        <ls:LSToggleButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='h455c1b64g1c6dg4ac4ga9aegb3f0d761858a',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSToggleButton.ToolTip>
                    </ls:LSToggleButton>
                    <ls:LSButton Command="{Binding DataContext.StartTrade, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding DialogueCharacter}" IsEnabled="{Binding DataContext.ActiveDialogueIsListening, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}" SoundID="UI_HUD_Dialogue_Trade" Style="{StaticResource TradeButtonStyle}" ToolTipService.Placement="Top" Visibility="{Binding CanTrade, Converter={StaticResource BoolToVisibleConverter}}" x:Name="btnTrade">
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='he4fdff4dga552g4023gb49bg333f39b77015',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSButton.ToolTip>
                    </ls:LSButton>
                    <ls:LSButton Command="{Binding DataContext.OpenMessageBox, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{DynamicResource OnAttackMessageBox}" IsEnabled="{Binding DataContext.ActiveDialogueIsListening, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}" Style="{StaticResource AttackButtonStyle}" ToolTipService.Placement="Top" Visibility="{Binding AllowAttack, Converter={StaticResource BoolToVisibleConverter}}" x:Name="btnAttack">
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='hc2b3a4e3ge669g4919ga291ged7ebad9c1b1',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSButton.ToolTip>
                    </ls:LSButton>
                    <ls:LSButton Command="{Binding DataContext.CustomEvent, ElementName=Dialogue}" CommandParameter="OpenDialogueHistory" SoundID="UI_HUD_Dialogue_History" Style="{StaticResource HistoryButtonStyle}" ToolTipService.Placement="Top" x:Name="btnHistory">
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='he9e4a39fg8a5dg4ac5gacffgaea214260c69',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSButton.ToolTip>
                    </ls:LSButton>
                </StackPanel>
            </StackPanel>
            <!-- MOD START -->
            <!--<TextBlock VerticalAlignment="Top" HorizontalAlignment="Right" FontSize="{StaticResource GiganticFontSize}"  Opacity="0.7"><Run Text="{Binding Source='h8be1f0ddgdfa7g4812ga2b5g04854b2a1a65', Converter={StaticResource TranslatedStringConverter}, ConverterParameter='ToUpper'}"/><Run Text=" - "/><Run Text="{Binding DataContext.Data.VersionString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/></TextBlock>-->
            <!-- MOD END -->
        </Grid>
    </ContentControl>
</ls:UIWidget>