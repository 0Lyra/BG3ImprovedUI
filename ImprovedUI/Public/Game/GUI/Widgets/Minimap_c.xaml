<ls:UIWidget x:Name="Minimap"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type ls:Widget}, IsDesignTimeCreatable=True}"
             Template="{StaticResource Hud.Root}">
    <ls:UIWidget.Resources>
        <KeyTime x:Key="SlideInHudTime">0:0:1.4</KeyTime>
        <KeyTime x:Key="SlideInHudBeginTime">0:0:0.5</KeyTime>
        <KeyTime x:Key="RadialsFadeTime">0:0:0.2</KeyTime>
        <Storyboard x:Key="Hud.AnimIn" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" >
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.499" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <BitmapImage x:Key="DangerZone" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap_c/c_alertGlow.png"/>
        
        <BitmapImage x:Key="MinimapBg" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap_c/c_minimap_bg.png" />
        
        <BitmapImage x:Key="MinimapBgSplitFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap_c/c_minimap_frame.png" />
        
        <BitmapImage x:Key="MinimapBgSplit" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap_c/c_minimap_bg.png" />

        
        <BitmapImage x:Key="MinimapFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/minimap_frame.png" />
        <BitmapImage x:Key="MinimapNorth" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_north.png" />
        <BitmapImage x:Key="MinimapSouth" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_south.png" />
        <BitmapImage x:Key="MinimapWest" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_west.png" />
        <BitmapImage x:Key="MinimapEast" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_east.png" />
    </ls:UIWidget.Resources>
    
    <ls:UIWidget.ContentTemplate>
        <DataTemplate>
            <Grid x:Name="Root" VerticalAlignment="Stretch" RenderTransformOrigin="1,0" HorizontalAlignment="Right">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="{DynamicResource CurrentScaleFactor}" ScaleY="{DynamicResource CurrentScaleFactor}"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Map -->
                <Grid x:Name="WorldMapContainer" Margin="40,40" HorizontalAlignment="Right" VerticalAlignment="Top" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Map Border -->
                    <Image x:Name="WorldMapBG" Source="{StaticResource MinimapBg}" Visibility="Collapsed" Stretch="Fill" Height="666" Width="666" Margin="0,1,0,0"/>

                    <!-- Map Split Screen -->
                    <ls:LSWorldMap x:Name="WorldMapSplit"
                                   Height="480" Width="480"
                                   Scale="28.0" MinScale="8.0" MaxScale="40.0" ScaleSteps="4.0"
                                   WorldMapData="{Binding CurrentPlayer.WorldMap}"     
                                   MarkerScale="1"                                   
                                   FollowCameraRotation="{Binding CurrentPlayer.UIOptions.NorthFacingMinimap, Converter={StaticResource InvertBoolConverter}}"
                                   ZoomRate="0" PanRate="0">
                        <ls:LSWorldMap.Clip >
                            <EllipseGeometry Center="240,240" RadiusX="240" RadiusY="240" />
                        </ls:LSWorldMap.Clip>
                    </ls:LSWorldMap>

                    <!-- Map Full Screen -->
                    <ls:LSWorldMap x:Name="WorldMap" Visibility="Collapsed"
                                   Height="624" Width="624"
                                   Scale="28.0" MinScale="8.0" MaxScale="40.0" ScaleSteps="4.0"
                                   WorldMapData="{Binding CurrentPlayer.WorldMap}"     
                                   MarkerScale="1"                                   
                                   FollowCameraRotation="{Binding CurrentPlayer.UIOptions.NorthFacingMinimap, Converter={StaticResource InvertBoolConverter}}"
                                   ZoomRate="0" PanRate="0">
                        <ls:LSWorldMap.Clip >
                            <EllipseGeometry Center="312,312" RadiusX="312" RadiusY="312" />
                        </ls:LSWorldMap.Clip>
                    </ls:LSWorldMap>

                    <!-- Danger zone outlines -->
                    <Grid x:Name="DangerZone" Visibility="{Binding CurrentPlayer.SelectedCharacter.IsInDangerZone, Converter={StaticResource BoolToVisibleConverter}}" IsHitTestVisible="False"  Height="480" Width="480">
                        <Image x:Name="DangerZoneGlow" IsHitTestVisible="False" Stretch="UniformToFill" Source="{StaticResource DangerZone}" Focusable="False" Opacity="0.5"/>
                        <Image x:Name="DangerZoneGlowAnimated" IsHitTestVisible="False" Stretch="UniformToFill" Source="{StaticResource DangerZone}" Focusable="False" Opacity="0.1"/>
                    </Grid>

                    <!-- North Pointer Full Screen-->
                    <Grid x:Name="NorthPointerContainer" Height="644" Width="644" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="{Binding ElementName=WorldMap, Path=MapRotation}"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <Image x:Name="northPointer" Source="{StaticResource MinimapFrame}" Stretch="None" />
                        <Image Source="{StaticResource MinimapNorth}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                        <Image x:Name="eastPointer" Source="{StaticResource MinimapEast}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="90"/>
                            </Image.RenderTransform>
                        </Image>
                        <Image x:Name="southPointer" Source="{StaticResource MinimapSouth}" Stretch="None" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </Image.RenderTransform>
                        </Image>
                        <Image x:Name="westPointer" Source="{StaticResource MinimapWest}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Left" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="270"/>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>

                    <!-- North Pointer Full Split Screen-->
                    <Grid x:Name="NorthPointerContainerSplit" Height="512" Width="512" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="{Binding ElementName=WorldMapSplit, Path=MapRotation}"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Image Source="{StaticResource MinimapBgSplitFrame}" Stretch="None" />
                        <Image Source="{StaticResource MinimapNorth}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                    </Grid>

                    <!-- Controller Button Actions -->

                    <ls:LSButton x:Name="LaunchDefaultActionBinding" Command="{Binding LaunchDefaultActionCommand}" CommandParameter="Jump" BoundEvent="Jump" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}" TapTime="{StaticResource HoldTimeShortcuts}" EatInput="False"/>
                    
                    <ls:LSInputBinding Command="{Binding CustomEvent}" BoundEvent="PanelSelect" CommandParameter="ToggleShortcutMenu" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}"/>

                    <ls:LSInputBinding Command="{Binding CustomEvent}" BoundEvent="ToggleSpells" CommandParameter="OpenActionRadials" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}"/>
                    
                    <ls:LSInputBinding Command="{Binding CustomEvent}" BoundEvent="UISwitchMode" CommandParameter="ShowJournalMap" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}"/>

                    <ls:LSButton x:Name="ExamineCommand" Command="{Binding ExamineCommand}" CommandParameter="{Binding CurrentPlayer.CurrentTarget.EntityHandle}" BoundEvent="ToggleSneak" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}" TapTime="{StaticResource HoldTimeShortcuts}" EatInput="False"/>

                    <ls:LSInputBinding x:Name="ToggleGroupHideBinding" Command="{Binding ToggleGroupHide}" BoundEvent="ToggleSneak" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}" HoldTime="{StaticResource HoldTimeShortcuts}"/>
                    
                    <ls:LSInputBinding x:Name="ToggleLightSource" Command="{Binding SwapLightSourceCommand}" BoundEvent="Jump" IsEnabled="{Binding CurrentPlayer.UIData.IsCharacterSelectOpen, Converter={StaticResource InvertBoolConverter}}" HoldTime="{StaticResource HoldTimeShortcuts}"/>

                </Grid>


                <StackPanel x:Name="MapLocationContainer" VerticalAlignment="Top" Grid.Row="1" Margin="12,-30,-12,0">
                    <!-- Co-ordinates -->
                    <TextBlock x:Name="MinimapCoordinates" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{StaticResource LS_accent100TxtColor}"  FontSize="{StaticResource TinyFontSize}" FontWeight="Bold"  Panel.ZIndex="2" noesis:Text.StrokeThickness="4" noesis:Text.Stroke="{StaticResource LS_tint00}" Effect="{StaticResource HUD.DropShadow}" >
                        <Run Text="X:"/>
                        <Run Text="{Binding CurrentPlayer.WorldMap.CameraLookatPos.x, StringFormat={}{0:0.}}"/>
                        <Run Text="Y:"/>
                        <Run Text="{Binding CurrentPlayer.WorldMap.CameraLookatPos.y, StringFormat={}{0:0.}}"/>
                    </TextBlock>
                    <!-- Map Location Text -->
                    <TextBlock x:Name="MapLocation" Text="{Binding CurrentPlayer.SelectedCharacter.CurrentSubregionName, Converter={StaticResource StringToUpperConverter}}" 
                               Foreground="{StaticResource LS_PrimaryColor}" FontSize="{StaticResource SmallishFontSize}" 
                               Visibility="{Binding CurrentPlayer.SelectedCharacter.CurrentSubregionName, Converter={StaticResource StringToVisibilityConverter}}" 
                               HorizontalAlignment="Center" VerticalAlignment="Top" TextWrapping="Wrap" MaxWidth="600" TextAlignment="Center" Margin="0,-4,0,0" 
                               FontWeight="DemiBold" Panel.ZIndex="2" noesis:Text.StrokeThickness="4" noesis:Text.Stroke="{StaticResource LS_tint00}" Effect="{StaticResource HUD.DropShadow}"/>
                </StackPanel>

                <ContentPresenter x:Name="StoryTimer" Grid.Row="2" HorizontalAlignment="Center" Margin="0,6,0,0" Content="{Binding CurrentPlayer.SelectedCharacter.StoryTimer}" Style="{StaticResource StoryTimerStyle}" Visibility="Collapsed">
                    <ContentPresenter.Resources>
                        <Style x:Key="HeaderImageStyle" TargetType="Image">
                            <Setter Property="Stretch" Value="Uniform"/>
                            <Setter Property="Width" Value="480"/>
                        </Style>
                        <Style x:Key="FrameImageStyle" TargetType="Image">
                            <Setter Property="Stretch" Value="Uniform"/>
                            <Setter Property="Height" Value="248"/>
                            <Setter Property="Margin" Value="2,1,0,0"/>
                        </Style>
                        <Style x:Key="timerNumberStyle" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="{StaticResource MassiveFontSize}"/>
                            <Setter Property="Margin" Value="0,-8,0,0"/>
                        </Style>
                        <Style x:Key="timerAnimContents1" TargetType="Ellipse">
                            <Setter Property="Width" Value="184"/>
                            <Setter Property="Height" Value="184"/>
                        </Style>
                        <Style x:Key="timerAnimContents2" TargetType="Ellipse">
                            <Setter Property="Width" Value="260"/>
                            <Setter Property="Height" Value="260"/>
                        </Style>
                        <Style x:Key="timerAnimContents3" TargetType="Ellipse">
                            <Setter Property="Width" Value="170"/>
                            <Setter Property="Height" Value="170"/>
                        </Style>
                        <Style x:Key="timerIconSize" TargetType="Image">
                            <Setter Property="Height" Value="64"/>
                        </Style>
                        <Style x:Key="PathStyle" TargetType="Path">
                            <Setter Property="StrokeThickness" Value="8"/>
                            <Setter Property="noesis:Element.PPAAIn" Value="0.8"/>
                            <Setter Property="noesis:Element.PPAAOut" Value="2.0"/>
                            <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
                            <Setter Property="UseLayoutRounding" Value="True"/>
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Width" Value="174"/>
                            <Setter Property="Height" Value="174"/>
                            <Setter Property="Stroke" Value="{StaticResource LS_baseTxtColor}"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter Property="Data">
                                <Setter.Value>
                                    <EllipseGeometry RadiusX="80" RadiusY="80" Center="88,88"/>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <BitmapImage x:Key="TextHourglass" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap_c/c_tasklist_hourglass.png"/>
                    </ContentPresenter.Resources>
                </ContentPresenter>

                <StackPanel x:Name="DebugInfo" Margin="60,0" Grid.Row="3" HorizontalAlignment="Right">
                    <!-- EA text + version -->
                    <!-- MOD START - Remove version text -->
                    <!--<TextBlock Foreground="{StaticResource LS_tint100}" Panel.ZIndex="2" TextAlignment="Right" Style="{StaticResource HUD.DefaultTextStyle}">
                        <Run Text="{Binding Data.VersionString}"/>
                    </TextBlock> -->
					<!-- MOD END -->

                    <!-- Additional debug info -->
                    <StackPanel Visibility="{Binding Data.IsGold, Converter={StaticResource BoolToCollapsedConverter}}" Panel.ZIndex="2">
                        <TextBlock Foreground="{StaticResource LS_specialTxtColor}" TextAlignment="Right" Style="{StaticResource HUD.DefaultTextStyle}">
                            <Run Text="Live UI -"/>
                            <Run Text="{Binding Data.DebugData.BuildType}"/>
                        </TextBlock>

                        <TextBlock Foreground="{StaticResource LS_specialTxtColor}" TextAlignment="Right" Style="{StaticResource HUD.DefaultTextStyle}">
                            <Run Text="{Binding Data.DebugData.MainModName, StringFormat=' {0} -'}"/>
                            <Run Text="{Binding Data.DebugData.CurrentLevelName}"/>
                        </TextBlock>

                        <!-- Active rulesets -->
                        <ItemsControl ItemsSource="{Binding Data.DebugData.ActiveRulesets}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Line}" Foreground="{StaticResource LS_baseTxtColor}" TextAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="6"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </StackPanel>

            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.IsInDangerZone}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="DangerZoneGlowAnimation">
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DangerZoneGlowAnimated" Storyboard.TargetProperty="(UIElement.Opacity)" AutoReverse="True">
                                    <EasingDoubleKeyFrame Value="0.6" KeyTime="0:0:0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame Value="0.1" KeyTime="0:0:4">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="DangerZoneGlowAnimation"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.StoryTimer, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                    <Setter TargetName="StoryTimer" Property="Visibility" Value="Visible" />
                    <Setter TargetName="MapLocation" Property="Visibility" Value="Collapsed" />

                </DataTrigger>
                <DataTrigger Binding="{Binding Layout}" Value="Left">
                    <Setter TargetName="WorldMapContainer" Property="HorizontalAlignment" Value="Left"/>
                    <Setter TargetName="Root" Property="HorizontalAlignment" Value="Left"/>
                    <Setter TargetName="MapLocation" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="Root" Property="RenderTransformOrigin" Value="0 0"/>
                    <Setter TargetName="Root" Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <ScaleTransform ScaleX="{DynamicResource CurrentScaleFactor}" ScaleY="{DynamicResource CurrentScaleFactor}"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Layout}" Value="Right">
                    <Setter TargetName="Root" Property="RenderTransformOrigin" Value="1 0"/>
                    <Setter TargetName="MapLocation" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="Root" Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <ScaleTransform ScaleX="{DynamicResource CurrentScaleFactor}" ScaleY="{DynamicResource CurrentScaleFactor}"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyInventory">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyEquipment">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="Dialogue">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyCharacterSheet">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="SpellBook">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.AreRadialsOpen}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StoryTimer" Storyboard.TargetProperty="(UIElement.Opacity)" >
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="{StaticResource RadialsFadeTime}" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StoryTimer" Storyboard.TargetProperty="(UIElement.Opacity)" >
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="{StaticResource RadialsFadeTime}" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

                <!--Hide during combat when in splitscreen-->
                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Layout}" Value="Left"/>
                        <Condition Binding="{Binding Path=DataContext.CurrentPlayer.SelectedCharacter.CharacterMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="InCombat"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="WorldMapContainer" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MapLocationContainer" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="StoryTimer" Property="Margin" Value="0,20,0,0"/>


                </MultiDataTrigger>
                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Layout}" Value="Right"/>
                        <Condition Binding="{Binding Path=DataContext.CurrentPlayer.SelectedCharacter.CharacterMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="InCombat"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="WorldMapContainer" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MapLocationContainer" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="StoryTimer" Property="Margin" Value="0,20,0,0"/>
                </MultiDataTrigger>


                <!-- Single Player Big Map -->
                <DataTrigger Binding="{Binding Layout}" Value="Common">

                    <Setter TargetName="WorldMapBG" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="WorldMapSplit" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="WorldMap" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="WorldMapContainer" Property="Margin" Value="40,40"/>
                    <Setter TargetName="MapLocation" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="DangerZone" Property="Width" Value="624"/>
                    <Setter TargetName="DangerZone" Property="Height" Value="624"/>
                    <Setter TargetName="NorthPointerContainer" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="NorthPointerContainerSplit" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                
                
                
                <!-- Debug -->
                <DataTrigger Binding="{Binding Data.VersionString}" Value="">
                    <Setter TargetName="DebugInfo" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Layout}" Value="Left">
                    <Setter TargetName="DebugInfo" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>
