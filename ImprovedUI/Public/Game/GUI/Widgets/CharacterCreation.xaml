<ls:UIWidget d:DesignHeight="2160" d:DesignWidth="3840" ls:UIWidget.ContextName="CharacterCreation" mc:Ignorable="d" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ls="clr-namespace:ls" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CharacterCreationLib_k.xaml"/>
                <ResourceDictionary Source="../Library/OptionTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary x:Key="BottomBoxesResources">
                <System:Double x:Key="MaxWrapPanelWidth">2100</System:Double>
            </ResourceDictionary>
            <ControlTemplate x:Key="InviteButtonTemplate">
                <ls:LSButton Command="{Binding DataContext.InvitePlayer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_Shared_Invite">
                    <ls:LSButton.ToolTip>
                        <ls:LSTooltip Content="{Binding Source='h5bacb1e0geecag4473g9aa1g3f3ed207377e',Converter={StaticResource TranslatedStringConverter}, ConverterParameter='ToUpper'}"/>
                    </ls:LSButton.ToolTip>
                    <ls:LSButton.Template>
                        <ControlTemplate TargetType="ls:LSButton">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_d.png" Stretch="None" x:Name="img"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" TargetName="img" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_h.png"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="img" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_p.png"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Source" TargetName="img" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_disabled.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ls:LSButton.Template>
                </ls:LSButton>
            </ControlTemplate>
            <ControlTemplate x:Key="MultiplayerPanelTemplate">
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <ItemsControl ItemsSource="{Binding Data.Players}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Border Background="Black" Height="114" Width="114"/>
                                    <Border Background="{Binding CommunityIcon}" Height="110" Width="110">
                                        <Border.ToolTip>
                                            <ls:LSTooltip Content="{Binding PlayerName}"/>
                                        </Border.ToolTip>
                                    </Border>
                                    <Image IsHitTestVisible="False" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_d.png" Stretch="None" x:Name="frame"/>
                                    <Image HorizontalAlignment="Right" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_confirm.png" Stretch="None" VerticalAlignment="Top" Visibility="{Binding Ready, Converter={StaticResource BoolToVisibleConverter}}"/>
                                    <Control Margin="0 0 0 -30" Template="{DynamicResource KickButton}" VerticalAlignment="Bottom"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" TargetName="frame" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_h.png"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <StackPanel Margin="-10,0,0,0" Orientation="Horizontal" x:Name="invites">
                        <ContentControl Template="{StaticResource InviteButtonTemplate}" Visibility="Collapsed" x:Name="invite0"/>
                        <ContentControl Template="{StaticResource InviteButtonTemplate}" Visibility="Collapsed" x:Name="invite1"/>
                        <ContentControl Template="{StaticResource InviteButtonTemplate}" Visibility="Collapsed" x:Name="invite2"/>
                    </StackPanel>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsHost}" Value="False">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="Visibility" TargetName="invites" Value="Hidden"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DataContext.Data.LobbyVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Offline">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="Visibility" TargetName="invites" Value="Hidden"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="1">
                        <Setter Property="Visibility" TargetName="invite0" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="invite1" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="invite2" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="2">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="invite0" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="invite1" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="3">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="invite0" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Data.Players.Count}" Value="4">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <DataTemplate x:Key="AppearanceOptionTitle">
                <ContentControl Content="{Binding Text, Converter={StaticResource StringToUpperConverter}}" FontSize="{DynamicResource BigFontSize}" Margin="0,40,0,0" Template="{StaticResource FloralFlairTitleTemplate}" Width="200"/>
            </DataTemplate>
            <DataTemplate x:Key="AppearanceOptionTemplate">
                <Grid Margin="0,4,0,4" Width="750">
                    <TextBlock FontSize="{DynamicResource MediumFontSize}" Foreground="{DynamicResource LS_TertiaryColor}" HorizontalAlignment="Left" Margin="80,0,0,0" Text="{Binding Text}" VerticalAlignment="Center" x:Name="OptionText"/>
                    <Control HorizontalAlignment="Left" Margin="0,0,0,0" Template="{StaticResource ComboBoxTemplate}" VerticalAlignment="Center" x:Name="content"/>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding ListItemType}" Value="ComboBox">
                        <Setter Property="Template" TargetName="content" Value="{StaticResource ComboBoxTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListItemType}" Value="TickBox">
                        <Setter Property="Template" TargetName="content" Value="{StaticResource TickBoxTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListItemType}" Value="Slider">
                        <Setter Property="Template" TargetName="content" Value="{StaticResource SliderTemplate}"/>
                        <Setter Property="Margin" TargetName="content" Value="0,60,0,0"/>
                        <Setter Property="VerticalAlignment" TargetName="content" Value="Top"/>
                        <Setter Property="HorizontalAlignment" TargetName="content" Value="center"/>
                        <Setter Property="Margin" TargetName="OptionText" Value="0,20,0,0"/>
                        <Setter Property="HorizontalAlignment" TargetName="OptionText" Value="center"/>
                        <Setter Property="VerticalAlignment" TargetName="OptionText" Value="Top"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="ListBoxItem" x:Key="AppearanceOptionStyle">
                <Setter Property="ContentTemplate" Value="{StaticResource AppearanceOptionTemplate}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="IsSelected" Value="False"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="IsSelected" Value="True"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="FrameworkElement" x:Key="ColorCellItemStyle">
                <Setter Property="Margin" Value="0,0,5,5"/>
                <Setter Property="Width" Value="58"/>
                <Setter Property="Height" Value="58"/>
            </Style>
            <ControlTemplate x:Key="ColorCellTemplate">
                <Grid>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/palette_shine.png"/>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/palette_selected.png" Visibility="Hidden" x:Name="SelectedImg"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Selected}" Value="True">
                        <Setter Property="Visibility" TargetName="SelectedImg" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <DataTemplate x:Key="SkinColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetSkinColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}, ConverterParameter='LocaKey'}"/>
                    </Grid.ToolTip>
                    <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>
            <ControlTemplate x:Key="CCSkinColorGrid">
                <ItemsControl ItemContainerStyle="{StaticResource ColorCellItemStyle}" ItemTemplate="{StaticResource SkinColorCellTemplate}" ItemsSource="{Binding }" Width="{DynamicResource ColorGridWidth}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>
            <DataTemplate x:Key="EyeColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetEyeColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}, ConverterParameter='LocaKey'}"/>
                    </Grid.ToolTip>
                    <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>
            <ControlTemplate x:Key="CCEyeColorGrid">
                <ItemsControl ItemContainerStyle="{StaticResource ColorCellItemStyle}" ItemTemplate="{StaticResource EyeColorCellTemplate}" ItemsSource="{Binding }" Width="{DynamicResource ColorGridWidth}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>
            <DataTemplate x:Key="HairColorCellTemplate">
                <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding DataContext.SetHairColor, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}, ConverterParameter='LocaKey'}"/>
                    </Grid.ToolTip>
                    <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                </Grid>
            </DataTemplate>
            <ControlTemplate x:Key="CCHairColorGrid">
                <ItemsControl ItemContainerStyle="{StaticResource ColorCellItemStyle}" ItemTemplate="{StaticResource HairColorCellTemplate}" ItemsSource="{Binding }" Width="{DynamicResource ColorGridWidth}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>
            <ControlTemplate x:Key="CCColorGrid">
                <ItemsControl ItemContainerStyle="{StaticResource ColorCellItemStyle}" ItemsSource="{Binding ColorSwatch}" Width="{DynamicResource ColorGridWidth}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Background="{Binding Color}" ToolTipService.Placement="Left">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding DataContext.SetColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid.ToolTip>
                                    <ls:LSTooltip Content="{Binding ColorName, Converter={StaticResource TranslatedStringConverter}, ConverterParameter='LocaKey'}"/>
                                </Grid.ToolTip>
                                <Control DataContext="{Binding}" Template="{StaticResource ColorCellTemplate}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="0,20,0,20"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ControlTemplate>
            <ControlTemplate TargetType="Control" x:Key="CharacterCreationStepButtons">
                <ControlTemplate.Resources>
                    <Style BasedOn="{StaticResource StepButtonFiller}" TargetType="Image"/>
                </ControlTemplate.Resources>
                <StackPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Orientation="Horizontal">
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Origin" Content="{Binding Source='hd0d4922ag7581g43eag9142g44e22c131fa8', Converter={StaticResource TranslatedStringConverter}}" Margin="0,0,-16,0" SoundID="UI_HUD_CC_Origin" Template="{DynamicResource StepButton}" x:Name="originBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_origin.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Race" Content="{Binding Source='hadf27237ge191g4922ga84cg055b984c9b1f', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0" SoundID="UI_HUD_CC_Race" Template="{DynamicResource StepButton}" x:Name="raceBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_race.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Appearance" Content="{Binding Source='h261cce55g1d1eg4c09g9675ge5c1be13e820', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0" SoundID="UI_HUD_CC_Appearance" Template="{DynamicResource StepButton}" x:Name="appearanceBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_appearance.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Class" Content="{Binding Source='h4d0d00cfg4edeg42c3gaa4agcc3908351b8d', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0" SoundID="UI_HUD_CC_Class" Template="{DynamicResource StepButton}" x:Name="classBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_class.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Skills" Content="{Binding Source='h12abe296ga0fbg44feg9451gb10a0bf92acb', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0" SoundID="UI_HUD_CC_Skills" Template="{DynamicResource StepButton}" x:Name="skillsBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_skills.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <ls:LSRadioButton Command="{Binding SetCharacterCreationStep}" CommandParameter="Abilities" Content="{Binding Source='h3a6a5b07g266eg4391ga17bg9975ccbe59c4', Converter={StaticResource TranslatedStringConverter}}" Margin="-16,0,-16,0" SoundID="UI_HUD_CC_Abilities" Template="{DynamicResource StepButton}" x:Name="abilitiesBtn">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_abilities.png" x:Key="Icon"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <Image/>
                    <StackPanel Margin="-16,26,0,0" Orientation="Horizontal">
                        <Grid Margin="0,0,-16,0">
                            <ls:LSButton Command="{Binding PrevCharacterCreationStep}" SoundID="UI_HUD_CC_Accept" Template="{DynamicResource NavButton}" x:Name="prevBtn">
                                <ls:LSButton.Resources>
                                    <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_left.png" x:Key="Icon"/>
                                    <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_left.png" x:Key="IconHighlight"/>
                                </ls:LSButton.Resources>
                            </ls:LSButton>
                        </Grid>
                        <Image Margin="0,-16,0,16" Style="{StaticResource StepButtonFiller}"/>
                        <ls:LSButton Command="{Binding NextCharacterCreationStep}" Margin="-16,0,0,0" SoundID="UI_HUD_CC_Accept" Template="{DynamicResource NavButton}" x:Name="nextBtn">
                            <ls:LSButton.Resources>
                                <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_right.png" x:Key="Icon"/>
                                <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_browse_d_right.png" x:Key="IconHighlight"/>
                            </ls:LSButton.Resources>
                        </ls:LSButton>
                    </StackPanel>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                        <Setter Property="IsEnabled" TargetName="nextBtn" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Origin">
                        <Setter Property="IsChecked" TargetName="originBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Race">
                        <Setter Property="IsChecked" TargetName="raceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Appearance">
                        <Setter Property="IsChecked" TargetName="appearanceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Class">
                        <Setter Property="IsChecked" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Skills">
                        <Setter Property="IsChecked" TargetName="skillsBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Abilities">
                        <Setter Property="IsChecked" TargetName="abilitiesBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding OriginInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="originBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BackgroundInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="originBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RaceAbilityInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="raceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RaceProgressionDetails.IsInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="raceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RacePassiveInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="raceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding VoiceInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="appearanceBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassProgressionDetails.IsInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassAbilityInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClassPassiveInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding GodInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SpellPrepare.IsInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="classBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SkillsInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="skillsBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AbilitiesInvalid}" Value="True">
                        <Setter Property="Tag" TargetName="abilitiesBtn" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="CommonCharacterCreationPanel">
                <ls:LSScrollViewer Margin="100,0,0,0" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerTemplate}" VerticalScrollBarVisibility="Visible" Width="1100" x:Name="scroller">
                    <ls:LSScrollViewer.Resources>
                        <GridLength x:Key="Top">200</GridLength>
                        <GridLength x:Key="Bottom">200</GridLength>
                    </ls:LSScrollViewer.Resources>
                    <ContentPresenter Margin="0,20,0,0" MaxWidth="1100"/>
                </ls:LSScrollViewer>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ScrollWheelEnabled" TargetName="scroller" Value="True"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="ScrollWheelEnabled" TargetName="scroller" Value="False"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="GenderTemplate">
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="ls:LSRadioButton">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ls:LSRadioButton">
                                        <Grid>
                                            <DockPanel Width="104">
                                                <Image DockPanel.Dock="Left" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_01.png" Stretch="None" x:Name="img01"/>
                                                <Image DockPanel.Dock="Right" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_05.png" Stretch="None" x:Name="img05"/>
                                                <Grid x:Name="g02">
                                                    <Grid.Background>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_d_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Grid.Background>
                                                </Grid>
                                            </DockPanel>
                                            <Image Source="{DynamicResource Icon}" Stretch="None" x:Name="icon"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Source" TargetName="img01" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_01.png"/>
                                                <Setter Property="Source" TargetName="img05" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_05.png"/>
                                                <Setter Property="Background" TargetName="g02">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_default_h_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Source" TargetName="icon" Value="{DynamicResource Icon_Hover}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Source" TargetName="img01" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_01.png"/>
                                                <Setter Property="Source" TargetName="img05" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_05.png"/>
                                                <Setter Property="Background" TargetName="g02">
                                                    <Setter.Value>
                                                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_d_02.png" Stretch="None" TileMode="Tile"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.Setters>
                                                    <Setter Property="Source" TargetName="img01" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_01.png"/>
                                                    <Setter Property="Source" TargetName="img05" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_05.png"/>
                                                    <Setter Property="Background" TargetName="g02">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/selection_active_h_02.png" Stretch="None" TileMode="Tile"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger.Setters>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <ls:LSRadioButton Command="{Binding SetGender}" CommandParameter="Female" SoundID="UI_HUD_CC_Gender_F" x:Name="FemaleButton">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_female_d.png" x:Key="Icon"/>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_female_h.png" x:Key="Icon_Hover"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                    <ls:LSRadioButton Command="{Binding SetGender}" CommandParameter="Male" SoundID="UI_HUD_CC_Gender_M" x:Name="MaleButton">
                        <ls:LSRadioButton.Resources>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_male_d.png" x:Key="Icon"/>
                            <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_male_h.png" x:Key="Icon_Hover"/>
                        </ls:LSRadioButton.Resources>
                    </ls:LSRadioButton>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Gender}" Value="Male">
                        <Setter Property="IsChecked" TargetName="MaleButton" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Gender}" Value="Female">
                        <Setter Property="IsChecked" TargetName="FemaleButton" Value="True"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CanEditGender}" Value="False">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type ls:LSButton}" x:Key="PlayOriginStoryButtonStyle">
                <Setter Property="Template" Value="{DynamicResource CarouselButtonTemplate}"/>
                <Style.Resources>
                    <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_d.png</ImageSource>
                    <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_h.png</ImageSource>
                    <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_h.png</ImageSource>
                    <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_play_d.png</ImageSource>
                </Style.Resources>
            </Style>
            <ControlTemplate x:Key="OriginStoryTemplate">
                <Grid>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ornate_buttonFrame.png" Stretch="None"/>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                        <ls:LSButton Command="{Binding DataContext.PlayOriginStory, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" HorizontalAlignment="Left" IsEnabled="False" Margin="0,0,0,0" Opacity="0.5" SoundID="UI_HUD_CC_ListenOrigin" Style="{StaticResource PlayOriginStoryButtonStyle}" VerticalAlignment="Center"/>
                        <TextBlock FontSize="{DynamicResource MediumFontSize}" Foreground="{DynamicResource LS_PrimaryColor}" Margin="20,0,0,0" Text="{Binding Source='h777d8a87gfd85g4997gbf2cg14d91c759e2c', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="OriginCharacterCreationTemplate">
                <ContentControl Margin="-100,0,100,0" Padding="34,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel>
                        <TextBlock Margin="0,0,0,0" Style="{DynamicResource PanelTitleText}" Text="{Binding Source='h4e22c88bg6071g4c6dg81fdg68133ee0804d', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl HorizontalAlignment="Center" Template="{StaticResource GenderTemplate}"/>
                        
                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding OriginCharacters}" Margin="0,32,0,0" Resources="{StaticResource SideBoxesTripleResources}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Resources>
                                        <System:String x:Key="SoundEventHover">UI_HUD_CC_SelectOrigin_Hover</System:String>
                                        <System:String x:Key="SoundEventPress">UI_HUD_CC_SelectOrigin_Press</System:String>
                                    </Style.Resources>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>                        
                        <StackPanel HorizontalAlignment="Center" Visibility="{Binding CanEditName, Converter={StaticResource BoolToVisibleConverter}}">
                            <TextBlock Margin="0,32,0,0" Style="{DynamicResource PanelTitleText}" Text="{Binding Source='h3492f9f8g2946g40a5g8cc1g0af620c2a6bb', Converter={StaticResource TranslatedStringConverter}}"/>
                            <TextBlock Margin="0,8,0,0" Style="{StaticResource PanelTitleInfoText}" Text="{Binding DummyCharacter.Stats.OriginDescription}"/>
                            <TextBlock Margin="0,32,0,0" Style="{StaticResource PanelHeaderText}" Text="{Binding Source='heb7ccc73g0dcfg4a78g95efgd76c4bdb4c03', Converter={StaticResource TranslatedStringConverter}}"/>
                            <Grid HorizontalAlignment="Center" Margin="0,16,0,0">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/frame_textInput.png" Stretch="None"/>
                                <ls:LSTextBox Text="{Binding CharacterName}" IsEnabled="{Binding CanEditName}" MaxLength="20" TextImmediateSourceUpdate="True" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource DefaultFontSize}" TextAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" Margin="70,0,50,0"/>
                            </Grid>
                            <TextBlock Margin="0,100,0,0" Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h1d2631e2g78fdg4de2gadceg1a724c2f7d9b', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ContentControl DataContext="{Binding Backgrounds}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                            <TextBlock Margin="0,32,0,0" Style="{StaticResource PanelInfoText}" Text="{Binding DummyCharacter.Stats.BackgroundDescription}"/>
                        </StackPanel>

                            <StackPanel HorizontalAlignment="Center" Visibility="{Binding CanEditName, Converter={StaticResource BoolToCollapsedConverter}}">
                                <TextBlock Text="{Binding OriginCharacters.SelectedItem.Name}" Style="{DynamicResource PanelTitleText}" FontSize="{DynamicResource GiganticFontSize}" Margin="0,32,0,0"/>
                                <TextBlock Text="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelTitleInfoText}" Margin="0,8,0,0"/>
                                <ContentControl Template="{StaticResource OriginStoryTemplate}" Margin="0,20,0,0"/>
                            </StackPanel>
                            
                            <Control Template="{StaticResource CharacterBackgroundFeatures}" Visibility="{Binding BackgroundFeatures.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>
            <ControlTemplate x:Key="RaceCharacterCreationTemplate">
                <ContentControl Padding="34,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel Margin="0,0,0,100">
                        <TextBlock Style="{DynamicResource PanelTitleText}" Text="{Binding Source='h6020727bge0e3g4de7gaf3ag469c3b32b3d2', Converter={StaticResource TranslatedStringConverter}}"/>
                        <!-- MOD START - Gender section moved -->
                        <ContentControl HorizontalAlignment="Center" Margin="0,0,0,32" Template="{StaticResource GenderTemplate}"/>
                        <!-- MOD END -->
                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Races}" Resources="{StaticResource SideBoxesTripleResources}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Resources>
                                        <System:String x:Key="SoundEventHover">UI_HUD_CC_SelectRace_Hover</System:String>
                                        <System:String x:Key="SoundEventPress">UI_HUD_CC_SelectRace_Press</System:String>
                                    </Style.Resources>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <!-- MOD START - Gender section original location -->
                        <!--<ContentControl HorizontalAlignment="Right" Margin="0,-108,108,0" Template="{StaticResource GenderTemplate}"/>-->
                        <!-- MOD END -->
                        <StackPanel Margin="0,32,0,0" Visibility="{Binding Subraces.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h29d1d637g94bbg4f11g9bdfgbe0042b60e40', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ContentControl DataContext="{Binding Subraces}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                        </StackPanel>
                        <TextBlock Margin="0,32,0,0" Style="{StaticResource PanelTitleInfoText}" Text="{Binding DummyCharacter.Stats.RaceDescription}"/>
                        <ContentControl DataContext="{Binding RaceProgressionDetails}" Template="{StaticResource SpellBoxesTemplate}"/>
                        <ContentControl Margin="0,30,0,30" Tag="{Binding RacePassiveInvalid}" Template="{StaticResource ValidationFailedHighlighter}" Visibility="{Binding RacePassives.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <ItemsControl ItemsSource="{Binding RacePassives}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel HorizontalAlignment="Center" Margin="0,24,0,0">
                                            <TextBlock Style="{StaticResource PanelHeaderText}">
                                                <Run Text="{Binding DisplayName}"/>
                                                <Run Text="{Binding SelectedPassiveCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedPassiveCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                            <ContentControl DataContext="{Binding Passives}" Template="{StaticResource SelectPassives}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ContentControl>
                        <ContentControl Margin="0,32,0,0" Template="{StaticResource CharacterRaceFeatures}" Visibility="{Binding RaceProgressionDetails.IsEmpty, Converter={StaticResource BoolToHiddenConverter}}"/>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>
            <ControlTemplate x:Key="AppearanceTemplate">
                <ControlTemplate.Resources>
                    <System:Double x:Key="ColorGridWidth">760</System:Double>
                </ControlTemplate.Resources>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="{DynamicResource LS_TertiaryColor}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Height" Value="200"/>
                            <Setter Property="Margin" Value="0,20,0,0"/>
                        </Style>
                        <Style TargetType="Image">
                            <Setter Property="Margin" Value="0,20,0,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Style="{StaticResource PanelTitleText}" Text="{Binding Source='h261cce55g1d1eg4c09g9675ge5c1be13e820', Converter={StaticResource TranslatedStringConverter}}"/>
                    <!-- MOD START - Margin change -->
                    <ContentControl HorizontalAlignment="Center" Margin="-12,0,0,0" Template="{StaticResource GenderTemplate}"/>
                    <!-- MOD END -->
                    <!-- Voice -->
                    <TextBlock HorizontalAlignment="Center" Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h81102ec7gef4dg42edg85b5g60d7fb1d13f9', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ContentControl Margin="0,20,0,0" Tag="{Binding VoiceInvalid}" Template="{StaticResource ValidationFailedHighlighter}">
                        <ContentControl DataContext="{Binding Voices}" Template="{DynamicResource Carousel}"/>
                    </ContentControl>
                    <Grid>
                        <Image Margin="0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ornate_buttonFrame.png" Stretch="None"/>
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                            <ls:LSButton Command="{Binding DataContext.PlayVoice, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" HorizontalAlignment="Left" SoundID="UI_HUD_CC_Accept" Style="{StaticResource PlayOriginStoryButtonStyle}" VerticalAlignment="Center"/>
                            <TextBlock FontSize="{DynamicResource MediumFontSize}" Foreground="{DynamicResource LS_PrimaryColor}" Margin="20,0,0,0" Text="{Binding Source='hbf7b56f9g7cd9g4b08g9986ge231edbbde18', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!-- Face -->
                    <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h800369a8g9201g4e9dg88a0g37f311fbcd18', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ContentControl DataContext="{Binding AppearanceFaces}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                    <!-- Horns -->
                    <StackPanel Visibility="{Binding AppearanceHorns.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h290f2542g9702g4651g8afdgdae1f08a12eb', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl DataContext="{Binding AppearanceHorns}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                    </StackPanel>
                    <!-- Skin -->
                    <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='hc81ba7bcgb2ccg4423ga050g253fd53ce2c9', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ListBox HorizontalAlignment="Center" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" ItemsSource="{Binding SkinColorOptions}">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding SkinColors}" HorizontalAlignment="Center" Template="{StaticResource CCSkinColorGrid}"/>
                    <!-- Eye -->
                    <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h1203122ag1146g4759ga531g57ccd5ef36da', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ListBox HorizontalAlignment="Center" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" ItemsSource="{Binding EyeColorOptions}">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding EyeColors}" HorizontalAlignment="Center" Template="{StaticResource CCEyeColorGrid}"/>
                    <!-- Hair (+ Beard if available) -->
                    <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='haaecd709ga04eg4c33gb2a3gd5be989e5146', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ContentControl DataContext="{Binding AppearanceHairstyles}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                    <StackPanel Visibility="{Binding AppearanceBeards.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h5060d1edg2799g4388g9203gc42e380c68f8', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl DataContext="{Binding AppearanceBeards}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                    </StackPanel>
                    <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h6ed36c54g1a3dg4c46g9987gd5882613ae05', Converter={StaticResource TranslatedStringConverter}}"/>
                    <ListBox HorizontalAlignment="Center" ItemContainerStyle="{StaticResource AppearanceOptionStyle}" ItemsSource="{Binding HairColorOptions}">
                        <ListBox.Template>
                            <ControlTemplate>
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>
                    </ListBox>
                    <ItemsControl DataContext="{Binding HairColors}" HorizontalAlignment="Center" Template="{StaticResource CCHairColorGrid}"/>
                    <!-- Tattoos -->
                    <StackPanel Visibility="{Binding AppearanceTattoos.Materials.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h3f96b6b8gd682g4b90ga8fdge34ccb965bbd', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl DataContext="{Binding AppearanceTattoos.Materials}" HorizontalAlignment="Center" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                        <StackPanel HorizontalAlignment="Center">
                            <ListBox ItemContainerStyle="{StaticResource AppearanceOptionStyle}" ItemsSource="{Binding AppearanceTattoos.ColorOptions}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                            </ListBox>
                            <ItemsControl DataContext="{Binding AppearanceTattoos}" ItemContainerStyle="{StaticResource ColorCellItemStyle}" Template="{StaticResource CCColorGrid}"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceTattoos.EmptyMaterialSelected}" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </StackPanel>
                    <!-- Makeup -->
                    <StackPanel Visibility="{Binding AppearanceMakeup.Materials.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='hbd793d8fg4b19g4efdga071g112ba7af47dd', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl DataContext="{Binding AppearanceMakeup.Materials}" HorizontalAlignment="Center" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                        <StackPanel HorizontalAlignment="Center">
                            <ListBox ItemContainerStyle="{StaticResource AppearanceOptionStyle}" ItemsSource="{Binding AppearanceMakeup.ColorOptions}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>
                            </ListBox>
                            <ItemsControl DataContext="{Binding AppearanceMakeup}" ItemContainerStyle="{StaticResource ColorCellItemStyle}" Template="{StaticResource CCColorGrid}"/>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AppearanceMakeup.EmptyMaterialSelected}" Value="True">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter Property="IsHitTestVisible" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </ControlTemplate>
            <ControlTemplate x:Key="AppearanceCharacterCreationTemplate">
                <ContentControl Padding="122,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <Control Margin="100,0,0,0" Template="{StaticResource AppearanceTemplate}"/>
                </ContentControl>
            </ControlTemplate>
            <ControlTemplate x:Key="ClassCharacterCreationTemplate">
                <ContentControl Padding="30,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel Margin="0,0,0,100">
                        <TextBlock Style="{StaticResource PanelTitleText}" Text="{Binding Source='h32d1c528g0dfbg4751ga413g275e6d7ba4c3', Converter={StaticResource TranslatedStringConverter}}"/>
                        <StackPanel Margin="0,32,0,0">
                            <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Classes}" Resources="{StaticResource SideBoxesTripleResources}">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Style.Resources>
                                            <System:String x:Key="SoundEventHover">UI_HUD_CC_SelectClass_Hover</System:String>
                                            <System:String x:Key="SoundEventPress">UI_HUD_CC_SelectClass_Press</System:String>
                                        </Style.Resources>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>

                            <Grid Width="1000" HorizontalAlignment="Center" Margin="0,32,0,0">
                            <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Image DataContext="{Binding DummyCharacter.Stats.ClassList[0]}" Grid.Column="0" Grid.Row="1" Style="{DynamicResource ClassIconStyle}"/>
                                <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" HorizontalAlignment="Center" Margin="0,0,0,-80" Style="{StaticResource PanelTitleText}" Text="{Binding DummyCharacter.Stats.ClassList[0].ClassDisplayName}"/>
                                <TextBlock Grid.Column="1" Grid.Row="1" Margin="0,80,0,0" Style="{StaticResource PanelTitleInfoText}" Text="{Binding DummyCharacter.Stats.ClassList[0].ClassDescription}" TextAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Width="700"/>
                            </Grid>
                            <!-- MOD START - God changes -->
                            <StackPanel Visibility="{Binding Gods.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='hd146e00aga3a6g4e42g8068g9271c358dc5b', Converter={StaticResource TranslatedStringConverter}}"/>
                                <ContentControl Margin="0,20,0,0" Tag="{Binding GodInvalid}" Template="{StaticResource ValidationFailedHighlighter}">
                                    <ContentControl DataContext="{Binding Gods}" Template="{DynamicResource Carousel}"/>
                                </ContentControl>
                                <TextBlock Margin="0,20,0,0" Style="{StaticResource PanelInfoText}" Text="{Binding DummyCharacter.Stats.GodDescription}"/>
                            </StackPanel>
                            <!-- MOD END -->
                            <ContentControl DataContext="{Binding ClassProgressionDetails}" Margin="0,20,0,0" Template="{StaticResource SpellBoxesTemplate}" Visibility="Collapsed" x:Name="classSpells"/>
                            <ContentControl Margin="0,0,0,10" Template="{StaticResource SpellPreparationTemplate}" Visibility="Collapsed" x:Name="classSpellPreparation"/>
                        </StackPanel>
                        <StackPanel Visibility="{Binding Subclasses.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h1e67bc9cg0f53g4218g8ce8geb6a6636f141', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ContentControl DataContext="{Binding Subclasses}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                            <TextBlock Margin="0,20,0,0" Style="{StaticResource PanelInfoText}" Text="{Binding DummyCharacter.Stats.ClassList[0].SubclassDescription}"/>
                            <!--<StackPanel Visibility="{Binding Gods.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}"><TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='hd146e00aga3a6g4e42g8068g9271c358dc5b', Converter={StaticResource TranslatedStringConverter}}"/><ContentControl Margin="0,20,0,0" Tag="{Binding GodInvalid}" Template="{StaticResource ValidationFailedHighlighter}"><ContentControl DataContext="{Binding Gods}" Template="{DynamicResource Carousel}"/></ContentControl><TextBlock Margin="0,20,0,0" Style="{StaticResource PanelInfoText}" Text="{Binding DummyCharacter.Stats.GodDescription}"/></StackPanel>-->
                            <ContentControl DataContext="{Binding ClassProgressionDetails}" Margin="0,20,0,0" Template="{StaticResource SpellBoxesTemplate}"/>
                            <ContentControl Margin="0,0,0,30" Template="{StaticResource SpellPreparationTemplate}"/>
                        </StackPanel>
                        <ItemsControl ItemsSource="{Binding ClassPassives}" Visibility="{Binding ClassPassives.Count, Converter={StaticResource CountToVisibleConverter}}" x:Name="classPassives">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,20,0,0">
                                        <TextBlock Style="{StaticResource PanelHeaderText}">
                                            <Run Text="{Binding DisplayName}"/>
                                            <Run Text="{Binding SelectedPassiveCount, StringFormat=' ({0}'}"/>
                                            <Run Text="{Binding MaxSelectedPassiveCount, StringFormat='/{0})'}"/>
                                        </TextBlock>
                                        <ContentControl HorizontalAlignment="Left" Margin="120,0,0,30" Tag="{Binding DataContext.ClassPassiveInvalid, ElementName=classPassives}" Template="{StaticResource ValidationFailedHighlighter}">
                                            <Control DataContext="{Binding Passives}" Margin="0,0,50,0" Template="{StaticResource SelectPassives}"/>
                                        </ContentControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <StackPanel HorizontalAlignment="Center" Visibility="{Binding PassiveFeatures.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <ItemsControl ItemsSource="{Binding PassiveFeatures}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl Template="{DynamicResource ProgressionFeatures}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='ha8e068ccg5974g4e83g9070gefe58efc012f', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Grid DataContext="{Binding DummyCharacter.Stats.ClassList[0].MaxHpIncrease}" HorizontalAlignment="Center" Margin="0,16,0,0" ToolTipService.Placement="Left">
                            <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" Margin="0,20,0,0" Text="{Binding DisplayName}" TextWrapping="Wrap"/>
                            <Grid.ToolTip>
                                <ls:LSTooltip Template="{StaticResource BaseTooltipTemplate}">
                                    <StackPanel>
                                        <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding DisplayName}"/>
                                        <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                                            <i:Interaction.Behaviors>
                                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                            </i:Interaction.Behaviors>
                                        </TextBlock>
                                    </StackPanel>
                                </ls:LSTooltip>
                            </Grid.ToolTip>
                        </Grid>
                        <ContentControl Template="{StaticResource CharacterClassFeatures}" Visibility="{Binding ClassProgressionDetails.IsEmpty, Converter={StaticResource BoolToHiddenConverter}}"/>
                    </StackPanel>
                </ContentControl>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Subclasses.ComboItems.Count}" Value="0">
                        <Setter Property="Visibility" TargetName="classSpells" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="classSpellPreparation" Value="Visible"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SkillsCharacterCreationTemplate">
                <ContentControl Padding="46,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel>
                        <TextBlock Style="{StaticResource PanelTitleText}" Text="{Binding Source='h05d3dcdfgd34fg4ca1gb294gafd882b078d2', Converter={StaticResource TranslatedStringConverter}}"/>
                        <StackPanel Margin="0,0,0,50">
                            <TextBlock Margin="0,12,0,0" Style="{StaticResource PanelTitleInfoText}" ls:TextBlockFormatter.SourceText="{Binding Source='hda608d66g306eg4739g8ea2g974918945bb8', Converter={StaticResource TranslatedStringConverter}}"/>
                            <Grid DataContext="{Binding DummyCharacter.Stats.ProficiencyBonus}" HorizontalAlignment="Center" Margin="0,20,0,0" ToolTip="{StaticResource ManagedTooltip}">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/decorated_box.png" Stretch="None"/>
                                <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Run Text="{Binding DisplayName}"/>
                                    <Run Text="{Binding Value, StringFormat={}{0: +#; -#; -}}"/>
                                </TextBlock>
                            </Grid>
                            <StackPanel Background="Transparent" Margin="0,30,0,0" Visibility="{Binding BackgroundFeatures.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center" Style="{StaticResource SkillHeaderText}" Text="{Binding Source='hb4f4053bg6a73g4eb6gb641g0b835bc3fecf', Converter={StaticResource TranslatedStringConverter}}"/>
                                <ItemsControl ItemsSource="{Binding DummyCharacter.Stats.ProficientSkills}" Margin="128,10,0,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Background="Transparent" Margin="0,8,0,0" Visibility="Collapsed" x:Name="skillItem">
                                                <Image HorizontalAlignment="Left" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/checkMark_skills_selectedBefore.png" Stretch="None"/>
                                                <TextBlock Foreground="{DynamicResource LS_InactivePanelFontColor}" HorizontalAlignment="Left" Margin="44,0,0,0" Text="{Binding DisplayName}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Left"/>
                                                <TextBlock Foreground="{DynamicResource LS_InactivePanelFontColor}" HorizontalAlignment="Right" Margin="0,0,40,0" Text="{Binding SkillSourceLabel}"/>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding SkillSource}" Value="Background">
                                                    <Setter Property="Visibility" TargetName="skillItem" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SkillSource}" Value="Race">
                                                    <Setter Property="Visibility" TargetName="skillItem" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SkillSource}" Value="Class">
                                                    <Setter Property="Visibility" TargetName="skillItem" Value="Visible"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding SkillSource}" Value="Passive">
                                                    <Setter Property="Visibility" TargetName="skillItem" Value="Visible"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                            <ContentControl DataContext="{Binding RaceSkills}" Margin="0,10,0,0" Template="{DynamicResource SkillSelectionBox}">
                                <ContentControl.Resources>
                                    <ControlTemplate x:Key="Title">
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                            <Image Margin="0,0,10,0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_race.png" Stretch="None" VerticalAlignment="Center"/>
                                            <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" Style="{StaticResource SkillHeaderText}" VerticalAlignment="Center" x:Name="txt">
                                                <Run Text="{Binding Source='he5394f55gf6c5g4781g921fg87d4ef5cb689', Converter={StaticResource TranslatedStringConverter}}"/>
                                                <Run Text="{Binding SelectedSkillCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedSkillCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                <Setter Property="Foreground" TargetName="txt" Value="{DynamicResource LS_SecondaryColor}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                            <ContentControl DataContext="{Binding ClassSkills}" Margin="0,10,0,0" Template="{DynamicResource SkillSelectionBox}">
                                <ContentControl.Resources>
                                    <ControlTemplate x:Key="Title">
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                            <Image Margin="0,-10,10,0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_class.png" Stretch="None" VerticalAlignment="Center"/>
                                            <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" Style="{StaticResource SkillHeaderText}" VerticalAlignment="Center" x:Name="txt">
                                                <Run Text="{Binding Source='h5cab4ab6g7b46g46cegb82fg3ea721099318', Converter={StaticResource TranslatedStringConverter}}"/>
                                                <Run Text="{Binding SelectedSkillCount, StringFormat=' ({0}'}"/>
                                                <Run Text="{Binding MaxSelectedSkillCount, StringFormat='/{0})'}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsComplete}" Value="False">
                                                <Setter Property="Foreground" TargetName="txt" Value="{DynamicResource LS_SecondaryColor}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ContentControl.Resources>
                            </ContentControl>
                            <StackPanel HorizontalAlignment="Stretch" Margin="0,20,0,20" Visibility="{Binding UnavailableSkills.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center" Style="{StaticResource SkillHeaderText}" Text="{Binding Source='h5df90331gdf02g44d5gae28g409b309f633f', Converter={StaticResource TranslatedStringConverter}}"/>
                                <ItemsControl ItemsSource="{Binding UnavailableSkills}" Margin="124,10,0,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Background="Transparent" Margin="0,8,0,0" Orientation="Horizontal" Visibility="{Binding Enabled, Converter={StaticResource BoolToVisibleConverter}}">
                                                <Image Margin="0,12,0,0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/checkMark_skills_unavailable.png" Stretch="None" VerticalAlignment="Top"/>
                                                <TextBlock Foreground="{DynamicResource LS_InactivePanelFontColor}" Margin="26,0,0,0" Text="{Binding DisplayName}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Left"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>
            <ControlTemplate x:Key="AbilitiesCharacterCreationTemplate">
                <ContentControl Padding="38,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel>
                        <StackPanel HorizontalAlignment="Center" Margin="100,0,-100,0" Orientation="Horizontal">
                            <TextBlock Margin="0,0,100,0" Style="{StaticResource PanelTitleText}" Text="{Binding Source='h711b5e8bgb67bg43f7gac08g36b2e2466acd', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ContentControl HorizontalAlignment="Center" Tag="{Binding AbilitiesInvalid}" Template="{StaticResource ValidationFailedHighlighter}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="{DynamicResource BigFontSize}" Foreground="{DynamicResource LS_PrimaryColor}">
                                        <Run Text="{Binding UnusedAbilityPoints}"/>
                                        <Run Text="{Binding TotalAbilityPoints, StringFormat='/{0}'}"/>
                                    </TextBlock>
                                </StackPanel>
                            </ContentControl>
                        </StackPanel>
                        <!-- The DataContext Binding to VMCharacter is for Tooltips FindPlayerAndCharacter -->
                        <ItemsControl DataContext="{Binding DummyCharacter}" ItemsSource="{Binding Stats.Abilities}" Margin="0,4,0,0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Template="{StaticResource AbilityAdjusterTemplate}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Margin" Value="0,0,0,-50"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <Grid DataContext="{Binding DummyCharacter.Stats.ProficiencyBonus}" HorizontalAlignment="Center" Margin="0,32,0,0" ToolTip="{StaticResource ManagedTooltip}">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/decorated_box.png" Stretch="None"/>
                            <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Run Text="{Binding DisplayName}"/>
                                <Run Text="{Binding Value, StringFormat={}{0: +#; -#; -}}"/>
                            </TextBlock>
                        </Grid>
                        <ls:LSButton Command="{Binding DataContext.UseRecommendedAbilities, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Content="{Binding Source='h44d84d6fg14d8g4606gb563gf458f155defa', Converter={StaticResource TranslatedStringConverter}}" IsEnabled="{Binding CanUseRecommendedAbilities}" Margin="0,40,0,20" SoundID="UI_HUD_CC_Recommended" Template="{DynamicResource TextButtonTemplate}">
                            <ls:LSButton.Resources>
                                <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_d.png</ImageSource>
                                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_h.png</ImageSource>
                                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_p.png</ImageSource>
                                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/smallBtn_disabled.png</ImageSource>
                            </ls:LSButton.Resources>
                        </ls:LSButton>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>
            <ControlTemplate x:Key="CompanionCharacterCreationTemplate">
                <ContentControl Padding="34,0,0,0" Template="{StaticResource CommonCharacterCreationPanel}">
                    <StackPanel>
                        <TextBlock Style="{DynamicResource PanelTitleText}" Text="{Binding Source='h0606bec2g5227g499ag8f4bg9ab2589ccded', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Bottom"/>
                        <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h6020727bge0e3g4de7gaf3ag469c3b32b3d2', Converter={StaticResource TranslatedStringConverter}}"/>
                        <ContentControl Template="{StaticResource BoxedItemSelection}" DataContext="{Binding Races}" Margin="0,32,0,0" Resources="{StaticResource SideBoxesTripleResources}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Style.Resources>
                                        <System:String x:Key="SoundEventHover">UI_HUD_CC_SelectRace_Hover</System:String>
                                        <System:String x:Key="SoundEventPress">UI_HUD_CC_SelectRace_Press</System:String>
                                    </Style.Resources>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <StackPanel Margin="0,32,0,0" Visibility="{Binding Subraces.ComboItems.Count, Converter={StaticResource CountToVisibleConverter}}">
                            <TextBlock Style="{StaticResource PanelHeaderText}" Text="{Binding Source='h29d1d637g94bbg4f11g9bdfgbe0042b60e40', Converter={StaticResource TranslatedStringConverter}}"/>
                            <ContentControl DataContext="{Binding Subraces}" Margin="0,20,0,0" Template="{DynamicResource Carousel}"/>
                        </StackPanel>
                        <TextBlock Margin="0,32,0,0" Style="{StaticResource PanelTitleInfoText}" Text="{Binding DummyCharacter.Stats.RaceDescription}"/>
                        <ContentControl DataContext="{Binding RaceProgressionDetails}" Template="{StaticResource SpellBoxesTemplate}"/>
                        <Control Template="{StaticResource AppearanceTemplate}"/>
                    </StackPanel>
                </ContentControl>
            </ControlTemplate>
        </ResourceDictionary>
    </ls:UIWidget.Resources>
    <Grid>
        <ls:LSButton Command="{Binding ExitCharacterCreation}" HorizontalAlignment="Right" SoundID="UI_HUD_CC_Accept" Style="{StaticResource CloseButton}" VerticalAlignment="Top"/>
        <Control HorizontalAlignment="Center" Margin="-224,10,224,0" Template="{StaticResource CharacterCreationStepButtons}" VerticalAlignment="Top"/>
        <ls:LSButton Command="{Binding PrevCharacterCreationStep}" HorizontalAlignment="Left" Margin="100,56,0,0" SoundID="UI_HUD_CC_Accept" Template="{DynamicResource NavButton}" VerticalAlignment="Top">
            <ls:LSButton.Resources>
                <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_back_d.DDS" x:Key="Icon"/>
                <BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_back_h.DDS" x:Key="IconHighlight"/>
                <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/topNav_back_d.png</ImageSource>
                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/topNav_back_h.png</ImageSource>
                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/topNav_back_p.png</ImageSource>
                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/topNav_back_disabled.png</ImageSource>
            </ls:LSButton.Resources>
            <ls:LSButton.Style>
                <Style TargetType="ls:LSButton">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ls:LSButton.Style>
        </ls:LSButton>
        <Grid HorizontalAlignment="Left" Margin="30,0,0,0" VerticalAlignment="Bottom">
            <Control Template="{StaticResource CharacterCardTemplate}">
                <Control.Style>
                    <Style TargetType="Control">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Control.Style>
            </Control>
        </Grid>
        <Grid HorizontalAlignment="Center" Margin="-600,0,0,0" VerticalAlignment="Bottom">
            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/buttonPane_bg_center.DDS" Stretch="None"/>
            <StackPanel HorizontalAlignment="Center" Margin="-20,0,0,0" Orientation="Horizontal" VerticalAlignment="Bottom">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
                                                <DiscreteBooleanKeyFrame KeyTime="00:00:01" Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Hidden"/>
                                    <Condition Binding="{Binding CharacterCreationStep}" Value="Finish"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Visible"/>
                                    <Condition Binding="{Binding CharacterCreationStep}" Value="Finish"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}"/>
                                                <DiscreteObjectKeyFrame KeyTime="00:00:01" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Image Margin="0,0,0,-8" Panel.ZIndex="0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/BigBtn_sideDecor.png" Stretch="None" VerticalAlignment="Center"/>
                <ls:LSButton HorizontalAlignment="Center" Margin="-90,0,-90,0" Panel.ZIndex="1" VerticalAlignment="Center">
                    <ls:LSButton.Style>
                        <Style BasedOn="{StaticResource BigButtonStyle}" TargetType="ls:LSButton">
                            <Setter Property="IsEnabled" Value="{Binding IsCharacterComplete}"/>
                            <Setter Property="Content" Value="{Binding Source='h06b74424gf3bdg4b6cgbe63g84b32198e162', Converter={StaticResource TranslatedStringConverter}}"/>
                            <Setter Property="Command" Value="{Binding FinishCreating}"/>
                            <Setter Property="SoundID" Value="UI_HUD_CC_VentureForth_MC"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=multiplayer, Path=Visibility}" Value="Visible"/>
                                        <Condition Binding="{Binding CurrentPlayer.Ready}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Content" Value="{Binding Source='ha76ad417g8e0fg4767g9af3gbfd82ca27cfb', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ls:LSButton.Style>
                </ls:LSButton>
                <Image Margin="0,0,0,-8" Panel.ZIndex="0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/BigBtn_sideDecor.png" Stretch="None" VerticalAlignment="Center">
                    <Image.RenderTransform>
                        <ScaleTransform CenterX="80" ScaleX="-1"/>
                    </Image.RenderTransform>
                </Image>
            </StackPanel>
        </Grid>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/contentPane.png" Stretch="None"/>
            <Control Height="1920" MaxHeight="1920" VerticalAlignment="Bottom">
                <Control.Style>
                    <Style BasedOn="{StaticResource {x:Type Control}}" TargetType="Control">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Origin">
                                <Setter Property="Template" Value="{StaticResource OriginCharacterCreationTemplate}"/>
                                <Setter Property="Margin" Value="0,0,-200,0"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Race">
                                <Setter Property="Template" Value="{StaticResource RaceCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Appearance">
                                <Setter Property="Template" Value="{StaticResource AppearanceCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Class">
                                <Setter Property="Template" Value="{StaticResource ClassCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Skills">
                                <Setter Property="Template" Value="{StaticResource SkillsCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Abilities">
                                <Setter Property="Template" Value="{StaticResource AbilitiesCharacterCreationTemplate}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
                                <Setter Property="Template" Value="{StaticResource CompanionCharacterCreationTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Control.Style>
            </Control>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <ContentControl HorizontalAlignment="Left" Margin="20,0,0,20" Template="{StaticResource MultiplayerPanelTemplate}" VerticalAlignment="Bottom" x:Name="multiplayer"/>
    </Grid>
</ls:UIWidget>