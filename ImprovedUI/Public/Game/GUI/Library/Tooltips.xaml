<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    mc:Ignorable="d">

    <!-- The default "Show Delay" (milliseconds) for Tooltips -->
    <System:Int32 x:Key="ToolTipInitialShowDelay">0</System:Int32>
    <!-- The show delay for world surface tooltips -->
    <System:Int32 x:Key="SurfaceToolTipInitialShowDelay">1000</System:Int32>
    <System:Double x:Key="SurfaceTooltipTextWidth">472</System:Double>

    <System:Int16 x:Key="ExpandedSectionCount">1</System:Int16>

    <System:Double x:Key="TooltipStripOpacity">0.2</System:Double>

    <System:Single x:Key="FloatZero">0</System:Single>

    <!-- Tooltip Sizes -->
    <System:Double x:Key="MinNarrowTooltipContentWidth">500</System:Double>
    <System:Double x:Key="MaxNarrowTooltipContentWidth">630</System:Double>
    <System:Double x:Key="MaxTooltipContentWidth">789</System:Double>
    <System:Double x:Key="MaxWideTooltipContentWidth">860</System:Double>
    <System:Double x:Key="MaxCompareTooltipContentWidth">2000</System:Double>
    <System:Double x:Key="MaxCombatEntryTooltipWidth">2000</System:Double>
    <System:Double x:Key="StatTooltipMinWidth">720</System:Double>
    <System:Double x:Key="DetailSectionWidth">750</System:Double>
    <System:Double x:Key="SurfaceTooltipContentWidth">668</System:Double>
    <System:Double x:Key="SurfaceTooltipMinHeight">100</System:Double>

    <System:Double x:Key="MaxWidthOnCollisionWithImage">550</System:Double>

    <!-- Tooltip Spaces -->
    <System:Double x:Key="DefaultSpace">16</System:Double>
    <Thickness x:Key="DefaultMarginTop">0,16,0,0</Thickness>
    <Thickness x:Key="DefaultMarginBottom">0,0,0,16</Thickness>
    <Thickness x:Key="DefaultMarginTopBottom">0,16</Thickness>

    <System:Double x:Key="SubtitleToTitleSpace">-4</System:Double>
    <Thickness x:Key="SubtitleMargin">0,-4,0,16</Thickness>

    <!-- Tooltip Colors -->
    <SolidColorBrush x:Key="TooltipColor.Primary" Color="{Binding Source={StaticResource LS_baseTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Secondary" Color="{Binding Source={StaticResource LS_accent100TxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Tertiary" Color="{Binding Source={StaticResource LS_TertiaryColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.PrimaryDisabled" Color="{Binding Source={StaticResource LS_accent00TxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Title" Color="{Binding Source={StaticResource LS_extraspecialTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.SubTitle" Color="{Binding Source={StaticResource LS_baseTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Highlight" Color="{Binding Source={StaticResource LS_specialTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Tags" Color="{Binding Source={StaticResource LS_NestedTooltipColour}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Special" Color="{Binding Source={StaticResource LS_tint100}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.WarningSoft" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Warning" Color="{Binding Source={StaticResource LS_alertTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Alert" Color="{Binding Source={StaticResource LS_alertTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Bonus" Color="{Binding Source={StaticResource LS_bonusTxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Metamagic" Color="{Binding Source={StaticResource Sorcerer.Metamagic}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Keyword" Color="{Binding Source={StaticResource LS_accent75TxtColor}, Path=Color}"/>
    <SolidColorBrush x:Key="TooltipColor.Lore" Color="{Binding Source={StaticResource loreColor}}"/>

    <!-- Tooltip Icons -->
    <ImageSource x:Key="IconActionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_d.png</ImageSource>
    <ImageSource x:Key="IconActionPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_used.png</ImageSource>
    <ImageSource x:Key="IconActionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_missing.png</ImageSource>

    <ImageSource x:Key="IconBonusActionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_bonusActionPointTT.png</ImageSource>
    <ImageSource x:Key="IconBonusActionPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/bap_used.png</ImageSource>
    <ImageSource x:Key="IconBonusActionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_bonusActionPointTT_missing.png</ImageSource>

    <ImageSource x:Key="IconReactionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_reactionPointTT.png</ImageSource>
    <ImageSource x:Key="IconReactionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_reactionPointTT_missing.png</ImageSource>

    <ImageSource x:Key="IconSpellSlot" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_spellSlotTT.png</ImageSource>
    <ImageSource x:Key="IconSpellSlotUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_spent.png</ImageSource>
    <ImageSource x:Key="IconSpellSlotUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_spellSlotTT_missing.png</ImageSource>

    <ImageSource x:Key="IconWarlockSpellSlot" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock.png</ImageSource>
    <ImageSource x:Key="IconWarlockSpellSlotUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_spent.png</ImageSource>
    <ImageSource x:Key="IconWarlockSpellSlotUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_missing.png</ImageSource>

    <ImageSource x:Key="SorceryPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_d.png</ImageSource>
    <ImageSource x:Key="SorceryPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_spent.png</ImageSource>
    <ImageSource x:Key="SorceryPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_missing.png</ImageSource>
	
	<!-- MOD START - Custom action resources -->
	<ImageSource x:Key="SneakAttack" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_d.png</ImageSource>
    <ImageSource x:Key="SneakAttackDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_spent.png</ImageSource>
    <ImageSource x:Key="SneakAttackDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_spent.png</ImageSource>
	
	<ImageSource x:Key="PsiPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_d.png</ImageSource>
    <ImageSource x:Key="PsiPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_spent.png</ImageSource>
    <ImageSource x:Key="PsiPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_missing.png</ImageSource>

    <ImageSource x:Key="PsiPointMastery" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_d.png</ImageSource>
    <ImageSource x:Key="PsiPointMasteryUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_spent.png</ImageSource>
    <ImageSource x:Key="PsiPointMasteryUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_missing.png</ImageSource>

    <ImageSource x:Key="HitDice" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_d.png</ImageSource>
    <ImageSource x:Key="HitDiceUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_spent.png</ImageSource>
    <ImageSource x:Key="HitDiceUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_missing.png</ImageSource>

    <ImageSource x:Key="RampageDie" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_d.png</ImageSource>
    <ImageSource x:Key="RampageDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_spent.png</ImageSource>
    <ImageSource x:Key="RampageDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_missing.png</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD4" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD4Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD4Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD6" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD6Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD6Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD8" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD8Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD8Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD10" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD10Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD10Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
	
	<ImageSource x:Key="NecroThaum" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Icon.dds</ImageSource>
    <ImageSource x:Key="NecroThaumUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Used.dds</ImageSource>
    <ImageSource x:Key="NecroThaumUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Used.dds</ImageSource>
	<!-- MOD END -->

    <ImageSource x:Key="KiPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki.png</ImageSource>
    <ImageSource x:Key="KiPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_spent.png</ImageSource>
    <ImageSource x:Key="KiPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_missing.png</ImageSource>

    <ImageSource x:Key="Rage" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage.png</ImageSource>
    <ImageSource x:Key="RageUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_spent.png</ImageSource>
    <ImageSource x:Key="RageUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_missing.png</ImageSource>

    <ImageSource x:Key="BardicInspiration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration.png</ImageSource>
    <ImageSource x:Key="BardicInspirationUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_spent.png</ImageSource>
    <ImageSource x:Key="BardicInspirationUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_missing.png</ImageSource>

    <ImageSource x:Key="ChannelDivinity" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_d.png</ImageSource>
    <ImageSource x:Key="ChannelDivinityUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_spent.png</ImageSource>
    <ImageSource x:Key="ChannelDivinityUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_missing.png</ImageSource>

    <ImageSource x:Key="SuperiorityDie" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_d.png</ImageSource>
    <ImageSource x:Key="SuperiorityDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_spent.png</ImageSource>
    <ImageSource x:Key="SuperiorityDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_missing.png</ImageSource>

    <ImageSource x:Key="ArcaneRecoveryPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_d.png</ImageSource>
    <ImageSource x:Key="ArcaneRecoveryPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_spent.png</ImageSource>
    <ImageSource x:Key="ArcaneRecoveryPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_missing.png</ImageSource>

    <ImageSource x:Key="IconMovement" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_movement.png</ImageSource>
    <ImageSource x:Key="IconMovementUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_movement_missing.png</ImageSource>

    <ImageSource x:Key="IconRitualPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_d.png</ImageSource>
    <ImageSource x:Key="IconRitualPointSpent" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_spent.png</ImageSource>
    <ImageSource x:Key="IconRitualPointDisabled" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_disabled.png</ImageSource>

    <ImageSource x:Key="NaturalRecovery">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery.png</ImageSource>
    <ImageSource x:Key="NaturalRecoverySpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_spent.png</ImageSource>
    <ImageSource x:Key="NaturalRecoveryUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_missing.png</ImageSource>

    <ImageSource x:Key="WildShape">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape.png</ImageSource>
    <ImageSource x:Key="WildShapeSpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_spent.png</ImageSource>
    <ImageSource x:Key="WildShapeUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_missing.png</ImageSource>

    <ImageSource x:Key="TidesOfChaos">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_d.png</ImageSource>
    <ImageSource x:Key="TidesOfChaosSpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_spent.png</ImageSource>
    <ImageSource x:Key="TidesOfChaosUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_missing.png</ImageSource>

    <ImageSource x:Key="ResourceDivider" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/resourceDivider.png</ImageSource>

    <ImageSource x:Key="IconMagicDamage" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_magic.png</ImageSource>
    <ImageSource x:Key="IconRange" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_range.png</ImageSource>
    <ImageSource x:Key="IconRadius" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_radius.png</ImageSource>
    <ImageSource x:Key="IconArmorClass" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC.png</ImageSource>
    <ImageSource x:Key="IconArmorClassCharacter" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC_character.png</ImageSource>
    <ImageSource x:Key="IconHanded" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_handedness.png</ImageSource>
    <ImageSource x:Key="IconWeight" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight.png</ImageSource>
    <ImageSource x:Key="IconWeightWarning" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight_warning.png</ImageSource>
    <ImageSource x:Key="IconGold" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_coin.png</ImageSource>
    <ImageSource x:Key="IconAmmunition" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_ammunitionType.png</ImageSource>
    <ImageSource x:Key="IconAttack" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_roll_attack.png</ImageSource>
    <ImageSource x:Key="IconSave" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_roll_save.png</ImageSource>
    <ImageSource x:Key="IconSaveTurn" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_roll_save_onTurn.png</ImageSource>
    <ImageSource x:Key="IconConcentration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_concentration.png</ImageSource>
    <ImageSource x:Key="IconDippable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_dippable.png</ImageSource>
    <ImageSource x:Key="IconFinesse" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_finesse.png</ImageSource>
    <ImageSource x:Key="IconThrown" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_throwable.png</ImageSource>
    <ImageSource x:Key="IconHeavy" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_heavyWeight.png</ImageSource>
    <ImageSource x:Key="IconLight" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_lightWeight.png</ImageSource>
    <ImageSource x:Key="IconLoading" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_loading.png</ImageSource>
    <ImageSource x:Key="IconNoDuelWield" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_noDuelWield.png</ImageSource>
    <ImageSource x:Key="IconReach" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_reach.png</ImageSource>
    <ImageSource x:Key="IconPreparation" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_spellbook.png</ImageSource>
    <ImageSource x:Key="IconStoryItem" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_storyItem.png</ImageSource>
    <ImageSource x:Key="IconWarningSoft" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_warningSoft.png</ImageSource>
    <ImageSource x:Key="IconWarning" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_warning.png</ImageSource>
    <ImageSource x:Key="IconWarningGrey" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_warningGrey.png</ImageSource>
    <ImageSource x:Key="IconCastAbility" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_spellbook.png</ImageSource>
    <ImageSource x:Key="IconCooldown" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_recharge.png</ImageSource>
    <ImageSource x:Key="IconType" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_type.png</ImageSource>
    <ImageSource x:Key="IconRace" >pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/ico_race.png</ImageSource>
    <ImageSource x:Key="IconHealth" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_health.png</ImageSource>
    <ImageSource x:Key="IconSpeed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_speed.png</ImageSource>
    <ImageSource x:Key="IconDuration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_duration.dds</ImageSource>
    <ImageSource x:Key="IconQuote" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_quote.png</ImageSource>
    <ImageSource x:Key="IconResistanceVulnerable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/resistance_vulnerable.png</ImageSource>
    <ImageSource x:Key="IconResistanceResistant" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/resistance_resistant.png</ImageSource>
    <ImageSource x:Key="IconResistanceImmune" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/resistance_immune.png</ImageSource>
    <ImageSource x:Key="IconTarget" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_target.png</ImageSource>
	<ImageSource x:Key="IconProficiency" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_roll_attack.png</ImageSource>
    <ImageSource x:Key="IconProficiencyArmour" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC.png</ImageSource>

    <!-- Tooltip bottom gradient -->
    <Style x:Key="TooltipBottomGradientStyle" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Height" Value="200"/>
        <Setter Property="Margin" Value="-60,0,-60,-35"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Opacity" Value="0.4" />
        <Setter Property="Fill">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Transparent" Offset="0" />
                    <GradientStop Color="{Binding Source={StaticResource LS_guestTxtColor}, Path=Color}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Clip">
            <Setter.Value>
                <PathGeometry Transform="{Binding ElementName=ActualContainer,Path=RenderTransform}">
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="24,0" IsClosed="True">
                            <LineSegment Point="24,172"/>
                            <LineSegment Point="26,177"/>
                            <LineSegment Point="29,181"/>
                            <LineSegment Point="32,183"/>
                            <LineSegment Point="37,186"/>

                            <LineSegment Point="872,186"/>
                            <LineSegment Point="876,183"/>
                            <LineSegment Point="880,181"/>
                            <LineSegment Point="883,177"/>
                            <LineSegment Point="885,172"/>
                            <LineSegment Point="885,0"/>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ActualHeight, ElementName=tooltipContent, Converter={StaticResource LessThanConverter}, ConverterParameter=150}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <!-- Check for supported widths -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="ActualWidth" ElementName="tooltipContent"/>
                                <Binding Source="{StaticResource MaxTooltipContentWidth}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="ActualWidth" ElementName="tooltipContent"/>
                                <Binding Source="{StaticResource MaxWideTooltipContentWidth}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DataContext, ElementName=tooltipContent, Converter={StaticResource TypeConverter}}" Value="ls.VMStat">
                <Setter Property="Clip">
                    <Setter.Value>
                        <PathGeometry Transform="{Binding ElementName=ActualContainer,Path=RenderTransform}">
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="24,0" IsClosed="True">
                                    <LineSegment Point="24,172"/>
                                    <LineSegment Point="26,177"/>
                                    <LineSegment Point="29,181"/>
                                    <LineSegment Point="32,183"/>
                                    <LineSegment Point="39,186"/>

                                    <LineSegment Point="942,186"/>
                                    <LineSegment Point="948,183"/>
                                    <LineSegment Point="952,181"/>
                                    <LineSegment Point="954,177"/>
                                    <LineSegment Point="956,172"/>
                                    <LineSegment Point="956,0"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Rarity gradient -->
    <Style x:Key="TooltipItemRarityRectangleStyle" TargetType="Rectangle">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Height" Value="400"/>
        <Setter Property="Margin" Value="-60,-30,-60,0"/>
        <Setter Property="Opacity" Value="0.4"/>
        <Setter Property="Clip">
            <Setter.Value>
                <PathGeometry Transform="{Binding ElementName=ActualContainer,Path=RenderTransform}">
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="25,600" IsClosed="True">
                            <LineSegment Point="25,20"/>
                            <LineSegment Point="27,17"/>
                            <LineSegment Point="30,14"/>
                            <LineSegment Point="33,11"/>
                            <LineSegment Point="36,10"/>

                            <LineSegment Point="872,10"/>
                            <LineSegment Point="876,11"/>
                            <LineSegment Point="881,16"/>
                            <LineSegment Point="883,18"/>
                            <LineSegment Point="884,20"/>
                            <LineSegment Point="885,28"/>
                            <LineSegment Point="885,600"/>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Common">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Uncommon">
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{DynamicResource ItemRarityColour.UncommonGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Rare">
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{DynamicResource ItemRarityColour.RareGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="VeryRare">
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{DynamicResource ItemRarityColour.VeryRareGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Legendary">
                <Setter Property="Opacity" Value="0.6"/>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="{DynamicResource ItemRarityColour.LegendaryGradientBottom}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ls:LSTooltip x:Key="ManagedTooltip" IsHitTestVisible="False" >
        <ls:LSTooltip.Style>
            <Style TargetType="ls:LSTooltip" BasedOn="{StaticResource {x:Type ls:LSTooltip}}">
                <Setter Property="Content" Value="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=PlacementTarget.DataContext ,RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                        <Setter Property="Content" Value="{Binding Path=PlacementTarget.DataContext ,RelativeSource={RelativeSource Mode=Self}}" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=Parent.DataContext ,RelativeSource={RelativeSource Mode=Self},Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                        <Setter Property="Content" Value="{Binding Path=Parent.DataContext ,RelativeSource={RelativeSource Mode=Self}}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ls:LSTooltip.Style>
    </ls:LSTooltip>
    

    <!-- Tooltip Styles -->
    <Style x:Key="TooltipVerticalSpacer" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,16" />
    </Style>

    <Style x:Key="TooltipBaseTextStyle" TargetType="TextBlock" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Primary}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TooltipDefaultTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Title}" />
    </Style>

    <Style x:Key="TooltipItemRarityTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipTitleStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Title}" />
        <Style.Triggers>
            <!-- Common is not displayed -->
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Uncommon">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Uncommon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Rare">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Rare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="VeryRare">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.VeryRare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Item.Rarity}" Value="Legendary">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Legendary}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipCtxTransStringDefaultTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding NameCTS.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NameCTS.Text}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipCtxTransStringTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringDefaultTitleStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Title}" />
    </Style>

    <Style x:Key="TooltipTitleNoCollapseStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Title}" />
    </Style>

    <Style x:Key="TooltipSubTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.SubTitle}" />
        <Setter Property="Margin" Value="{StaticResource SubtitleMargin}" />
    </Style>

    <Style x:Key="TooltipSubTitleNoCollapseStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.SubTitle}" />
        <Setter Property="Margin" Value="{StaticResource SubtitleMargin}" />
    </Style>

    <Style x:Key="TooltipBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Primary}" />
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipStringBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Primary}" />
    </Style>

    <Style x:Key="TooltipCtxTransStringBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipStringBodyStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Description.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Description.Text}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipGeneralTextDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="LineHeight" Value="{StaticResource TooltipSmallLineHeight}"/>
    </Style>

    <Style x:Key="TooltipDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="Width" Value="{StaticResource MaxTooltipContentWidth}" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
    </Style>

    <Style x:Key="TooltipAdjustableDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDescriptionStyle}">
        <Setter Property="ls:MeasurementProperties.CalculateMeasures" Value="True" />
        <Style.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                        <Binding Path="(ls:MeasurementProperties.MeasuresRect).y" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).(ls:MeasurementProperties.MeasuresRect).Height" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Width" Value="{StaticResource MaxWidthOnCollisionWithImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipSpecialDescriptionStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Lore}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="ls:MeasurementProperties.CalculateMeasures" Value="True" />
        <Setter Property="Width" Value="726" />
        <Style.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                        <Binding Path="(ls:MeasurementProperties.MeasuresRect).y" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).(ls:MeasurementProperties.MeasuresRect).Height" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Width" Value="500" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipCtxTransStringDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}">
        <Setter Property="Width" Value="{StaticResource MaxTooltipContentWidth}"/>
        <Setter Property="Margin" Value="{StaticResource DefaultMarginTop}"/>
    </Style>

    <Style x:Key="TooltipCtxTransStringAdjustableDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringDescriptionStyle}">
        <Style.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                        <Binding Path="(ls:MeasurementProperties.MeasuresRect).y" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).(ls:MeasurementProperties.MeasuresRect).Height" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Width" Value="{StaticResource MaxWidthOnCollisionWithImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipUnavailableReasonStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Alert}" />
        <Setter Property="Width" Value="{StaticResource DetailSectionWidth}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TooltipMainIconStyle" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="MaxWidth" Value="328" />
        <Setter Property="MaxHeight" Value="328" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Margin" Value="0,-85,-95,0" />
        <Setter Property="ls:MeasurementProperties.CalculateMeasures" Value="True" />
    </Style>

    <Style x:Key="TooltipBoostIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
    </Style>

    <Style x:Key="TooltipBoostIconBorderStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="StrokeThickness" Value="4" />
        <Setter Property="Stroke" Value="{StaticResource TooltipColor.Primary}" />
    </Style>

    <Style x:Key="TooltipBoostIconBorderDashedStyle" TargetType="Rectangle" BasedOn="{StaticResource TooltipBoostIconBorderStyle}">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="StrokeThickness" Value="2" />
    </Style>

    <Style x:Key="TooltipSectionTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Secondary}" />
    </Style>

    <Style x:Key="TooltipSectionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipStringBodyStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Highlight}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipSectionAdjustableTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="ls:MeasurementProperties.CalculateMeasures" Value="True" />
        <Setter Property="Width" Value="{StaticResource MaxTooltipContentWidth}" />
        <Style.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                        <Binding Path="(ls:MeasurementProperties.MeasuresRect).y" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="(ls:AttachedProperties.InheritedTag).(ls:MeasurementProperties.MeasuresRect).Height" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Width" Value="{StaticResource MaxWidthOnCollisionWithImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipOverrideTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Override}" Value="Worse">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideWorse}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Equal">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideEqual}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Better">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideBetter}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Different">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideDifferent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipBottomTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Special}" />
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
    </Style>

    <Style x:Key="RomanNumeralLevelImage" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Level}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="1">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_01.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="2">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_02.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="3">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_03.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="4">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_04.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="5">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_05.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="6">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_06.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="7">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_07.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="8">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_08.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="9">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_09.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="10">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_10.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#region Tooltip narrow base-->
    <Style x:Key="NarrowTooltipDescriptionText" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Special}" />
    </Style>

    <Style x:Key="NarrowTooltipModifierText" TargetType="TextBlock" BasedOn="{StaticResource NarrowTooltipDescriptionText}">
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <!--#endregion-->

    <!-- Tooltip ctxTransString parameter unit conversion -->
    <Style x:Key="TooltipUnitParamRun" TargetType="ls:LSRun">

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Range" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Weight" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}"/>
            </MultiDataTrigger>

            <!-- Check damage types -->
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Tooltip ctxTransString parameter unit conversion END-->

    <Style x:Key="StatusDurationShortTextStyle" TargetType="TextBlock">
        <Setter Property="ls:TextBlockFormatter.SourceText" Value="" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DurationType}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Duration}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Permanent">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h82302eb4g8ff2g4ffegbe60gc579e1ae23af',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="FromSurface">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb2a148a4g90e3g4726g91a4g6f75d101d8a9',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Aura">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h51826368gf983g41a8gaf5cg0b141e1a1239',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="UntilRest">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h50ea69dagf61eg466fga47eg530c55933114',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Environment">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hffed1068gce4cg4b81g99c0g9e7967ed129c',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DamageText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource BigFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Title}" />
    </Style>

    <ControlTemplate x:Key="DamageTypeNameTemplate" TargetType="Control">
        <TextBlock x:Name="DamageType"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h16a3bf2egf261g4952g8df2ga6c302681bdd',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2173a7c3g3e9ag45e4g9059g63ee74145fcb',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h07a51f3dgc8ecg4d95g807fg27d92fbaf15c',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h6920ee6dga8aag49ffg98d3g4beb0518d3b4',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h24650d5cgd8afg46e7ga817g87a20ae8da3d',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5c48deedg618bg4c80g83c8g9a8c2e6c1125',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd00151c9g54bfg4d57gacaag97ce8b276bd3',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h647de1eege687g4fe6g83dbg732e1c6e117b',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h04def29eg5741g4282ga637ge31d55bc542f',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he341e7a8gc1a7g4d24g95a9g94465f8b9c46',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3023a555g9355g4982gb857g036adcc93e96',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h97e5a269gf0ecg4481g9ccbge4a60aadfcaa',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter TargetName="DamageType" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1e927ef5g95e7g4c38g8534g39dcb3d42691',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DamageValueTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AbilityTooltipIconStyle" TargetType="Image" BasedOn="{StaticResource TooltipMainIconStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Ability}" Value="Strength">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityStrength.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Constitution">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityConstitution.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Dexterity">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityDexterity.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Intelligence">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityIntelligence.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Wisdom">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityWisdom.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Charisma">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityCharisma.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="DiceImage" TargetType="Control">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Path x:Name="colourPath" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="88" Height="88" StrokeThickness="10" Style="{DynamicResource DiceBgStyle}">
                <Path.Data>
                    <Geometry>M11,26 L44,6 L76,26 V63 L44,82 L11,63 Z</Geometry>
                </Path.Data>
            </Path>
            <Image x:Name="frontImg" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d20.png" Stretch="None"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d4">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d4.png" />
                <Setter TargetName="colourPath" Property="Data">
                    <Setter.Value>
                        <Geometry>M11,58 L44,12 L76,58 L44,77 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d6">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d6.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d8">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d8.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d10">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d10.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,39 L44,13 L73,42 L72,54 L45,75 L16,52 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d12">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d12.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M63.958,70.734L44.006,77.226,24.057,70.715,11.732,53.688,11.738,32.65,24.073,15.635,44.026,9.144l19.949,6.511L76.3,32.681,76.293,53.72Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RollDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="#6da4e7" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage" >
                <Setter Property="Fill" Value="{DynamicResource TooltipColor.Bonus}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                <Setter Property="Fill" Value="{DynamicResource TooltipColor.Alert}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DamageDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="White" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Fill" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Fill" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Fill" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Fill" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Fill" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Fill" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Fill" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Fill" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Fill" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DamageDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource DamageDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding .}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="DieItemContainerStyle"  TargetType="{x:Type ContentPresenter}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Panel.ZIndex" Value="99" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Panel.ZIndex" Value="98" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                <Setter Property="Panel.ZIndex" Value="97" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="3">
                <Setter Property="Panel.ZIndex" Value="95" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="4">
                <Setter Property="Panel.ZIndex" Value="94" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="5">
                <Setter Property="Panel.ZIndex" Value="93" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="6">
                <Setter Property="Panel.ZIndex" Value="92" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="7">
                <Setter Property="Panel.ZIndex" Value="91" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="8">
                <Setter Property="Panel.ZIndex" Value="90" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="9">
                <Setter Property="Panel.ZIndex" Value="96" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DieListStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="AlternationCount" Value="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="128" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DieItemContainerStyle}" />
        <Setter Property="Margin" Value="-52,-100,0,-100"/>
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource LessThanConverter}, ConverterParameter=6}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}" Value="2">
                <Setter Property="Margin" Value="-32,-100,0,-100"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource LessThanConverter}, ConverterParameter=6}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Margin" Value="-10,-100,0,-100"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=5}" Value="True">
                <Setter Property="RenderTransform" >
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="-18,-100,0,-100"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DieIconStyle"  TargetType="ContentControl">
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <TransformGroup >
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <RotateTransform Angle="0"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="40,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="0" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="1" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,25"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="2" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,25"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="3" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,50"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="4" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,50"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="5" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,75"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="6" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="7" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,100"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="8" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="0"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DieItemContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource DamageDiceSet}" Content="{Binding .}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate x:Key="RollDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding}"/>
        </Grid>
    </DataTemplate>

    <!--
        Tooltip ControlTemplates
    -->


    <DataTemplate x:Key="HeaderBodyTemplate">
        <StackPanel>
            <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap" Margin="0,10,0,32" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDefaultTextStyle}" TextWrapping="Wrap" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding ., Converter={StaticResource TranslatedStringConverter}}"/>

        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="HeaderBodyLocaStringTemplate">
        <StackPanel>
            <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleStyle}" TextWrapping="Wrap" Margin="0,10,0,32" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
            <TextBlock Style="{StaticResource TooltipDefaultTextStyle}" TextWrapping="Wrap" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding .}"/>

        </StackPanel>
    </DataTemplate>

    <Style x:Key="InlineTooltip" TargetType="ls:LSTooltip" BasedOn="{StaticResource LSTooltipStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Inline, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="PlayerId" Value="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=Inline.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=InlineParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=InlineParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>
    <Style x:Key="InlineTagTooltip" TargetType="ls:LSTooltip" BasedOn="{StaticResource InlineTooltip}">
        <Setter Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
    </Style>


    <!-- Special Tooltip Template without pin message (it must be added manually) -->
    <ControlTemplate x:Key="NoPinTooltipTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage Style="{DynamicResource DefaultTooltip9Slice}">
            <Grid x:Name="tooltipContentParent">
                <Rectangle Style="{DynamicResource TooltipBottomGradientStyle}" />
                <ContentPresenter x:Name="tooltipContent" MaxWidth="{DynamicResource MaxTooltipContentWidth}" />
            </Grid>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Show"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Hide"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Special tooltip template for surfaces -->
    <ControlTemplate x:Key="BaseSurfaceTooltipTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage Style="{StaticResource DefaultTooltip9Slice}">

            <ContentPresenter x:Name="tooltipContent" MaxWidth="{DynamicResource MaxTooltipContentWidth}" />

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Show"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Hide"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </ls:LSNineSliceImage>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data), RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="tooltipContent" Property="Width" Value="{DynamicResource MaxWideTooltipContentWidth}"/>
                <Setter TargetName="tooltipContent" Property="MaxWidth" Value="{DynamicResource MaxWideTooltipContentWidth}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--
        LSSpan Styling
    -->

    <Style x:Key="LSSpanStyle" TargetType="ls:LSSpan" BasedOn="{StaticResource BaseSpanStyle}">
        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        <Setter Property="ls:TooltipExtender.PlayerId" Value="{Binding Path=PlayerId, RelativeSource={RelativeSource AncestorType=ls:LSElementCopy}}"/>
        <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=(ls:TooltipExtender.Owner), RelativeSource={RelativeSource AncestorType=TextBlock}}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type ls:LSTooltip}}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ., ElementName=tooltipContent, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding TagType, RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareStringConverter}, ConverterParameter='NoStyle'}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Tags}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Tags}" />
            </MultiDataTrigger>

            <Trigger Property="TagTooltip" Value="stub">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" Tag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Stats -->
            <Trigger Property="TagTooltip" Value="ArmourClass">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.ArmorClass, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HitPoints">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Health, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.MeleeAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.RangedAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellAttackBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.SpellAttackBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellDifficultyClass">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.SpellDifficultyCheck, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ProficiencyBonus">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.ProficiencyBonus, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MovementSpeed">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.MovementResource, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Abilities -->
            <Trigger Property="TagTooltip" Value="Strength">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dexterity">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Constitution">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intelligence">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Wisdom">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Charisma">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Skills -->
            <Trigger Property="TagTooltip" Value="Deception">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intimidation">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Performance">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Persuasion">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[5].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Acrobatics">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SleightOfHand">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Stealth">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[1].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Arcana">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="History">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Investigation">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Nature">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Religion">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[3].Skills[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Athletics">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[0].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AnimalHandling">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[0], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Insight">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[1], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Medicine">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[2], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Perception">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[3], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Survival">
                <Setter Property="DataContext" Value="{Binding Path=(ls:TooltipExtender.Owner).Stats.Abilities[4].Skills[4], RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Concepts -->
            <Trigger Property="TagTooltip" Value="Abilities">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h65fb6cd0g8607g4934gb7c4g104c02bc16b9" Tag="hd1f220a4g25dcg4b09g89c7g835f1226e19b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7cfd682g4dc5g48a2gb092gf0a95867a56c" Tag="hfe8e49d4gaf99g4b2dg8daag33c2570ced45" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heb5af8afgc5feg469cg8511gb6e0ce14510f" Tag="ha064084dg4b5cg45cbg8645ge19ab3b65e21" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Action">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hfcd95fc3g4707g4262g80f7gacb371aa8e92" Tag="hba0d4fd0ga762g43bfgb86fg1c9c8982c6b2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Advantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h079123e0geee2g410cgaaf3g7978a3dafdc7" Tag="h986f906agb172g4956g9567g5cbd32150349" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AlwaysPrepared">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7ce4a41g56a9g4abdg9dbcg311275bfb868" Tag="h9d690e3fg8baag4917ga818gf127b3da7b93" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ArmourProficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he15abbcag7b88g4a1dg912cgfd0eb15c18af" Tag="hc59029cbgfc04g4b48gaef3gee950831af87" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AttackRoll">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4a99c2a6g82e6g42e4ga19dg92a27c7c8b77" Tag="h2f87537agd7e2g4e34g9dd7gf3a6f9baf298" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Background">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3d129eb2g502dg477fgbfe7gad33c8b508a9" Tag="hd020153fg6a95g4ebegb6c3g043bb05c7bba" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="BackgroundGoals">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5b3d2eb3g5ec9g47acg9d0ag456e4dae5d00" Tag="hb217debcgddbfg4a07g9822g0bdc63c1c178" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CampSupplies">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5ea38d02gf6cbg407aga1adg879a5b259f8d" Tag="h3cef439fg92cdg4b5bgb3fdg5fd5db63d33a" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Cantrip">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9dd3b484g4092g4f1bgb272gb64846326fdb" Tag="h7175e72dgff3ag4f4cg99e0g98b787956275" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CarryWeight">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h752667e2g5fc4g4d9cg851eg953eb1031379" Tag="h5993ac14ga81fg4902g90bage47c540e3fad" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Check">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h00e54a74ga0acg4b44g94d1gb31afcc7cd25" Tag="h3cbb470dg461bg4744gab02g515b1a981cbf" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="DifficultyClass">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" Tag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dippable">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0aca5069g42a6g4f69ga43ag1622334c5324" Tag="hb4d757c3g2661g4ccbg9572g14fc97502d31" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Disadvantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3723f6abgc46cg42b4gb95eg2449e683e25a" Tag="h8d1a14e2gc17cg4ab6gbe5dg85557ae06a7e" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Downed">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h82d41284g4437g4202g859cgb7470b39bc22" Tag="h371b7c23g65beg45f4g8680gbcd03907e57f" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Encumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h04852025ga3c0g47b2gbe02g7d22a3d12ab8" Tag="h4bffc7fbgfeaag44d9gb179gfd55c807b440" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Finesse">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h69e74667g16c7g4826g823ege6fc84ef8d77" Tag="h95e41a96g0bbcg4932gabf4g1fda223a1ee9" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Thrown">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hed951236g8283g4cafgb782g053ae0e08595" Tag="h608694d6g3d2fg46acg8411gba7ce43e6a5e" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HeavilyEncumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hde40b598g2937g47f5ga342g2480628c8106" Tag="h18065f0dg0169g4560gaff3g46fea09fd366" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HeavyArmour">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he3e40c35g7afeg4727g9233gd5b818f8a2c1" Tag="h378386abgaaa6g4852gb788g7f47b59ded25" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HighGroundRules">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0e6581dag3136g4990gb14eg8a3f8f2ebba1" Tag="h34b3cc1ag0d97g481fg9bdfge1233821e3cb" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Inspiration">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd14181dbgc234g48f9gbb1dg4a014583669e" Tag="h62619d26gd851g48a3g9c91ge21ad5928086" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Light">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h36799934g476eg45beg9ca6geb9589e75380" Tag="h5cc9c7e9g048ag43c7g8b08gba53ec2423a2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="LongRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h631e68c7g95f2g4437ga8cfg13e7449d375f" Tag="h8d993cfag30d7g474fgaf29gdcdc3cd67bdc" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hb7b21e1fg9371g4c90ga8ddg2bf398db2ea2" Tag="hd8904247g6498g4ff6g8285g89651ca68092" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heda1f51fge118g41d4gb3abg9548ac7a7243" Tag="h2a2aa88bg8cfbg40c9gae2egffc0e0996787" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="OpportunityAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4e93ecd7g953cg4af6gbddag3a698f2a6d0f" Tag="he003d2eeg8a1eg4b5fgbc67g1e78799e8610" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="PreparedSpells">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd23c59cegee91g48b4ga353g1b626f6f801b" Tag="h9d690e3fg8baag4917ga818gf127b3da7b93" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Proficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h92a7f788g9fd4g419eg9c88gebd9d9bd1667" Tag="hc36a544fg6ae1g45f0gb74aga36d2961a9b1" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h56d23fbbg59ddg491fg86e5g8999d98bcb09" Tag="h8b85b657g17fbg41fdg9b25g44d2d80d1700" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h31e87ff2g4eb9g4464gafdcg08e7468ed844" Tag="h68f90b52gfa7cg4be3ga606gfe6cef184567" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Reach">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h88026dfbgaedbg446fga24eg7397ffff5a2c" Tag="h4ca07d0bg10cag4f06g9bc6gf7ac4fe61322" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SavingThrow">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9cca53d7g6b66g4224g94cdg918af4ee01fe" Tag="he05df610g11a9g404bgb057g9456bdbe6883" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ShortRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5f8707edgc150g4445gaefeg8fe0236fca03" Tag="h199b711fg12f1g49c1ga68dg576a864a1fc2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Skill">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h499b7b98g1d6bg4cb9g87afgf4425c5e8dd1" Tag="h8caa094cg4365g483fgb63ag3e6267854a33" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SkillCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="had597db8g1555g4d1cgb0e5g788de86ebf19" Tag="he4acf6a5gd317g410fgada7gddc109ec2f5b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h2ace8502g2abag418ag96bbgfbe3b64d60dc" Tag="hbdeb8e2fg50e9g424fgbe6dg248268275452" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellcastingAbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hab459fecge010g4b13g8e54gb99d5a3a5620" Tag="h29093bb2g6cf3g4eadgba58ge1cefb1019eb" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TemporaryHitPoints">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h55f7caaag8004g4057g9712g9fbfc31bfc49" Tag="h8aaf9bf5g6eb5g4417g9a93g89319d3c7c41" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TwoHanded">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he07ef4d4gd151g4071gbcb4ge33046cb0453" Tag="hc18aa105g6477g47dcg9962gc0554eda3c77" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Versatile">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h755f7955g27b6g499fgb0aag0b51d65fc7a7" Tag="h3aa10065g9edcg407bg82f8g4c445f4c0ae2" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WarlockSpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h045fee7agb340g404cg8b4cgd638ab01f04e" Tag="h89f33eeeg9befg4fa7g96f6g715568bf3e9b" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WildMagic">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h63415200gb6c7g41c2g9d2dg8a0341e5afe3" Tag="h04ded653gcf76g4ad4gaa36g523db04a9487" Style="{StaticResource InlineTagTooltip}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Extended types -->
            <Trigger Property="TagType" Value="Spell">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="Status">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="Passive">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TagType" Value="ActionResource">
                <Setter Property="DataContext">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource TooltipContextMultiConverter}">
                            <Binding Path="TagType" RelativeSource="{RelativeSource Mode=Self}" />
                            <Binding Path="TagTooltip" RelativeSource="{RelativeSource Mode=Self}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" Tag="" ls:TooltipExtender.Owner="{Binding Path=Inline.Parent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}"/>

    <!--
        Strips
    -->
    <Style x:Key="TooltipStripDP" TargetType="Grid">
        <Setter Property="Margin" Value="-40,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Base Tooltip Strip Template -->
    <ControlTemplate x:Key="TooltipStripTemplate" TargetType="ContentControl">
        <Grid>
            <!-- Background Images -->
            <Grid x:Name="StripBackground" Style="{StaticResource TooltipStripDP}" >
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_hStrip.png" Stretch="Fill" TileMode="Tile" AlignmentY="Top" Opacity="{StaticResource TooltipStripOpacity}"/>
                </Grid.Background>
            </Grid>

            <!-- Text and other content -->
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Magical Properties -->
    <ControlTemplate x:Key="TooltipStripMagicalPropertiesTemplate">
        <ls:LSNineSliceImage x:Name="Container" Slices="4,18" IconWidth="56" Margin="-40,0" Padding="38,40" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_full_magical_bg.png">
            <ContentPresenter x:Name="Content" VerticalAlignment="Center" />
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Metamagic section -->
    <ControlTemplate x:Key="TooltipStripMetamagicTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage x:Name="Container" Slices="4,18" IconWidth="56" Margin="-40,0" Padding="38,40" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_full_metamagic_bg.png">
            <ContentPresenter x:Name="Content" VerticalAlignment="Center" />
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip Strip Template for info section -->
    <Style x:Key="TooltipStripInfoImage" TargetType="Image">
        <Setter Property="Margin" Value="0,-44,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Stretch" Value="None" />
    </Style>

    <ControlTemplate x:Key="TooltipStripInfoTemplate" TargetType="ContentControl">
        <Grid>
            <!-- Background Images -->
            <Grid Style="{StaticResource TooltipStripDP}" Margin="-46,30" >
                <Grid.Background>
                    <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_hStrip.png" Stretch="Fill" TileMode="Tile" AlignmentY="Top" Opacity="{StaticResource TooltipStripOpacity}"/>
                </Grid.Background>
            </Grid>

            <!-- Text and other content -->
            <ls:LSNineSliceImage x:Name="Container" Slices="325,50,325,50" IconWidth="120" Padding="0,50" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_footer_infoStrip.png">
                <ContentPresenter x:Name="Content"/>
            </ls:LSNineSliceImage>
        </Grid>
    </ControlTemplate>

    <!-- Tooltip Strip Template for bottom info section -->
    <Style x:Key="TooltipStripBottomInfoImage" TargetType="Image">
        <Setter Property="Margin" Value="0,-53,0,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Stretch" Value="None" />
    </Style>

    <ControlTemplate x:Key="TooltipStripBottomInfoTemplate" TargetType="ContentControl">
        <Grid>
            <!-- Background Images -->
            <Rectangle Margin="0,40,0,38"  >
                <Rectangle.Fill>
                    <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_hStrip.png" Stretch="Fill" TileMode="Tile" AlignmentY="Top" Opacity="{StaticResource TooltipStripOpacity}" />
                </Rectangle.Fill>
            </Rectangle>
            <!-- Text and other content -->
            <ls:LSNineSliceImage x:Name="Container" Slices="380,55,380,55" IconWidth="104" Padding="40,70" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/scrollBox_frame.png">
                <ContentPresenter x:Name="Content"/>
            </ls:LSNineSliceImage>
        </Grid>
    </ControlTemplate>

    <!-- Tooltip Strip Template for footers -->
    <ControlTemplate x:Key="TooltipStripBottomTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage x:Name="Container" Slices="25,25,25,25" IconWidth="55" Margin="-36,0,-36,-25" Padding="38,16" MinHeight="74" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_hStrip_footer.png">

            <ContentPresenter x:Name="Content" VerticalAlignment="Center" />
        </ls:LSNineSliceImage>
    </ControlTemplate>

    <!-- Tooltip Strip Template for Lore texts -->
    <ControlTemplate x:Key="TooltipStripLoreTextTemplate">
        <Grid Width="{StaticResource MaxTooltipContentWidth}" x:Name="ExtraDescBlock" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,20,0" Source="{StaticResource IconQuote}" Stretch="None" Visibility="Hidden"/>
            <!-- We will re-add this, so just hide for the moment -->
            <ContentPresenter Grid.Column="1" x:Name="Content" />
        </Grid>
    </ControlTemplate>

    <!-- Section separator -->
    <ControlTemplate x:Key="SubSectionTitleTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ContentPresenter Grid.Column="0" x:Name="Content" VerticalAlignment="Center" />
            <Grid Grid.Column="1" Height="20" Margin="8,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_separatorGradient_left.png" Stretch="None"/>
                <Image Grid.Column="1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_separatorGradient_middle.png" Stretch="Fill"/>
                <Image Grid.Column="2" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_separatorGradient_right.png" Stretch="None"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="SubSectionPanelStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="MaxHeight" Value="42"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
    </Style>

    <Style x:Key="SubSectionImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="-12,0,0,0" />
    </Style>

    <!-- Metamagic section -->
    <DataTemplate x:Key="MetamagicSection">
        <ContentControl Template="{StaticResource TooltipStripMetamagicTemplate}" Visibility="{Binding Metamagic.Enabled, Converter={StaticResource BoolToVisibleConverter}}" Margin="{StaticResource DefaultMarginBottom}">
            <StackPanel>
                <!-- Empowered section -->
                <StackPanel x:Name="EmpoweredMetamagicSectuib" Visibility="{Binding Metamagic.IsEmpowered, Converter={StaticResource BoolToVisibleConverter}}">
                    <ContentControl Template="{StaticResource SubSectionTitleTemplate}">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_magicalProperties.png" Style="{StaticResource SubSectionImageStyle}"/>
                            <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Text="{Binding Source='h672032fcg3562g4dccgbe76g720228818da1', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource TooltipColor.Metamagic}"/>
                        </StackPanel>
                    </ContentControl>

                    <TextBlock x:Name="EmpoweredMetamagicText" Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='hc215d788gec91g4f43g97e9gdbf1a904e041', Converter={StaticResource TranslatedStringConverter}}" Margin="{StaticResource DefaultMarginBottom}"/>
                </StackPanel>

                <!-- Exclusive meta magic section (where only one can be enabled at a time)-->
                <StackPanel x:Name="ExclusiveMetamagicSection" Visibility="Collapsed">
                    <ContentControl Template="{StaticResource SubSectionTitleTemplate}">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_magicalProperties.png" Style="{StaticResource SubSectionImageStyle}"/>
                            <TextBlock x:Name="MetamagicType" Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Metamagic}"/>
                        </StackPanel>
                    </ContentControl>

                    <Control x:Name="metamagicEffectSection"/>
                </StackPanel>
            </StackPanel>
        </ContentControl>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Careful">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hc60f063eg9286g4461g9781g3d6d66af7384', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{DynamicResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h128bef82g7eb4g4ce1g9d55g5f0e816da7c5', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Distant">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hb9ef85e6gb3d0g4295g8c89g69a102a0444a', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource IconRange}" Stretch="None" VerticalAlignment="Center" Margin="-8,0,0,0"/>
                                <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" ls:TextBlockFormatter.SourceText="{Binding Source='hb984e30dgab6ag4f54g883fg2f499f03b5f5', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}: '}"/>
                                <TextBlock Foreground="{DynamicResource TooltipColor.Special}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                    <b:Interaction.Behaviors>
                                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.OldValue}">
                                            <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                <Style TargetType="ls:LSRun">
                                                    <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
                                                </Style>
                                            </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                        </ls:CtxTransStringRunGeneratorBehavior>
                                    </b:Interaction.Behaviors>
                                </TextBlock>
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/ContextMenu/ico_arrow.png" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                <TextBlock Foreground="{DynamicResource TooltipColor.Highlight}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                    <b:Interaction.Behaviors>
                                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.NewValue}">
                                            <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                <Style TargetType="ls:LSRun">
                                                    <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
                                                </Style>
                                            </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                        </ls:CtxTransStringRunGeneratorBehavior>
                                    </b:Interaction.Behaviors>
                                </TextBlock>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Metamagic.NewValue.Text}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metamagic.OldValue.Text}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Extended">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h9dacdfbcg09bag4071gb453g164764a12a95', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <TextBlock x:Name="GenericDuration" Style="{DynamicResource TooltipDescriptionStyle}" Width="Auto" HorizontalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Source='h35573af4g0f87g4ce0gb759g4f4904c04e87', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed"/>
                                <StackPanel x:Name="SpecificDuration" Orientation="Horizontal">
                                    <Image Source="{StaticResource IconDuration}" Stretch="None" VerticalAlignment="Center" Margin="-14,0,0,0"/>
                                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource TooltipColor.Primary}" FontSize="{StaticResource MediumFontSize}" ls:TextBlockFormatter.SourceText="{Binding Source='hea6f3450g9430g46bbga707g63aac4dd0bbc', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}: '}"/>
                                    <TextBlock Foreground="{DynamicResource TooltipColor.Special}" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.OldValue}">
                                                <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                    <Style TargetType="ls:LSRun">
                                                        <Setter Property="Text" Value="{Binding Text}"/>
                                                    </Style>
                                                </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                            </ls:CtxTransStringRunGeneratorBehavior>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/ContextMenu/ico_arrow.png" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                    <TextBlock Foreground="{DynamicResource TooltipColor.Highlight}" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Metamagic.NewValue}">
                                                <ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                                    <Style TargetType="ls:LSRun">
                                                        <Setter Property="Text" Value="{Binding Text}"/>
                                                    </Style>
                                                </ls:CtxTransStringRunGeneratorBehavior.ParamRunStyle>
                                            </ls:CtxTransStringRunGeneratorBehavior>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Metamagic.NewValue.Text}" Value="">
                                    <Setter TargetName="SpecificDuration" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="GenericDuration" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metamagic.OldValue.Text}" Value="">
                                    <Setter TargetName="SpecificDuration" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="GenericDuration" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Heightened">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='hc6d29819g33d5g4ca7g9957gb8c47d823262', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{DynamicResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='he1e8bfc3g6befg49afga083g284a45191d82', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Quickened">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h7a4aed26ga038g4775g885ag81cc91f418ac', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_h.png" Stretch="None" VerticalAlignment="Center" Margin="0,0,2,0"/>
                                <TextBlock VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}" Foreground="{DynamicResource ActionPoint}" ls:TextBlockFormatter.SourceText="{Binding Source='hba0d4fd0ga762g43bfgb86fg1c9c8982c6b2', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/ContextMenu/ico_arrow.png" Stretch="None" VerticalAlignment="Center" Margin="8,0"/>
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/bap_h.png" Stretch="None" VerticalAlignment="Center" Margin="0,0,2,0"/>
                                <TextBlock VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}" Foreground="{DynamicResource BonusActionPoint}" ls:TextBlockFormatter.SourceText="{Binding Source='h7a2b85d6g3761g4f1fgb6b2g53cf10b449ea', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Subtle">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h51c6fd28gb431g46bfg8415gad6a9a5151a4', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{DynamicResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='hf22ebe0fgc409g42c0gacc9gdb230f898e4b', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Metamagic.Type}" Value="Twinned">
                <Setter TargetName="ExclusiveMetamagicSection" Property="Visibility" Value="Visible"/>
                <Setter TargetName="MetamagicType" Property="Text" Value="{Binding Source='h8d567697g1843g4bdcga303g744782e3c803', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="metamagicEffectSection" Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Style="{DynamicResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h5e3393e9g1125g4f89gba33g55e52287ac30', Converter={StaticResource TranslatedStringConverter}}" TextWrapping="Wrap"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Visibility, ElementName=EmpoweredMetamagicSectuib}" Value="Visible" />
                    <Condition Binding="{Binding Path=Visibility, ElementName=ExclusiveMetamagicSection}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="EmpoweredMetamagicText" Property="Margin" Value="0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Status Damage section -->
    <DataTemplate x:Key="StatusDamageSection">
        <StackPanel Visibility="{Binding Damages.Count, Converter={StaticResource CountToVisibilityConverter}}">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,0,11,0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource DamageText}">
                        <Setter Property="ls:TextBlockFormatter.SourceText">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                                    <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="min"/>
                                    <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="max"/>
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='min'}" Value="0" />
                                    <Condition Binding="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='max'}" Value="0" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                                <Setter Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h90a7ff55g589dg43f4gb38egd040fea0d635"/>
                                            <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="min"/>
                                            <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="max"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="heee371a2g2a69g4c4bga922g82fb51e57290"/>
                                                <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="min"/>
                                                <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="max"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                                    <Condition Binding="{Binding DurationType}" Value="Timer"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="h8e9507aeg965eg4737gabdbgf3f1af150980"/>
                                                <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="min"/>
                                                <Binding Path="Damages" Converter="{StaticResource RollOutcomeConverter}" ConverterParameter="max"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <StackPanel Orientation="Horizontal" ClipToBounds="False">
                <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Left" ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />

                <ItemsControl x:Name="DamagesList" ItemsSource="{Binding Damages}" AlternationCount="{Binding Damages.Count}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,10,0,10" >
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}">
                                    <Run Text="{Binding DiceTypeSet.Str}"/><Run x:Name="BonusDamageRun" Text="{Binding DamageBonus, StringFormat={}{0:+#;-#;''}}"/>
                                </TextBlock>
                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageIconStyle}" />
                                <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                    <Control.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                    </Control.Resources>
                                </Control>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding DamageBonus}" Value="0">
                                    <Setter Property="Text" Value="" TargetName="BonusDamageRun" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="DamagesList" Property="Margin" Value="10,10,0,10"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StatusSection">
        <ItemsControl ItemsSource="{Binding .}" HorizontalAlignment="Center" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding Details}" HorizontalAlignment="Center" Width="850" VerticalAlignment="Center" Margin="0,20">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible" ClipToBounds="False" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                    <Grid x:Name="SectionIcon" Width="80" Height="80"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="26,0,0,0" ClipToBounds="False">
                                        <Image VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Style="{DynamicResource SectionImageStyle}"/>
                                        <Ellipse Height="72" Width="72" VerticalAlignment="Center" HorizontalAlignment="Center"  Fill ="{Binding Brush}" />
                                        <TextBlock x:Name="SectionDuration" VerticalAlignment="Top" HorizontalAlignment="Right" ls:TextBlockFormatter.SourceText="{Binding Duration}" FontWeight="Bold" FontSize="{DynamicResource DefaultFontSize}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Special}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.IsOverridden, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource LS_accent25TxtColor}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                    <TextBlock VerticalAlignment="Center" Margin="14,0,0,0" Foreground="{DynamicResource TooltipColor.SubTitle}" FontSize="{DynamicResource BigFontSize}">
                                        <Run x:Name="ApplyText" Text="{Binding Source='hfd91f94eg7274g4716g92cagc4aa3b826925', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <Run x:Name="NameText" Text="{Binding Description}">
                                            <Run.Style>
                                                <Style TargetType="Run">
                                                    <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Secondary}" />
                                                    <Style.Triggers>
                                                        <!-- Check verbal intent -->
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Healing">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Healing}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Buff">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Buff}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Debuff">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Debuff}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Utility">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Utility}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Control">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Control}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Summon">
                                                            <Setter Property="Foreground" Value="{StaticResource verbalIntent.Summon}" />
                                                        </DataTrigger>

                                                        <!-- Check damage types -->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Slashing" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Piercing" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Bludgeoning" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Acid" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Thunder" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Necrotic" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Fire" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Lightning" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Cold" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Psychic" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Poison" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Radiant" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="Force" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>

                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding DataContext.MainDamageType, ElementName=SpellDamageMainPanel}" Value="None" />
                                                                <Condition Binding="{Binding DataContext.Intent, ElementName=SpellDamageMainPanel}" Value="Damage" />
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="{StaticResource verbalIntent.Damage}" />
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Run.Style>
                                        </Run>
                                    </TextBlock>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                                            <Condition Binding="{Binding TypeId}" Value="" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsPositiveContext}" Value="True">
                                        <Setter TargetName="ApplyText" Property="Text" Value="{Binding Source='hd46ad4d5gaaa1g4289g99eeg2b87c99962db', Converter={StaticResource TranslatedStringConverter}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Duration, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="False">
                                        <Setter TargetName="SectionDuration" Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding TypeId}" Value="Surface">
                                        <Setter TargetName="ApplyText" Property="Text" Value="{Binding Source='h3bfb7f5ag85a1g49afg86ddg5bb80f2e8234', Converter={StaticResource TranslatedStringConverter}}"/>
                                        <Setter TargetName="NameText" Property="Text">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                    <Binding Source="h78678ca2g9aebg48edg8d75gdb8671bd610e"/>
                                                    <Binding Path="Description"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="StatusListElement">
        <StackPanel Background="Transparent" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible" ClipToBounds="False" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
            <Grid x:Name="SectionIcon" Width="64" Height="64"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="26,0,14,0" ClipToBounds="False">
                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Style="{DynamicResource SectionImageStyle}"/>
                <Ellipse Height="56" Width="56" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Brush}" />
            </Grid>

            <TextBlock x:Name="SectionDuration" Style="{DynamicResource TooltipDescriptionStyle}" Foreground="{DynamicResource TooltipColor.Secondary}" VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                        <Binding Source="h6e1e86b5g98f8g42c8ga383gf770838ca349"/>
                        <Binding Path="Duration"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                    <Condition Binding="{Binding TypeId}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>



            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=1.1}" Value="True">
                <Setter TargetName="SectionDuration" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h10fa4ad9ga019g4a5dg96edg94a25156b950"/>
                            <Binding Path="Duration"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>



            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='hf5d92374g1f72g4b7bga1d5g178ff9c36ed5',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="Permanent">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='hf5d92374g1f72g4b7bga1d5g178ff9c36ed5',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DurationType}" Value="UntilRest">
                <Setter TargetName="SectionDuration" Property="Text" Value="{Binding Source='h50ea69dagf61eg466fga47eg530c55933114',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="StatusList">
        <ItemsControl ItemsSource="{Binding .}" HorizontalAlignment="Center" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}"  Margin="0,0,0,10">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl x:Name="ItemEntry" ItemsSource="{Binding Details}" HorizontalAlignment="Center" Width="850" VerticalAlignment="Center" Margin="0,11,0,0" ItemTemplate="{StaticResource StatusListElement}"/>

                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="ItemEntry" Property="Margin" Value="0"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

    </DataTemplate>

    <!-- Spell Damage section -->
    <DataTemplate x:Key="SpellDamageSection">
        <StackPanel x:Name="SpellDamageMainPanel" ls:TooltipExtender.Owner="{Binding Path=Owner,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:LSElementCopy}}" VerticalAlignment="Center" ClipToBounds="False" Visibility="{Binding Damages.Count, Converter={StaticResource CountToVisibilityConverter}}" ls:AttachedProperties.InheritedTag="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}">
            <TextBlock x:Name="SpellDamageText" Margin="0,0,11,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource DamageText}">
                        <Setter Property="ls:TextBlockFormatter.SourceText">
                            <Setter.Value>
                                <!-- [1]~[2] Damage -->
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                                    <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                    <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).x, ElementName=SpellDamageMainPanel}" Value="0" />
                                    <Condition Binding="{Binding Path=(ls:AttachedProperties.InheritedTag).y, ElementName=SpellDamageMainPanel}" Value="0" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <!-- [1]~[2] Healing -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="heee371a2g2a69g4c4bga922g82fb51e57290"/>
                                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <!-- [1] Damage -->
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource EqualConverter}">
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h7c2d15afg7583g4e8agb6ffgb06a0d6b6992"/>
                                            <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>

                            <!-- [1] Healing -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Value="True">
                                        <Condition.Binding>
                                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                                <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                                            </MultiBinding>
                                        </Condition.Binding>
                                    </Condition>
                                    <Condition Binding="{Binding Damages[0].DamageType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="ls:TextBlockFormatter.SourceText">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="he522728cgcbb9g4854g80e7gfcd1610b2e34"/>
                                                <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding IncompleteWeaponDamage}" Value="True">
                                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb115268eg66f3g4f91g827bgdbad9a941c6b', Converter={StaticResource TranslatedStringConverter}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Grid x:Name="SpellDiceContainer" VerticalAlignment="Center" ClipToBounds="False">
                <Grid>
                    <ItemsControl x:Name="DiceIcon" VerticalAlignment="Center" HorizontalAlignment="Left" ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" Visibility="{Binding IsDirectDamage, Converter={StaticResource BoolToCollapsedConverter}}"/>
                    <TextBlock x:Name="DiceDamage" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,-100,0,-100" Foreground="{StaticResource TooltipColor.Special}" FontSize="{StaticResource HumongousFontSize}" ls:TextBlockFormatter.SourceText="{Binding Damages[0].DiceTypeSet.Amount}" Visibility="{Binding IsDirectDamage, Converter={StaticResource BoolToVisibleConverter}}"/>
                </Grid>

                <ItemsControl x:Name="DamagesList" ItemsSource="{Binding Damages}" Width="460" Margin="-160,10,0,10" ls:AttachedProperties.InheritedTag="{Binding IsDirectDamage}" AlternationCount="{Binding Damages.Count}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="DamageListEntry" Orientation="Horizontal">
                                <TextBlock x:Name="DiceValue" Style="{DynamicResource DamageValueTextStyle}">
                                    <ls:TextBlockFormatter.SourceText>
                                        <MultiBinding StringFormat="{}+{0}{1:+#;-#;} {2:/#;'';''}">
                                            <Binding Path="DiceTypeSet.Str"/>
                                            <Binding Path="DamageBonus"/>
                                            <Binding Path="DamageDivider"/>
                                        </MultiBinding>
                                    </ls:TextBlockFormatter.SourceText>
                                </TextBlock>
                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageIconStyle}" />
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageValueTextStyle}"/>
                                <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                    <Control.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                    </Control.Resources>
                                </Control>
                            </StackPanel>

                            <DataTemplate.Triggers>
                                <!-- First in the list should not include a '+' in front of the damage -->
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="DiceValue">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}{0}{1:+#;-#;} {2:/#;'';''}">
                                                <Binding Path="DiceTypeSet.Str"/>
                                                <Binding Path="DamageBonus"/>
                                                <Binding Path="DamageDivider"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                
                                <!-- Hidden weapon damages -->
                                <DataTrigger Binding="{Binding DamageType}" Value="Weapon">
                                    <Setter TargetName="DamageListEntry" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Value="False">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource EqualConverter}">
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="SpellDamageMainPanel"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="SpellDamageMainPanel"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

            </Grid>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Damages.Count}" Value="2">
                <Setter TargetName="DamagesList" Property="Margin" Value="-100,10,0,10"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True">
                <Setter TargetName="DamagesList" Property="Margin" Value="-60,10,0,10"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResultSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Name, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False">
                <Setter TargetName="SpellDamageMainPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Visibility}" Value="Collapsed">
                <Setter TargetName="SpellDamageMainPanel" Property="Margin" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Items Boosts -->
    <DataTemplate x:Key="ItemBoostsSection">
        <ItemsControl ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel x:Name="EntryContainer" Margin="{StaticResource DefaultMarginTop}" Orientation="Horizontal" Width="{StaticResource MaxTooltipContentWidth}" HorizontalAlignment="Left">
                        <Grid x:Name="Icon" Visibility="Collapsed" Margin="0,0,11,0">
                            <Rectangle x:Name="IconBorder" Style="{StaticResource TooltipBoostIconBorderDashedStyle}" Width="86" Height="86"/>
                            <Rectangle x:Name="IconImage" Style="{StaticResource TooltipBoostIconStyle}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Width="64" Height="64">
                                <Rectangle.ToolTip>
                                    <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Rectangle.ToolTip>
                            </Rectangle>
                        </Grid>

                        <StackPanel VerticalAlignment="Center">
                            <WrapPanel>
                                <TextBlock x:Name="Name" ls:TextBlockFormatter.SourceText="{Binding Name}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Keyword}" Style="{StaticResource TooltipDefaultTextStyle}" Margin="0,0,0,0"/>
                                <TextBlock x:Name="Value" Text="{Binding Value, StringFormat={}{0:+#;-#;''}}" Visibility="Visible" FontSize="{StaticResource MediumFontSize}" Style="{StaticResource TooltipBaseTextStyle}" Margin="10,0,0,0"/>
                                <TextBlock x:Name="Maximum" Visibility="Collapsed" Style="{StaticResource TooltipBaseTextStyle}" FontSize="{StaticResource MediumFontSize}" Margin="10,0,0,0">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h29900944ga4c3g49ffg8a15g5970c20a9cdd"/>
                                            <Binding Path="Maximum"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </WrapPanel>

                            <ContentPresenter ContentTemplate="{DynamicResource SpellSchoolTitle}" Content="{Binding UnlockSpell}" Width="430" HorizontalAlignment="Left" ls:AttachedProperties.InheritedTag="SmallSize"/>
                        </StackPanel>
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="EntryContainer" Property="Margin" Value="0"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Type}" Value="WeaponEnchantment">
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IconImage" Property="Width" Value="48" />
                            <Setter TargetName="IconImage" Property="Height" Value="48" />
                            <Setter TargetName="IconImage" Property="Margin" Value="-8,0" />
                            <Setter TargetName="IconImage" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="{StaticResource IconDippable}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Type}" Value="UnlockSpell">
                            <Setter TargetName="Value" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                            <Setter TargetName="Value" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                            <Setter TargetName="Name" Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding GUID}" Value="Movement">
                            <Setter TargetName="Value" Property="Text" Value="{Binding DValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short',StringFormat='+{0}'}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Maximum, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                            <Setter TargetName="Maximum" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="ItemBoostsContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="ContentTemplate" Value="{StaticResource ItemBoostsSection}" />
    </Style>

    <!-- Items Passives -->
    <DataTemplate x:Key="ItemPassivesSection">
        <ItemsControl ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" AlternationCount="{Binding Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid x:Name="EntryContainer" Margin="{StaticResource DefaultMarginTop}" Width="{StaticResource MaxTooltipContentWidth}" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="IconContainer" Grid.Column="0" Visibility="{Binding IconName, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" Width="64" Height="64"  VerticalAlignment="Top" HorizontalAlignment="Left" ClipToBounds="False">
                            <Image Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter} , ConverterParameter='Assets/Tooltips/Icons/'}" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" />
                            <Ellipse Height="56" Width="56" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Brush}" />
                        </Grid>

                        <StackPanel Grid.Column="1">
                            <TextBlock x:Name="PassiveName" Style="{StaticResource TooltipSectionTextStyle}" FontSize="{DynamicResource MediumFontSize}" TextWrapping="Wrap" MaxWidth="725" Foreground="{StaticResource TooltipColor.Keyword}">
                                <b:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                </b:Interaction.Behaviors>
                            </TextBlock>

                            <TextBlock x:Name="PassiveDesc" Style="{StaticResource TooltipSectionTextStyle}" FontSize="{DynamicResource MediumFontSize}" TextWrapping="Wrap" MaxWidth="725">
                                <b:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                </b:Interaction.Behaviors>
                            </TextBlock>
                        </StackPanel>

                        <Grid.ToolTip>
                            <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Grid.ToolTip>
                    </Grid>

                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="EntryContainer" Property="Margin" Value="0"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=Visibility, ElementName=IconContainer}" Value="Visible">
                            <Setter TargetName="IconContainer" Property="Margin" Value="0,0,8,0"/>
                            <Setter TargetName="PassiveName" Property="MaxWidth" Value="{StaticResource MaxTooltipContentWidth}"/>
                            <Setter TargetName="PassiveDesc" Property="MaxWidth" Value="{StaticResource MaxTooltipContentWidth}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="ItemPassivesContentPresenterStyle" TargetType="ContentPresenter">
        <Setter Property="ContentTemplate" Value="{StaticResource ItemPassivesSection}" />
    </Style>

    <!-- Active conditions section -->
    <DataTemplate x:Key="ActiveConditionsSection">
        <ItemsControl ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Stretch">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0,2" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" Margin="0,0,16,0">
                            <Ellipse Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" />
                            <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage, Converter={StaticResource MultiplierConverter}, ConverterParameter='0.8'}" SweepDirection="Clockwise" Width="64" Height="64" RenderTransformOrigin="0.5 0.5">
                                <Grid.RenderTransform>
                                    <RotateTransform Angle="-126"/>
                                </Grid.RenderTransform>
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/status_progressAround.png" Stretch="UniformToFill" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </ls:LSPie>

                            <Image x:Name="DurationIcon" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_statusTimer.png" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center" Width="48" Margin="-26,0,0,0" Visibility="Collapsed"/>
                        </Grid>
                        <WrapPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1">
                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}" Margin="0,0,16,0"/>

                            <StackPanel Orientation="Horizontal" x:Name="DurationText">
                                <TextBlock ls:TextBlockFormatter.SourceText="(" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                                <TextBlock  Style="{DynamicResource StatusDurationTextStyle}" FontSize="{StaticResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center"/>
                                <TextBlock ls:TextBlockFormatter.SourceText=")" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                            </StackPanel>
                        </WrapPanel>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DurationType}" Value="Timer">
                            <Setter TargetName="DurationIcon" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Duration}" Value="0"/>
                                <Condition Binding="{Binding DurationType}" Value="Timer"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="DurationText" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="DurationIcon" Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding Duration}" Value="-1">
                            <Setter TargetName="Progression" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- Boost content -->
    <DataTemplate x:Key="BoostSimpleTooltipContent">
        <Grid>
            <TextBlock x:Name="dummyValue" Text="{Binding Value, StringFormat={}{0:+#;-#;''}}" Visibility="Collapsed"/>
            <TextBlock x:Name="desc" Text="{Binding Name}" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding BoostType}" Value="WeaponEnchantment">
                <Setter TargetName="desc" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h22431a3cg7670g4cabg987fge9a1bbbbbd32"/>
                            <Binding Path="Text" ElementName="dummyValue"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding BoostType}" Value="AC">
                <Setter TargetName="desc" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h4200bb68gc854g4b01g8bb9gc64e9ba8457f"/>
                            <Binding Path="Text" ElementName="dummyValue"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Advantage -->
    <DataTemplate DataType="{x:Type ls:VMAdvantage}">
        <ContentPresenter x:Name="AdvantageTooltipContent" Content="{Binding TooltipData}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding TooltipData}" Value="{x:Null}">
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipData}" Value="{x:Null}"/>
                    <Condition Binding="{Binding AdvantageType}" Value="Advantage"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="h079123e0geee2g410cgaaf3g7978a3dafdc7"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ls:AttachedProperties.InheritedTag" Value="h986f906agb172g4956g9567g5cbd32150349"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipData}" Value="{x:Null}"/>
                    <Condition Binding="{Binding AdvantageType}" Value="Disadvantage"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AdvantageTooltipContent" Property="Content" Value="h3723f6abgc46cg42b4gb95eg2449e683e25a"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ls:AttachedProperties.InheritedTag" Value="h8d1a14e2gc17cg4ab6gbe5dg85557ae06a7e"/>
                <Setter TargetName="AdvantageTooltipContent" Property="ContentTemplate" Value="{StaticResource HeaderBodyTemplate}"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Approval Rating Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMApprovalRating}">
        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}"/>
    </DataTemplate>

    <!-- Stat Desc Tooltip-->
    <DataTemplate x:Key="StatParamsTemplate">
        <ItemsControl Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}}" ItemsSource="{Binding CalculationParameters}" Margin="0,20,0,0" AlternationCount="{Binding CalculationParameters.Count}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid MinWidth="{StaticResource StatTooltipMinWidth}">
                        <Grid.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}"/>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                            <TextBlock x:Name="additionSign" Text="+" Visibility="Collapsed" Foreground="{DynamicResource TooltipColor.Secondary}"/>
                            <TextBlock Foreground="{DynamicResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value}" Margin="0,0,11,0"/>
                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding SourceName}" HorizontalAlignment="Right" Grid.Column="1"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='-1'}" Value="True">
                            <Setter TargetName="additionSign" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter TargetName="additionSign" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="VMStatTooltip">
        <StackPanel DataContext="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ls:TooltipExtender.Owner="{Binding Path=(ls:TooltipExtender.Owner) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}" Width="Auto" MaxWidth="{DynamicResource MaxWideTooltipContentWidth}"/>
            <ContentControl Content="{Binding .}" ContentTemplate="{StaticResource StatParamsTemplate}" Width="{DynamicResource MaxWideTooltipContentWidth}" Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
        </StackPanel>
    </DataTemplate>


    <DataTemplate DataType="{x:Type ls:VMStat}">
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource VMStatTooltip}"/>
    </DataTemplate>


    <!-- Skill Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMSkill}">
        <StackPanel x:Name="root" DataContext="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock ls:TextBlockFormatter.SourceText="{Binding AbilityName}" Style="{StaticResource TooltipSubTitleStyle}"/>
            <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" Margin="{StaticResource DefaultMarginTop}">
                <Grid VerticalAlignment="Top" Margin="-20,0,-20,0" ClipToBounds="False">
                    <ItemsControl ItemsSource="{Binding DiceList}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4 0 0 0" />
                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding RollString}" Margin="140 0 0 0" VerticalAlignment="Center"/>
                </Grid>
            </ContentControl>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}" Margin="{StaticResource DefaultMarginTop}"/>
        </StackPanel>
    </DataTemplate>

    <!-- Ability Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMAbility}">
        <Grid x:Name="root" Tag="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" >
            <Image x:Name="DecorationImage" Style="{DynamicResource AbilityTooltipIconStyle}" DataContext="{Binding}"/>
            <StackPanel Width="{DynamicResource MaxWideTooltipContentWidth}">
                <TextBlock Style="{StaticResource TooltipTitleStyle}">
                    <ls:TextBlockFormatter.SourceText>
                        <MultiBinding StringFormat="{}{0} ({1})">
                            <Binding Path="Name"/>
                            <Binding Path="Tag.Value" ElementName="root"/>
                        </MultiBinding>
                    </ls:TextBlockFormatter.SourceText>
                </TextBlock>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hdb40eff6g84d1g421dg906cg6779df63479f', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>

                <!-- Modifier -->
                <StackPanel x:Name="Modifier" Orientation="Horizontal" Margin="{StaticResource DefaultMarginBottom}">
                    <ContentControl ContentTemplate="{StaticResource DamageDiceSet}" VerticalAlignment="Center" Margin="0,0,6,0"/>
                    <TextBlock VerticalAlignment="Center">
                        <ls:TextBlockFormatter.SourceText>
                            <MultiBinding StringFormat="{}{0:+#;-#;+0} {1}">
                                <Binding Path="Tag.Modifier" ElementName="root"/>
                                <Binding Source="hc95995a6gafa6g4d02g9e9ag87ed78dc1144" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </StackPanel>

                <TextBlock Style="{StaticResource TooltipAdjustableDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Path=Tag.Description, ElementName=root}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}"/>
                <ContentControl Content="{Binding Tag, ElementName=root}" ContentTemplate="{StaticResource StatParamsTemplate}" Margin="{StaticResource DefaultMarginBottom}"/>

                <ContentControl Template="{StaticResource SubSectionTitleTemplate}" Visibility="{Binding Path=Tag.SavingThrowParameters.Count, ElementName=root, Converter={StaticResource CountToVisibilityConverter}}">
                    <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_roll_save.png" Style="{StaticResource SubSectionImageStyle}"/>
                        <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" Visibility="Visible" VerticalAlignment="Center" Text="{Binding Source='ha1262989ge5e8g47aegb0begd830dd1a946f', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                    </StackPanel>
                </ContentControl>

                <ItemsControl Visibility="{Binding Path=Tag.SavingThrowParameters.Count, ElementName=root, Converter={StaticResource CountToVisibilityConverter}}" ItemsSource="{Binding Path=Tag.SavingThrowParameters, ElementName=root}" AlternationCount="{Binding Path=Tag.SavingThrowParameters.Count, ElementName=root}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid MinWidth="{StaticResource StatTooltipMinWidth}">
                                <Grid.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}"/>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                                    <TextBlock Foreground="{DynamicResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding Value ,StringFormat='{}{0:+#;-#;+0}'}" Margin="0,0,11,0"/>
                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Value}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!-- Status Tooltip -->
    <DataTemplate x:Key="StatusTooltip" >
        <StackPanel x:Name="root" DataContext="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" ls:TextBlockFormatter.SourceText="{Binding Source='h40b6867ag0d94g4132ga679g791cb1c8968a',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>

                <StackPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Center" Margin="48 -3 11 3" />
                    <TextBlock x:Name="DurationText" Style="{StaticResource StatusDurationShortTextStyle}" FontSize="{DynamicResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Special}" TextWrapping="Wrap" MaxWidth="400" VerticalAlignment="Center" DataContext="{Binding Status}"/>

                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="{StaticResource DefaultMarginTop}"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                                        <Condition Binding="{Binding Status.DurationType}" Value="None"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                                        <Condition Binding="{Binding DurationType}" Value="None"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </MultiDataTrigger>

                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                                        <Condition Binding="{Binding Status.Duration}" Value="0"/>
                                        <Condition Binding="{Binding Status.DurationType}" Value="Timer"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                                        <Condition Binding="{Binding Duration}" Value="0"/>
                                        <Condition Binding="{Binding DurationType}" Value="Timer"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="False" />
                                        <Condition Binding="{Binding Status.DurationType}" Value="Timer" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Margin" Value="0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True" />
                                        <Condition Binding="{Binding DurationType}" Value="Timer" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Margin" Value="0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </Grid>

            <ContentPresenter ContentTemplate="{StaticResource StatusDamageSection}" Content="{Binding .}"/>

            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" Margin="{StaticResource DefaultMarginTopBottom}">
				<b:Interaction.Behaviors>
                	<ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>

            <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{DynamicResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{DynamicResource ItemsControlHorizontalWrapPanel}"/>
        </StackPanel>

        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="False" />
                    <Condition Binding="{Binding Status.DurationType}" Value="Timer" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="FontSize" Value="{DynamicResource BigFontSize}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True" />
                    <Condition Binding="{Binding DurationType}" Value="Timer" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="DurationText" Property="FontSize" Value="{DynamicResource BigFontSize}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- When coming from a pinned tooltip, the DataContext must change -->
            <DataTrigger Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
                <Setter TargetName="DurationText" Property="DataContext" Value="{Binding}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Progression Tooltip-->
    <DataTemplate x:Key="VMStatusTooltip">
        <StackPanel DataContext="{Binding Path=(ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding DisplayType}"/>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMStatus}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMContextTransStringStatusParam}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMTooltipSectionDetail}" >
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource StatusTooltip}" />
    </DataTemplate>

    <!-- Progression Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMProgression}">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding DisplayType}"/>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <!-- FeatureBoost Tooltip -->
    <DataTemplate x:Key="NameAndDescTooltipContent">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMFeatureBoost}">
        <ContentPresenter ContentTemplate="{StaticResource NameAndDescTooltipContent}" Content="{Binding .}"/>
    </DataTemplate>

    <!-- Section styles -->
    <Style TargetType="TextBlock" x:Key="SectionResourceNameStyle">
        <Setter Property="Text" Value="{Binding Name}"/>
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Special}"/>
        <Style.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource TooltipColor.Alert}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="SectionImageStyle">
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_red_star.png"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Margin" Value="0,-2,0,0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ActionPoint">
                <Setter Property="Source" Value="{StaticResource IconActionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BonusActionPoint">
                <Setter Property="Source" Value="{StaticResource IconBonusActionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ReactionActionPoint">
                <Setter Property="Source" Value="{StaticResource IconReactionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Movement">
                <Setter Property="Source" Value="{StaticResource IconMovement}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WarlockSpellSlot">
                <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlot}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SpellSlot">
                <Setter Property="Source" Value="{StaticResource IconSpellSlot}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SorceryPoint">
                <Setter Property="Source" Value="{StaticResource SorceryPoint}"/>
            </DataTrigger>
			<!-- MOD START - Custom action resources -->
			<DataTrigger Binding="{Binding TypeId}" Value="SneakAttack">
                <Setter Property="Source" Value="{StaticResource SneakAttack}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="PsiPoint">
                <Setter Property="Source" Value="{StaticResource PsiPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="PsiPointMastery">
                <Setter Property="Source" Value="{StaticResource PsiPointMastery}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="HitDice">
                <Setter Property="Source" Value="{StaticResource HitDice}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="RampageDie">
                <Setter Property="Source" Value="{StaticResource RampageDie}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD4">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD4}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD6">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD6}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD8">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD8}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD10">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD10}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="NecroThaum">
                <Setter Property="Source" Value="{StaticResource NecroThaum}"/>
            </DataTrigger>
			<!-- MOD END -->
            <DataTrigger Binding="{Binding TypeId}" Value="KiPoint">
                <Setter Property="Source" Value="{StaticResource KiPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Rage">
                <Setter Property="Source" Value="{StaticResource Rage}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BardicInspiration">
                <Setter Property="Source" Value="{StaticResource BardicInspiration}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ChannelDivinity">
                <Setter Property="Source" Value="{StaticResource ChannelDivinity}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SuperiorityDie">
                <Setter Property="Source" Value="{StaticResource SuperiorityDie}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint">
                <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="NaturalRecoveryPoint">
                <Setter Property="Source" Value="{StaticResource NaturalRecovery}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WildShape">
                <Setter Property="Source" Value="{StaticResource WildShape}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="TidesOfChaos">
                <Setter Property="Source" Value="{StaticResource TidesOfChaos}"/>
            </DataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ActionPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconActionPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BonusActionPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconBonusActionPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Movement"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconMovementUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SpellSlot"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconSpellSlotUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WarlockSpellSlot"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SorceryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SorceryPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD START - Custom action resources -->
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SneakAttack"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SneakAttackDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPointMastery"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointMasteryUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="HitDice"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource HitDiceUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="RampageDie"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource RampageDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD4"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD4Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD6"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD6Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD8"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD8Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD10"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD10Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NecroThaum"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource NecroThaumUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD END -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="KiPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource KiPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Rage"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RageUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BardicInspiration"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource BardicInspirationUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ChannelDivinity"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ChannelDivinityUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SuperiorityDie"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SuperiorityDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NaturalRecoveryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NaturalRecoveryUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WildShape"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource WildShapeUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="TidesOfChaos"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource TidesOfChaosUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- show action resource icons as disabled if ritual casting is enabled-->
            <!-- TODO : Perhaps check with design if it's intended to have all the resources hidden because of the ritual tag ?-->
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ActionPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconActionPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BonusActionPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconBonusActionPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SpellSlot"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconSpellSlotUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WarlockSpellSlot"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SorceryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SorceryPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD START - Custom action resources -->
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SneakAttack"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SneakAttackDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPointMastery"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointMasteryUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="HitDice"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource HitDiceUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="RampageDie"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RampageDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD4"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD4Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD6"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD6Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD8"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD8Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD10"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD10Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NecroThaum"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NecroThaumUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD END -->
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="KiPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource KiPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Rage"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RageUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BardicInspiration"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource BardicInspirationUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ChannelDivinity"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ChannelDivinityUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SuperiorityDie"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SuperiorityDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NaturalRecoveryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NaturalRecoverySpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WildShape"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource WildShapeSpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="TidesOfChaos"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource TidesOfChaosSpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--<DataTrigger Binding="{Binding TypeId}" Value="SpellSlotUnavailable">
                <Setter Property="Source" Value="{StaticResource IconSpellSlotUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WarlockSpellUnavailable">
                <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ActionPointUnavailable">
                <Setter Property="Source" Value="{StaticResource IconActionPointUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BonusActionPointUnavailable">
                <Setter Property="Source" Value="{StaticResource IconBonusActionPointUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="MovementUnavailable">
                <Setter Property="Source" Value="{StaticResource IconMovementUnavailable}"/>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding TypeId}" Value="MagicDamage">
                <Setter Property="Source" Value="{StaticResource IconMagicDamage}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Source" Value="{StaticResource IconRange}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="Source" Value="{StaticResource IconRadius}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Source" Value="{StaticResource IconCastAbility}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter Property="Source" Value="{StaticResource IconPreparation}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Source" Value="{StaticResource IconCooldown}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ArmorClass">
                <Setter Property="Source" Value="{StaticResource IconArmorClass}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter Property="Source" Value="{StaticResource IconHanded}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter Property="Source" Value="{StaticResource IconHanded}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter Property="Source" Value="{StaticResource IconLight}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter Property="Source" Value="{StaticResource IconHeavy}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter Property="Source" Value="{StaticResource IconReach}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter Property="Source" Value="{StaticResource IconAmmunition}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Attack">
                <Setter Property="Source" Value="{StaticResource IconAttack}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Save">
                <Setter Property="Source" Value="{StaticResource IconSave}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SaveTurn">
                <Setter Property="Source" Value="{StaticResource IconSaveTurn}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="Source" Value="{StaticResource IconConcentration}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter Property="Source" Value="{StaticResource IconDippable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter Property="Source" Value="{StaticResource IconFinesse}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                <Setter Property="Source" Value="{StaticResource IconThrown}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter Property="Source" Value="{StaticResource IconLoading}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter Property="Source" Value="{StaticResource IconNoDuelWield}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="StoryItem">
                <Setter Property="Source" Value="{StaticResource IconStoryItem}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="Source" Value="{StaticResource IconType}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="SoftWarning">
                <Setter Property="Source" Value="{StaticResource IconWarningSoft}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Warning">
                <Setter Property="Source" Value="{StaticResource IconWarning}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Race">
                <Setter Property="Source" Value="{StaticResource IconRace}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Health">
                <Setter Property="Source" Value="{StaticResource IconHealth}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Speed">
                <Setter Property="Source" Value="{StaticResource IconSpeed}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="TargetSelf">
                <Setter Property="Source" Value="{StaticResource IconTarget}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Toggleable">
                <Setter Property="Source" Value="{StaticResource IconWarningSoft}"/>
            </DataTrigger>

			<DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
				<Setter Property="Source" Value="{StaticResource IconProficiency}"/>
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HeavyArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Source" Value="{StaticResource IconProficiencyArmour}"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Source" Value="{StaticResource IconProficiencyArmour}"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="MediumArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Source" Value="{StaticResource IconProficiencyArmour}"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shields"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Source" Value="{StaticResource IconProficiencyArmour}"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding IsOverridden}" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="SectionDescriptionStyle" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOverridden}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.PrimaryDisabled}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="SoftWarning">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.WarningSoft}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Warning">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Warning}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="FooterFloatingWarningCost">
        <Grid VerticalAlignment="Center" Margin="-10,0,0,0">
            <Grid x:Name="BouncingWarning" VerticalAlignment="Top" Visibility="Collapsed" ClipToBounds="False" Margin="-66,-66,-66,-66">
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Grid.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" From="0,-15,0,15" To="0,-25,0,25">
                                        <ThicknessAnimation.EasingFunction>
                                            <SineEase EasingMode="EaseInOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>

                <Image Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/errorFloat_d.png" Margin="-66,-66,-66,-66"/>
                <Image Stretch="None" Source="{StaticResource IconWarning}" Margin="-48,-63,-48,-33"/>
            </Grid>
            <Image Stretch="None" Style="{StaticResource SectionImageStyle}"/>
        </Grid>
        <DataTemplate.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible" TargetName="BouncingWarning"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FooterCosts">
        <ItemsControl AlternationCount="{Binding Count}" ItemsSource="{Binding .}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,4,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Margin="0,0,30,0">
                        <ContentPresenter ContentTemplate="{StaticResource FooterFloatingWarningCost}" Content="{Binding .}"/>
                        <TextBlock Style="{StaticResource SectionResourceNameStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding MaxValue, StringFormat='{}{0} '}" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}"/>
                        <TextBlock Style="{StaticResource SectionResourceNameStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- Text section template -->
    <DataTemplate x:Key="DetailSectionsTemplate">
        <StackPanel x:Name="DetailContainer" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible">
            <Grid x:Name="SectionIcon" Width="64" Height="64"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="52,-12,0,-12">
                <Image Stretch="None" Style="{StaticResource SectionImageStyle}"/>
                <Rectangle Fill="{Binding Brush}" Width="48" Height="48"/>
            </Grid>

            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource SectionDescriptionStyle}" MaxWidth="{StaticResource DetailSectionWidth}">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                    <Condition Binding="{Binding TypeId}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SectionTemplate">
        <ItemsControl ItemsSource="{Binding Details}" ItemTemplate="{StaticResource DetailSectionsTemplate}"/>
    </DataTemplate>

    <!-- Properties Template -->
    <Style x:Key="ItemsControlHorizontalWrapPanel" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PropertyKeyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MaxWidth" Value="{StaticResource DetailSectionWidth}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb984e30dgab6ag4f54g883fg2f499f03b5f5',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3f2eb441g6794g47abgb02fgbc10c76df394',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h463784c4gb6b5g43cdga821gaee496c3b1ec',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5bc7fbd4gfd81g4e6eg94a5g1b655286b07c',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc2a87d26g99e3g40f8gb2cag8145328af515',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hff3fef16g4dcbg44e3g8bfbg3b15c27102c5',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7edff38ag7aaeg4e90g99fcgc0287127c41e',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h71bfc5dcg7f7dg4f57gbae4g047a4a7f6fc2',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1cf683bdg186eg4818gbf84g6255a3436a74',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha287aa54g9a53g4c18ga0f4gfeb652a28da4',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfbf78535g63cbg497bg9f0ag260553831875',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4bf65b5ag7f76g41caga545g0266adc4acab',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb0ae571cg757fg4b57g9fbcge9ac40b8244b',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="StoryItem">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0f3d9159g8d00g4bdagb9d4ge7536780a56a',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h54296628gd80ag4dc0g8ac0g4fa344620eae',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hccfa6976gd950g49e0g88a3gbb0e8380175f',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf777db58gf537g4f59g8bb2g4fb9b9d3fd59',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hddc0f4c0g9f50g450cg92b4g454f5a9e7700',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h14a75f4bg9f6ag485bg9105gb970ffad5b6d',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <!-- Save -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hc30ef867gedecg4c22ga387g648ea8224248" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hcd19f46ag85bcg41f2gb8fbg1dc69843d250" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="h33d41553g12cag401eg8c71g640d3d654054" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="hfb735304g4b35g49e2gbabeg05b183cb6de1" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9435ea1bgf6eag400bgb60ag95b634e2af49"/>
                                <Binding Source="habf9df38g5018g44c4gbb6fga77177a64218" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Attack -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde05b30egd3d5g4105g9d9ag6ef5ccb7ed95',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Ranged"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha4376985g7a7ag4c2agbf9cg43664c163828',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
		
	        <!-- Proficiency -->
		    <DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc36a544fg6ae1g45f0gb74aga36d2961a9b1',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertySeparatorStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb897c56egaa6fg460bg8676g8ebfa0340954',Converter={StaticResource TranslatedStringConverter}}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
		
	        <DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyValueStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{StaticResource TooltipColor.Secondary}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Long'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Long'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbeba665bg36e4g4607gb915g93572a74bc7c',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding TypeList}" />
            </DataTrigger>

            <!-- Cast Ability -->
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc8c67074g3c19g44d1g8b7bg9e5a8d06d87f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc30ef867gedecg4c22ga387g648ea8224248',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hcd19f46ag85bcg41f2gb8fbg1dc69843d250',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h33d41553g12cag401eg8c71g640d3d654054',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfb735304g4b35g49e2gbabeg05b183cb6de1',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='habf9df38g5018g44c4gbb6fga77177a64218',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Cooldown -->
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurn"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h62e22cc6g2c55g4e71g9210ge285ab6b4e96',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurnNoRealtime"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h62e22cc6g2c55g4e71g9210ge285ab6b4e96',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerCombat"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he160aa33g42bdg461dg8a94g6b40c8e2d44b',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd710a0f7g9695g497dg95c1g754b679cd05c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h70cd2327g366dg4a63g9a32g29bd83fd88d3',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
		
	        <!-- Proficiency -->
			<DataTrigger Binding="{Binding TypeId}" Value="Proficiency">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Battleaxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0987de21g7f18g46bdg96b6g251f0d886fd8',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Clubs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf7ee4cf2g8054g4cecgaf42g00e26e4c6301',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Daggers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9bc5c71gf7fdg4f77gad7eg14da6c8ecfc2',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Darts"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf8205efdgf1f5g4581g8391g829af9b98138',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Flails"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf61bb53cg6987g4c34gbaf3g008e491dd1bd',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Glaives"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h899d4afbgabdag433ag924ag1aa328117d8a',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greataxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9430a867gd49ag48c8g9900gc945e3326765',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greatclubs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hec8a15degd33fg4fdagaf70gf0f1c9dd53e9',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greatswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d8817a2gf20dg4eb8gbcd0gfd1bc5428004',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Halberds"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9d067e1g28dfg4fa3gbdabg0c3fa133279d',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Handaxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h35568a26gee03g4dfagb3d0g35db1faec364',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HandCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23613b92g02b0g4b9cg9b7fg937f0d83f7d8',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HeavyArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa2140c8g0b74g4ac0g81ffg75146ee3ef6c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HeavyCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5b736f1eg9895g4263gb76dg76c06c1038ae',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Javelins"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbfcb8bcbg561ag473bga1a0g4e184d2b2692',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1f5f61b0ge1b7g4d5fga2e9g46b1d5a9330b',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h210d748egfceeg4e76gabe5g9080c902693f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightHammers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha0df64f6gae3cg4dd4gaee6g8aa988bfde8f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Longbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h68720f95gd2c6g4b0ega150geece5a885719',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Longswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23d056e9g6d0cg47d1g9603g873752123142',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Maces"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h6718875ag0e2eg46eag98f0gb8d626d5ec13',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="MartialWeapons"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h93cf8a7dgf14dg4f68g816fgdbf4de0dae41',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Mauls"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1332cd56g203fg4919gac2dg2d2443302a31',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="MediumArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdc524c1age0cdg4303g9e52g7bcc933c7b0b',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Morningstars"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc622f5a9gf7cag4b6ag8e99g792d3831fdfc',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Pikes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he28bbadcgf4fdg48f8gb59bg89d5895d1267',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Quarterstaffs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3fcd9f76g0dcfg4038g9a56g06353c1c0cea',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Rapiers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3c574faagd3dbg4b38gbca9g2a71750dfcf0',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Scimitars"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4caa96c2g100fg4292ga543g740f93ad59ca',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shields"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7a819a15g5129g48bagafc1g1c73cc6634ab',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shortbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h931161d1ge54ag480agb3d1gdaf3ed47004c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shortswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2529ddf4gb846g4940g9b1dg9969718fe87d',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Sickles"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h28d04d64ge35dg4469g956bg27d715d6e9b1',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="SimpleWeapons"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd0ea839ag4be2g455bgbff6g71446c4f1355',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Slings"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc5bd4565g187cg49e2ga99eg43b33c5b8142',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Spears"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h45a6183ag755ag4fdagb147gae8c86ceec57',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Tridents"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf2542d79gdedfg4a37gb9d2g2238be0f9f4c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Warhammers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4e50a96bg2c2bg41daga27eg623eeae44daf',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Warpicks"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2914d6ecg0f4ag4452ga88cg59a2f075a69f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="PropertyTemplate">
        <StackPanel x:Name="PropertyContainer" Orientation="Horizontal" Margin="-10,0,32,0" ToolTipService.Placement="Top" ToolTipService.IsEnabled="False" Visibility="{Binding TypeId, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}" Tag="{Binding Path=Owner, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:LSElementCopy}}">
            <StackPanel.Resources>
                <Style x:Key="IconDetailSectionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource SectionDescriptionStyle}">
                    <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
                    <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Keyword}" />
                    <Setter Property="HorizontalAlignment" Value="Left" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="TextAlignment" Value="Left" />
                </Style>
            </StackPanel.Resources>

            <StackPanel.ToolTip>
                <ls:LSTooltip Content="{Binding Path=DataContext , ElementName=PropertyContainer}" ls:TooltipExtender.Owner="{Binding Path=Tag, ElementName=PropertyContainer}">
                    <ls:LSTooltip.ContentTemplate>
                        <DataTemplate>
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Style="{StaticResource PropertyKeyStyle}" />
                                <TextBlock Grid.Column="1" Style="{StaticResource PropertySeparatorStyle}"/>
                                <TextBlock Grid.Column="2" Style="{StaticResource PropertyValueStyle}"/>
                            </Grid>
                        </DataTemplate>
                    </ls:LSTooltip.ContentTemplate>

                </ls:LSTooltip>
            </StackPanel.ToolTip>

            <Image x:Name="PropertyIcon" HorizontalAlignment="Center" Stretch="None" Style="{StaticResource SectionImageStyle}" Width="64" Height="64"/>
            <TextBlock x:Name="PropertyText" Style="{StaticResource IconDetailSectionTextStyle}" Visibility="Visible">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ContextStringValue}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Radius">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DoubleValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h463784c4gb6b5g43cdga821gaee496c3b1ec',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5bc7fbd4gfd81g4e6eg94a5g1b655286b07c',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc2a87d26g99e3g40f8gb2cag8145328af515',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hff3fef16g4dcbg44e3g8bfbg3b15c27102c5',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7edff38ag7aaeg4e90g99fcgc0287127c41e',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h71bfc5dcg7f7dg4f57gbae4g047a4a7f6fc2',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Thrown">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1cf683bdg186eg4818gbf84g6255a3436a74',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha287aa54g9a53g4c18ga0f4gfeb652a28da4',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfbf78535g63cbg497bg9f0ag260553831875',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4bf65b5ag7f76g41caga545g0266adc4acab',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb0ae571cg757fg4b57g9fbcge9ac40b8244b',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="StoryItem">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0f3d9159g8d00g4bdagb9d4ge7536780a56a',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h54296628gd80ag4dc0g8ac0g4fa344620eae',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hccfa6976gd950g49e0g88a3gbb0e8380175f',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Type">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding SubtypeId}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="TargetSelf">
                <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h02316c7bgeac5g4b0egb78cg44b193b2e233',Converter={StaticResource TranslatedStringConverter}}" />
            </DataTrigger>

			<!-- Cast Ability -->
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1579d774gdbcdg4a97gb3fage409138d104d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d7356d7g4c37g41e4gb8a2gef3459e12b97',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h20676a9ag9216g47dbgba3ag82bd734cfd53',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha1a41e74g2804g4a70g9a85g6235163d41da',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2e9f1067g2dceg4640g8816gc6394e9f0303',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="CastAbility"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha2fc9b3dg3305g404eg9256gf25a06d0b2aa',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Cooldown -->
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurn"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8c45d8a5gf1b2g4723ga21ageacde38ba8cc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerTurnNoRealtime"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8c45d8a5gf1b2g4723ga21ageacde38ba8cc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="OncePerCombat"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h223d44e2g5654g496cg8997gb218f29eba0c',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d993cfag30d7g474fgaf29gdcdc3cd67bdc',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Cooldown"/>
                    <Condition Binding="{Binding SubtypeId}" Value="UntilShortRest"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h199b711fg12f1g49c1ga68dg576a864a1fc2',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Save -->
            <DataTrigger Binding="{Binding TypeId}" Value="Save">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding IsPerTurn}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyIcon" Property="Source" Value="{StaticResource IconSaveTurn}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Strength"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1579d774gdbcdg4a97gb3fage409138d104d',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Dexterity"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d7356d7g4c37g41e4gb8a2gef3459e12b97',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Constitution"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h20676a9ag9216g47dbgba3ag82bd734cfd53',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Intelligence"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha1a41e74g2804g4a70g9a85g6235163d41da',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Wisdom"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2e9f1067g2dceg4640g8816gc6394e9f0303',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Save"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Charisma"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha2fc9b3dg3305g404eg9256gf25a06d0b2aa',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Attack -->
            <DataTrigger Binding="{Binding TypeId}" Value="Attack">
                <Setter TargetName="PropertyContainer" Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Melee"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde2dafecgf6f5g489ag9baeg23d0610570f5',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Attack"/>
                    <Condition Binding="{Binding SubtypeId}" Value="Ranged"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h52df2583g5fc1g4182g9511g36238e4e0c19',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			
			<!-- Proficiency -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Battleaxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0987de21g7f18g46bdg96b6g251f0d886fd8',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Clubs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf7ee4cf2g8054g4cecgaf42g00e26e4c6301',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Daggers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9bc5c71gf7fdg4f77gad7eg14da6c8ecfc2',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Darts"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf8205efdgf1f5g4581g8391g829af9b98138',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Flails"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf61bb53cg6987g4c34gbaf3g008e491dd1bd',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Glaives"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h899d4afbgabdag433ag924ag1aa328117d8a',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greataxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9430a867gd49ag48c8g9900gc945e3326765',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greatclubs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hec8a15degd33fg4fdagaf70gf0f1c9dd53e9',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Greatswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8d8817a2gf20dg4eb8gbcd0gfd1bc5428004',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Halberds"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha9d067e1g28dfg4fa3gbdabg0c3fa133279d',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Handaxes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h35568a26gee03g4dfagb3d0g35db1faec364',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HandCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23613b92g02b0g4b9cg9b7fg937f0d83f7d8',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HeavyArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa2140c8g0b74g4ac0g81ffg75146ee3ef6c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="HeavyCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5b736f1eg9895g4263gb76dg76c06c1038ae',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Javelins"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbfcb8bcbg561ag473bga1a0g4e184d2b2692',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1f5f61b0ge1b7g4d5fga2e9g46b1d5a9330b',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightCrossbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h210d748egfceeg4e76gabe5g9080c902693f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="LightHammers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha0df64f6gae3cg4dd4gaee6g8aa988bfde8f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Longbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h68720f95gd2c6g4b0ega150geece5a885719',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Longswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h23d056e9g6d0cg47d1g9603g873752123142',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Maces"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h6718875ag0e2eg46eag98f0gb8d626d5ec13',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="MartialWeapons"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h93cf8a7dgf14dg4f68g816fgdbf4de0dae41',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Mauls"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1332cd56g203fg4919gac2dg2d2443302a31',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="MediumArmor"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdc524c1age0cdg4303g9e52g7bcc933c7b0b',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Morningstars"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc622f5a9gf7cag4b6ag8e99g792d3831fdfc',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Pikes"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he28bbadcgf4fdg48f8gb59bg89d5895d1267',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Quarterstaffs"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3fcd9f76g0dcfg4038g9a56g06353c1c0cea',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Rapiers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3c574faagd3dbg4b38gbca9g2a71750dfcf0',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Scimitars"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4caa96c2g100fg4292ga543g740f93ad59ca',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shields"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h7a819a15g5129g48bagafc1g1c73cc6634ab',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shortbows"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h931161d1ge54ag480agb3d1gdaf3ed47004c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Shortswords"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2529ddf4gb846g4940g9b1dg9969718fe87d',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Sickles"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h28d04d64ge35dg4469g956bg27d715d6e9b1',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="SimpleWeapons"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd0ea839ag4be2g455bgbff6g71446c4f1355',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Slings"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc5bd4565g187cg49e2ga99eg43b33c5b8142',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Spears"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h45a6183ag755ag4fdagb147gae8c86ceec57',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Tridents"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf2542d79gdedfg4a37gb9d2g2238be0f9f4c',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Warhammers"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4e50a96bg2c2bg41daga27eg623eeae44daf',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding TypeId}" Value="Proficiency"/>
					<Condition Binding="{Binding SubtypeId}" Value="Warpicks"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="PropertyText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2914d6ecg0f4ag4452ga88cg59a2f075a69f',Converter={StaticResource TranslatedStringConverter}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
		</DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="SpellSchoolTitle">
        <TextBlock x:Name="txt" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="SmallSize">
                <Setter TargetName="txt" Property="FontSize" Value="{StaticResource SmallFontSize}"/>
                <Setter TargetName="txt" Property="Margin" Value="0"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="None"/>
                    <Condition Binding="{Binding IsSpell}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding GroupType, Converter={StaticResource EnumTranslatedStringConverter}}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--cantrips-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h84d192f5g6473g4932gb6a8g1387eae58320',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='he52cfcbag8a50g453agb4c8g2fac2ff17c10',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h39ad0edbg77d3g4021g9e2eg191042e6d467',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h79636df9g296cg4bfdga59cgb7db7d3419ab',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h42bcd6b2g9deag452cgb9adg4ce569758b0f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h6b2a69f0g57e8g45c0gb271gbd317790bc8f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h1431ea5eg3cd6g464dga8c6gfd9653e48f7e',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h2e7f0955g4be5g4a21g8f1cg221d590807d4',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Levelled Spells W SpellSchool-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3d4828d5gd55ag409dgae7dg3bd8a511ab88"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="ha6d3a561g6626g44fegbbd4g77ad67a79367"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h4059b271gffb3g401dga73ag759f7727aa35"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h53d95750g137ag47f1ga9f4g80a302360a96"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3fe64b3dgfa67g41acg8626g616f6431c50e"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h777f9097ge5e2g4741g8b78gde7559263ce5"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3818a08fg8f0fg47d1gaadegffd9ad47278e"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="had85051cg9819g432ag8014gcd586df07944"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Text, ElementName=txt, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
                <Setter TargetName="txt" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="WarningLabelTemplate">
        <StackPanel Orientation="Horizontal">
            <Rectangle Fill="{DynamicResource WarningIcon}" VerticalAlignment="Center" Width="48" Height="48" Margin="-2,-2,8,-2"/>
            <TextBlock VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" MaxWidth="{StaticResource DetailSectionWidth}" Foreground="{DynamicResource TextColor}" Style="{StaticResource TooltipStringBodyStyle}"/>
        </StackPanel>
    </ControlTemplate>

    <!-- Passive Tooltip -->
    <DataTemplate x:Key="PassivesTooltip">
        <Grid>
            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}" Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter} , ConverterParameter='Assets/Tooltips/Icons/'}" />

            <StackPanel HorizontalAlignment="Center" Margin="0 5 0 0" Width="{StaticResource MaxTooltipContentWidth}" >
                <!-- Title -->
                <TextBlock x:Name="TitleText" Style="{StaticResource TooltipCtxTransStringTitleStyle}" Width="{StaticResource MaxWidthOnCollisionWithImage}">
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </b:Interaction.Behaviors>
                </TextBlock>

                <TextBlock x:Name="subtitleText" Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='he8ad7cd6g0ffag472ega526g52c8ef0560f1',Converter={StaticResource TranslatedStringConverter}}"/>

                <!-- Description -->
                <TextBlock x:Name="DescriptionText" Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" Width="{StaticResource MaxWidthOnCollisionWithImage}" Margin="{StaticResource DefaultMarginBottom}">
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </b:Interaction.Behaviors>
                </TextBlock>

                <!-- Extra descrìption -->
                <TextBlock x:Name="PassiveExtraDescription" Style="{StaticResource TooltipCtxTransStringAdjustableDescriptionStyle}" Visibility="{Binding ExtraDescription, Converter={StaticResource StringToVisibilityConverter}}"  VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}">
                    <b:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                    </b:Interaction.Behaviors>
                </TextBlock>

                <!-- Properties and warnings -->
                <StackPanel x:Name="PropertiesAndWarningsSection">
                    <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>

                    <Control x:Name="WarningToggleable" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h0600e546g6545g4d00g8794g72aad11f278a',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarningSoft}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
                        </Control.Resources>
                    </Control>

                    <Control x:Name="WarningShortRest" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h2e273132g455dg487cgbe1ag5a57d9edf32f',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarning}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
                        </Control.Resources>
                    </Control>

                    <Control x:Name="WarningLongRest" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h62353a25g90fbg4d59gb43cg41980724bfb5',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarning}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
                        </Control.Resources>
                    </Control>

                    <Control x:Name="WarningCombatLimit" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h70bf753ege90eg4f5ag96a5ge6535b9a1267',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarning}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
                        </Control.Resources>
                    </Control>

                    <Control x:Name="WarningTurnLimit" Template="{StaticResource WarningLabelTemplate}" Tag="{Binding Source='h7a505843g6315g491fgb777ga13adac924b2',Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarning}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_warning50TxtColor}, Path=Color}"/>
                        </Control.Resources>
                    </Control>

                    <ItemsControl ItemsSource="{Binding WarningSections}" ItemTemplate="{StaticResource SectionTemplate}" Visibility="{Binding WarningSections.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="-70,0,0,0"/>

                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Properties.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                        <Condition Binding="{Binding WarningSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Margin" Value="0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>

                <!-- Lore description -->
                <ContentControl x:Name="LoreDescriptionSection" Template="{StaticResource TooltipStripLoreTextTemplate}" Visibility="{Binding LoreDescription, Converter={StaticResource StringToVisibilityConverter}}">
                    <TextBlock Style="{StaticResource TooltipSpecialDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding LoreDescription.Str}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="0,8,0,16"/>
                </ContentControl>

                <ContentControl x:Name="footer" Template="{StaticResource TooltipStripBottomTemplate}" Visibility="Collapsed" ContentTemplate="{StaticResource FooterCosts}" Content="{Binding CostSummary}" />
            </StackPanel>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsToggleable}" Value="False">
                <Setter TargetName="DecorationImage" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="subtitleText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h099ebd82g6ea7g43b7gbf0fg69e32653f322',Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="TitleText" Property="Width" Value="{StaticResource MaxTooltipContentWidth}"/>
                <Setter TargetName="DescriptionText" Property="Width" Value="{StaticResource MaxTooltipContentWidth}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ElementName=PassiveExtraDescription, Path=Visibility}" Value="Visible">
                <Setter TargetName="PassiveExtraDescription" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsToggleable}" Value="True"/>
                    <Condition Binding="{Binding (ls:TooltipExtender.Context), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="StatsPanel"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="WarningToggleable" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding ShortRestLimitExceeded}" Value="True">
                <Setter TargetName="WarningShortRest" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding LongRestLimitExceeded}" Value="True">
                <Setter TargetName="WarningLongRest" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CombatLimitExceeded}" Value="True">
                <Setter TargetName="WarningCombatLimit" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TurnLimitExceeded}" Value="True">
                <Setter TargetName="WarningTurnLimit" Property="Visibility" Value="Visible"/>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMPassive}">
        <ContentPresenter Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterCreationPassive}">
        <ContentPresenter Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipPassive}">
        <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource PassivesTooltip}"/>
    </DataTemplate>

    <!-- Item Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMItem}" >
        <Grid x:Name="root" DataContext="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}"   >
			<!-- Image and gradient -->
            <Rectangle Style="{StaticResource TooltipItemRarityRectangleStyle}" />


            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}" Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter}, ConverterParameter='Assets/Tooltips/ItemIcons/'}" />

            <Grid x:Name="ContentHolder" Width="{StaticResource MaxTooltipContentWidth}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!-- Text and other content -->
                <StackPanel MaxWidth="{StaticResource MaxTooltipContentWidth}" >

                    <!-- HEADER -->
                    <StackPanel x:Name="HeaderSection" Margin="{StaticResource DefaultMarginBottom}">
                        <!-- Title and subtitle -->
                        <TextBlock Style="{StaticResource TooltipItemRarityTextStyle}" Text="{Binding Item.Name}" MaxWidth="{StaticResource MaxWidthOnCollisionWithImage}"/>

                        <TextBlock x:Name="SubTitleContainer" Style="{StaticResource TooltipSubTitleNoCollapseStyle}" Margin="0,-8,0,0">
                            <Run x:Name="Rarity" Text="{Binding RarityText, StringFormat='{}{0} '}"/><Run 
                            x:Name="SubTitle" Text="{Binding TypeText}"/>
                        </TextBlock>
                        
                        <!-- Remaining time for summons -->
                        <ContentControl x:Name="LifetimeHolder" Template="{StaticResource TooltipStripTemplate}" Margin="{StaticResource DefaultMarginTop}">
                            <StackPanel x:Name="Duration" Orientation="Horizontal" Margin="0,11">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Center" Margin="38,0,28,0" />
                                <TextBlock x:Name="LifetimeDurationText" FontSize="{DynamicResource MediumFontSize}" VerticalAlignment="Center">
                                    <ls:TextBlockFormatter.SourceText>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                            <Binding Path="DataContext.Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                                        </MultiBinding>
                                    </ls:TextBlockFormatter.SourceText>
                                </TextBlock>
                            </StackPanel>
                        </ContentControl>
                    </StackPanel>

                    <!-- DAMAGES -->
                    <StackPanel x:Name="DamagesSection">
                        <!-- Camp Supplies -->
                        <StackPanel x:Name="suppliesDisplay" Orientation="Horizontal" ToolTipService.Placement="Top" ToolTipService.VerticalOffset="0" Visibility="{Binding CampSupplies, Converter={StaticResource CountToVisibilityConverter}}">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_campSupplies.png" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-16,0,0,0"/>
                            <TextBlock VerticalAlignment="Center" FontSize="{StaticResource BigFontSize}">
                                <ls:TextBlockFormatter.SourceText>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="hbae5dd01g4c64g4b58ga7bcg84360d7a5458"/>
                                        <Binding Path="CampSupplies"/>
                                    </MultiBinding>
                                </ls:TextBlockFormatter.SourceText>
                            </TextBlock>
                        </StackPanel>

                        <!-- Armor stats -->
                        <StackPanel x:Name="armorDisplay" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-14,0,0,0" ClipToBounds="False" Visibility="{Binding ArmorSection.Details.Count, Converter={StaticResource CountToVisibilityConverter}}">
                            <Grid DataContext="{Binding ArmorSection.Details[0]}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC_primary.png" Stretch="None" />
                                <TextBlock x:Name="ArmorText" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource DamageText}" Text="{Binding Value}"/>
                            </Grid>
                            <TextBlock Text="{Binding Source='h6d1b6256g3ea8g4e82gaa0agc7fbeb252fdf',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Style="{StaticResource DamageText}"/>
                        </StackPanel>

                        <!-- Weapon Damage stats -->
                        <StackPanel x:Name="damageDisplay" ls:AttachedProperties.InheritedTag="{Binding Damages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}" >
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                                    <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="damageDisplay"/>
                                                    <Binding Source="{StaticResource FloatZero}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Margin" Value="0,0,0,4"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                                    <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="damageDisplay"/>
                                                    <Binding Source="{StaticResource FloatZero}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="Margin" Value="0,0,0,4"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Style="{StaticResource TooltipTitleStyle}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="damageDisplay"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="damageDisplay"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Foreground="{DynamicResource TooltipColor.Primary}" FontSize="{DynamicResource MediumFontSize}" FontFamily="{StaticResource DefaultFont}" Margin="0,-8,0,0" Visibility="{Binding IsVersatile, Converter={StaticResource BoolToVisibleConverter}}">
                                <Run x:Name="WeaponHandType" Text="{Binding Source='h46fbfb55g8805g4f8ag9b21g00d4cd9eb944',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Run x:Name="WeaponEquipped" Text="" />
                            </TextBlock>

                            <StackPanel Orientation="Horizontal" ClipToBounds="False">
                                <ItemsControl x:Name="DamageDice" VerticalAlignment="Center" HorizontalAlignment="Left" ItemsSource="{Binding Damages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />

                                <ItemsControl x:Name="DamagesList" ItemsSource="{Binding Damages}" AlternationCount="{Binding Damages.Count}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,10,0,10" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock x:Name="DamageLabel" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" ls:TextBlockFormatter.SourceText="{Binding DiceTypeSet.Str, StringFormat='+{0}'}" />
                                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageIconStyle}" />
                                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageValueTextStyle}"/>
                                                <Control Template="{StaticResource DamageTypeNameTemplate}">
                                                    <Control.Resources>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                                    </Control.Resources>
                                                </Control>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                    <Setter TargetName="DamageLabel" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DiceTypeSet.Str}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </StackPanel>

                        <!-- Weapon Versatile Damage stats -->
                        <StackPanel x:Name="versatileDamageDisplay" ls:AttachedProperties.InheritedTag="{Binding VersatileDamages, Converter={StaticResource RollOutcomeConverter}, ConverterParameter='minmax'}">
                            <StackPanel.Tag>
                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                    <Binding Path="(ls:TooltipExtender.Owner)" RelativeSource="{RelativeSource Mode=TemplatedParent}"/>
                                    <Binding Path="EquippingCharacter"/>
                                </MultiBinding>
                            </StackPanel.Tag>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                                    <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="versatileDamageDisplay"/>
                                                    <Binding Source="{StaticResource FloatZero}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                                    <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="versatileDamageDisplay"/>
                                                    <Binding Source="{StaticResource FloatZero}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource TooltipTitleStyle}" Margin="{StaticResource DefaultMarginTop}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="h4b0d6407g56b2g408cga7f8gda7a3c0affe4"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).x" ElementName="versatileDamageDisplay"/>
                                        <Binding Path="(ls:AttachedProperties.InheritedTag).y" ElementName="versatileDamageDisplay"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <TextBlock Foreground="{DynamicResource TooltipColor.Primary}" FontSize="{DynamicResource MediumFontSize}" FontFamily="{StaticResource DefaultFont}" Margin="0,-8,0,0">
                                <Run Text="{Binding Source='h36a9679ag7e1dg40bfg9ad2g0adf1703d822',Converter={StaticResource TranslatedStringConverter}}"/>
                                <Run x:Name="VersatileWeaponEquipped" Text="" />
                            </TextBlock>

                            <StackPanel Orientation="Horizontal" ClipToBounds="False">
                                <ItemsControl x:Name="VersatileDamageDice" VerticalAlignment="Center" HorizontalAlignment="Left" ItemsSource="{Binding VersatileDamages}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />

                                <ItemsControl x:Name="VersatileDamageList" ItemsSource="{Binding VersatileDamages}" AlternationCount="{Binding VersatileDamages.Count}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,10,0,10" >
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock x:Name="VersatileDamageLabel" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource DamageValueTextStyle}" ls:TextBlockFormatter.SourceText="{Binding DiceTypeSet.Str, StringFormat='+{0}'}" />
                                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Style="{DynamicResource DamageIconStyle}" />
                                                <Control HorizontalAlignment="Left" VerticalAlignment="Center" Template="{StaticResource DamageTypeNameTemplate}">
                                                    <Control.Resources>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DamageValueTextStyle}"/>
                                                    </Control.Resources>
                                                </Control>
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                    <Setter TargetName="VersatileDamageLabel" Property="ls:TextBlockFormatter.SourceText" Value="{Binding DiceTypeSet.Str}" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </StackPanel>

                        <!-- Spell Damage and result stats -->
                        <ContentPresenter x:Name="SpellDamage" ContentTemplate="{StaticResource SpellDamageSection}" Content="{Binding Path=DataContext.Spell , ElementName=root}"/>

                        <!-- Status Damage -->
                        <ContentPresenter ContentTemplate="{StaticResource StatusDamageSection}" Content="{Binding Status}"/>

                        <!-- Damages separator -->
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CampSupplies, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding ArmorSection.Details.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding VersatileDamages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding Spell.Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding Status.Damages.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Margin" Value="0"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                    </StackPanel>

                    <!-- TECHNICAL DESCRIPTION -->
                    <StackPanel x:Name="TechnicalDescriptionSection" HorizontalAlignment="Left">
                        <!-- Technical description -->
                        <TextBlock x:Name="technicalDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding TechnicalDescription}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource DefaultMarginBottom}"/>

                        <!-- Spell description -->
                        <TextBlock x:Name="spellTechnicalDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding Spell.Description, Converter={StaticResource StringToVisibilityConverter}}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource DefaultMarginBottom}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Spell.Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                        </TextBlock>

                        <!-- Spell extra description -->
                        <TextBlock x:Name="spellExtraDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding Spell.ExtraDescription, Converter={StaticResource StringToVisibilityConverter}}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource DefaultMarginBottom}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Spell.ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                        </TextBlock>

                        <!-- Status description -->
                        <TextBlock x:Name="StatusDescription" Style="{StaticResource TooltipAdjustableDescriptionStyle}" Visibility="{Binding Status.Description, Converter={StaticResource StringToVisibilityConverter}}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource DefaultMarginBottom}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Status.Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                        </TextBlock>

                        <!-- Status -->
                        <WrapPanel x:Name="Status" Margin="0,-12,0,0" >
                            <ContentPresenter ContentTemplate="{StaticResource StatusList}" Content="{Binding Spell.ResultSections}" Visibility="{Binding Spell.ResultSections.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                            <ContentPresenter ContentTemplate="{StaticResource StatusList}" Content="{Binding StatusSections}" Visibility="{Binding StatusSections.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                        </WrapPanel>

                    </StackPanel>

                    <!-- METAMAGIC -->
                    <ContentPresenter ContentTemplate="{StaticResource MetamagicSection}" Content="{Binding .}" Margin="0"/>
                    
					<!-- MAGICAL PROPERTIES -->
                    <ContentControl x:Name="BoostsAndPassivesSection" Visibility="Collapsed" Template="{StaticResource TooltipStripMagicalPropertiesTemplate}">
                        <!-- Boosts and Passives -->
                        <StackPanel>
                            <StackPanel x:Name="BoostsAndPassives" Visibility="Collapsed">
                                <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding Passives}" DataContext="{Binding .}"/>
                                <ContentPresenter x:Name="Boosts" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding Boosts}" DataContext="{Binding .}"/>

                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding PassivesMainHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                    <Condition Binding="{Binding BoostsMainHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                    <Condition Binding="{Binding PassivesOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                    <Condition Binding="{Binding BoostsOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Margin" Value="0"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>

                            <StackPanel x:Name="BoostsAndPassivesMainHand" Visibility="Collapsed">
                                <TextBlock x:Name="BoostTitleMainHand" Style="{StaticResource TooltipSectionTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h8a2addc4gb160g4358g90a6gb65f1f7c0000', Converter={StaticResource TranslatedStringConverter}}" Margin="0,8,0,16"/>
                                <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding PassivesMainHand}" DataContext="{Binding .}"/>
                                <ContentPresenter x:Name="BoostsMainHand" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding BoostsMainHand}" DataContext="{Binding .}"/>

                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding PassivesOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                    <Condition Binding="{Binding BoostsOffHand.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Margin" Value="0"/>
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            </StackPanel>

                            <StackPanel x:Name="BoostsAndPassivesOffHand" Visibility="Collapsed" Margin="{StaticResource DefaultMarginBottom}">
                                <TextBlock x:Name="BoostTitleOffHand" Style="{StaticResource TooltipSectionTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h80276877gd95cg4477ga1a3g85986f4f919b', Converter={StaticResource TranslatedStringConverter}}" Margin="0,8,0,16"/>
                                <ContentPresenter Style="{StaticResource ItemPassivesContentPresenterStyle}" Content="{Binding PassivesOffHand}" DataContext="{Binding .}"/>
                                <ContentPresenter x:Name="BoostsOffHand" Style="{StaticResource ItemBoostsContentPresenterStyle}" Content="{Binding BoostsOffHand}" DataContext="{Binding .}"/>
                            </StackPanel>

							<ContentPresenter x:Name="PermanentStatuses" ContentTemplate="{StaticResource ActiveConditionsSection}" Content="{Binding PermanentStatusEffects}"/>
                        </StackPanel>
                    </ContentControl>

                    <!-- Proficiency Unlocks (Actions) -->
                    <StackPanel x:Name="ActionsPanel" Visibility="{Binding Actions.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="{StaticResource DefaultMarginBottom}">
                        <StackPanel Style="{StaticResource SubSectionPanelStyle}">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_proficiency.png" Style="{StaticResource SubSectionImageStyle}"/>
                            <TextBlock Style="{StaticResource TooltipSectionTitleStyle}" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Source='h23929a25gb39ag409bga61ag1b0e9d6f5852',Converter={StaticResource TranslatedStringConverter}}"/>
                        </StackPanel>

                        <ItemsControl ItemsSource="{Binding Actions}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,6,8,0">
                                        <Rectangle x:Name="IconBorder" Style="{StaticResource TooltipBoostIconBorderDashedStyle}" Width="86" Height="86"/>
                                        <Rectangle x:Name="Icon" Style="{StaticResource TooltipBoostIconStyle}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Width="64" Height="64">
                                            <Rectangle.ToolTip>
                                                <ls:LSTooltip Content="{Binding DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </Rectangle.ToolTip>
                                        </Rectangle>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding DataContext.NeedsProficiency, ElementName=ActionsPanel}" Value="True" />
                                                <Condition Binding="{Binding DataContext.IsProficient, ElementName=ActionsPanel}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="Icon" Property="Opacity" Value="0.7"/>
                                                <Setter TargetName="IconBorder" Property="Stroke" Value="{StaticResource TooltipColor.Special}" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                    <!-- LORE DESCRIPTION -->
                    <ContentControl x:Name="LoreDescriptionSection" Template="{StaticResource TooltipStripLoreTextTemplate}">
                        <StackPanel>
                            <!-- Item Description -->
                            <TextBlock x:Name="description" Style="{StaticResource TooltipSpecialDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}"/>

                            <!-- Spell Lore Description -->
                            <TextBlock x:Name="spellLoreDescription" Style="{StaticResource TooltipSpecialDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Spell.LoreDescription.Str}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Visibility="{Binding Spell.LoreDescription, Converter={StaticResource StringToVisibilityConverter}}"/>
                        </StackPanel>

                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Setter Property="Margin" Value="0,8,0,16"/>

                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=Visibility, ElementName=description}" Value="Collapsed"/>
                                            <Condition Binding="{Binding Path=Visibility, ElementName=spellLoreDescription}" Value="Collapsed"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>

                    <!-- Equipped By Warning-->
                    <Control x:Name="EquippedByWarning" Template="{StaticResource WarningLabelTemplate}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarningGrey}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_accent100TxtColor}, Path=Color}"/>
                        </Control.Resources>
                        <Control.Tag>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h7660812bg5518g4b67g8fbdg835faf6ef636"/>
                                <Binding Path="EquippingCharacter.Name"/>
                            </MultiBinding>
                        </Control.Tag>
                    </Control>

                    <!-- Armor Class Warning-->
                    <Control x:Name="ACAbilityWarning" Template="{StaticResource WarningLabelTemplate}" Visibility="Collapsed" Margin="-10,0,0,0">
                        <Control.Resources>
                            <ImageBrush x:Key="WarningIcon" ImageSource="{StaticResource IconWarningGrey}" Stretch="Fill"/>
                            <SolidColorBrush x:Key="TextColor" Color="{Binding Source={StaticResource LS_accent100TxtColor}, Path=Color}"/>
                        </Control.Resources>
                        <Control.Tag>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h4333422eg15d9g4c6egbfbeg9f06915940d1"/>
                                <Binding Path="ACAbilityCap"/>
                            </MultiBinding>
                        </Control.Tag>
                    </Control>

                    <!-- WARNINGS -->
                    <ItemsControl x:Name="WarningSection" ItemsSource="{Binding WarningSections}" ItemTemplate="{StaticResource SectionTemplate}" Visibility="{Binding WarningSections.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="-70,0,0,16"/>

                    <!-- ACTIVE CONDITIONS -->
                    <ContentPresenter ContentTemplate="{StaticResource ActiveConditionsSection}" Content="{Binding StatusEffects}">
                        <ContentPresenter.Style>
                            <Style TargetType="ContentPresenter">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StatusEffects.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                        <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Style>
                    </ContentPresenter>

                    <WrapPanel x:Name="PropertiesSection" Orientation="Horizontal">
                        <ItemsControl ItemsSource="{Binding Spell.Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Spell.Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>
                        <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}"/>

                        <WrapPanel.Style>
                            <Style TargetType="WrapPanel">
                                <Setter Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Properties.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                            <Condition Binding="{Binding Spell.Properties.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Margin" Value="0"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </WrapPanel.Style>
                    </WrapPanel>
                </StackPanel>

                <!-- FOOTER -->
                <ContentControl Grid.Row="1" Template="{StaticResource TooltipStripBottomTemplate}" Visibility="{Binding CanMove, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Bottom">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="ItemTooltipBottomTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBottomTextStyle}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Cost Summary -->
                        <WrapPanel x:Name="CostSummary" Grid.Row="0" Visibility="Collapsed">
                            <ContentPresenter ContentTemplate="{StaticResource FooterCosts}" Content="{Binding CostSummary}"/>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsConsumable, Converter={StaticResource BoolToVisibleConverter}}" Margin="0,2,0,-2">
                                <Image x:Name="PropertyIcon" HorizontalAlignment="Center" Stretch="Uniform" Width="48" Height="48"  Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_consumeTT.png"/>
                                <TextBlock Style="{StaticResource SectionResourceNameStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Source='h3d9ac91dg2ed4g47aega170gc4d638367579',Converter={StaticResource TranslatedStringConverter}}"/>
                                <StackPanel.ToolTip>
                                    <ls:LSTooltip IsHitTestVisible="False" Content="ha8b28fcaga542g44ecg91bbgdaa03d029898" Tag="h3d9ac91dg2ed4g47aega170gc4d638367579" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </WrapPanel>

                        <!-- Weight -->
                        <StackPanel x:Name="WeightContainer" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Background="Transparent" VerticalAlignment="Bottom">
                            <TextBlock x:Name="weightText" ls:TextBlockFormatter.SourceText="{Binding Weight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight N2'}" Style="{StaticResource ItemTooltipBottomTextStyle}"/>
                            <Image x:Name="weightIcon" Source="{StaticResource IconWeight}" Stretch="None" Margin="0,-10,0,-4"/>
                            <StackPanel.ToolTip>
                                <ls:LSTooltip IsHitTestVisible="False" Content="h9b3f757dgbe75g41a6gae52g0c2b1a5e49f2" Tag="hd4969285gc8d8g41afg8e2cg12d5444acbe2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <!-- Gold -->
                        <StackPanel x:Name="GoldContainer" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Background="Transparent" VerticalAlignment="Bottom" Margin="0,0,0,2">
                            <!-- Original gold value -->
                            <Grid>
                                <Path x:Name="Strikethrough" Stroke="{DynamicResource LS_OriginalTradePriceColor}" StrokeThickness="4" Stretch="Fill" Visibility="Hidden" Margin="-4,0,-4,4">
                                    <Path.Data>
                                        <LineGeometry StartPoint="0,0.5" EndPoint="1,0.5"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Gold}" Style="{StaticResource ItemTooltipBottomTextStyle}">
                                    <b:Interaction.Triggers>
                                        <b:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                            <b:Interaction.Behaviors>
                                                <b:ConditionBehavior>
                                                    <b:ConditionalExpression>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                        <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                    </b:ConditionalExpression>
                                                </b:ConditionBehavior>
                                            </b:Interaction.Behaviors>
                                            <b:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource LS_OriginalTradePriceColor}"/>
                                            <b:ChangePropertyAction PropertyName="StrokeThickness" Value="0"/>
                                            <b:ChangePropertyAction TargetName="Strikethrough" PropertyName="Visibility" Value="Visible"/>
                                        </b:PropertyChangedTrigger>
                                    </b:Interaction.Triggers>
                                </TextBlock>
                            </Grid>

                            <!-- Trade price -->
                            <TextBlock ls:TextBlockFormatter.SourceText="{Binding TradePrice}" Margin="14,0,0,0" x:Name="TradePriceText" Visibility="Collapsed" Style="{StaticResource ItemTooltipBottomTextStyle}">
                                <b:Interaction.Triggers>
                                    <b:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                        <b:Interaction.Behaviors>
                                            <b:ConditionBehavior>
                                                <b:ConditionalExpression>
                                                    <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                    <b:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                </b:ConditionalExpression>
                                            </b:ConditionBehavior>
                                        </b:Interaction.Behaviors>
                                        <b:ChangePropertyAction TargetName="TradePriceText" PropertyName="Visibility" Value="Visible"/>
                                    </b:PropertyChangedTrigger>
                                </b:Interaction.Triggers>
                            </TextBlock>

                            <Image Source="{StaticResource IconGold}" Stretch="None" Margin="10,0,0,2"/>
                            <StackPanel.ToolTip>
                                <ls:LSTooltip IsHitTestVisible="False" Content="hcea50cc0gbeebg4aaeg992bgdb79cbfef7e8" Tag="hf9b209b9g3745g41a1g85dfg129065b9b215" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                            </StackPanel.ToolTip>
                        </StackPanel>
                    </Grid>
                </ContentControl>
            </Grid>
        </Grid>

        <DataTemplate.Triggers>
            <Trigger SourceName="DecorationImage" Property="ActualWidth" Value="0">
                <Setter TargetName="ContentHolder" Property="Width" Value="Auto"/>
            </Trigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Common">
                <Setter TargetName="Rarity" Property="Text" Value=""/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.ArmorSection.Details.Count, ElementName=root, Converter={StaticResource GreaterThanConverter},ConverterParameter=0}" Value="True">
                <Setter TargetName="SubTitle" Property="Text" Value="{Binding ArmorSection.Header}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, ElementName=Rarity}" Value="" />
                    <Condition Binding="{Binding Text, ElementName=SubTitle}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SubTitleContainer" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                <Setter TargetName="LifetimeHolder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=1.1}" Value="True">
                <Setter TargetName="LifetimeDurationText" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Path="Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.ArmorSection.Details[0].ShowPlus, ElementName=root}" Value="True">
                <Setter TargetName="ArmorText" Property="Text" Value="{Binding Value, StringFormat='+{0}'}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.Damages.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="DamagesList" Property="Margin" Value="10,10,0,10"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.IsTwoHanded, ElementName=root}" Value="True">
                <Setter TargetName="WeaponHandType" Property="Text" Value="{Binding Source='h36a9679ag7e1dg40bfg9ad2g0adf1703d822',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.VersatileDamages.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="VersatileDamageList" Property="Margin" Value="10,10,0,10"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.VersatileTwohanded, ElementName=root}" Value="False" />
                    <Condition Binding="{Binding DataContext.EquippingCharacter.Name, ElementName=root, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=versatileDamageDisplay}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="versatileDamageDisplay" Property="Opacity" Value="0.9"/>
                    <Setter TargetName="BoostsAndPassivesOffHand" Property="Opacity" Value="0.9"/>
                    <Setter TargetName="WeaponEquipped" Property="Text" Value="{Binding Source='ha1ff7c28g1ddcg41d2g92e4g3b15371c596d',Converter={StaticResource TranslatedStringConverter}, StringFormat='- {0}'}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.VersatileTwohanded, ElementName=root}" Value="True" />
                    <Condition Binding="{Binding DataContext.EquippingCharacter.Name, ElementName=root, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=versatileDamageDisplay}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="damageDisplay" Property="Opacity" Value="0.9"/>
                    <Setter TargetName="BoostsAndPassivesMainHand" Property="Opacity" Value="0.9"/>
                    <Setter TargetName="VersatileWeaponEquipped" Property="Text" Value="{Binding Source='ha1ff7c28g1ddcg41d2g92e4g3b15371c596d',Converter={StaticResource TranslatedStringConverter}, StringFormat='- {0}'}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Descriptions -->
            <DataTrigger Binding="{Binding DataContext.IsMagicScroll, ElementName=root}" Value="True">
                <!-- Magic Scrolls must show only spells' descriptions -->
                <Setter TargetName="technicalDescription" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="StatusDescription" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="description" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Visibility, ElementName=technicalDescription}" Value="Collapsed" />
                    <Condition Binding="{Binding Path=Visibility, ElementName=spellTechnicalDescription}" Value="Collapsed" />
                    <Condition Binding="{Binding Path=Visibility, ElementName=spellExtraDescription}" Value="Collapsed" />
                    <Condition Binding="{Binding Status.Description.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="StatusDescription" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- Boosts and passives -->
            <DataTrigger Binding="{Binding DataContext.Boosts.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassives" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.Passives.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassives" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.Boosts.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding DataContext.Passives.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Boosts" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DataContext.BoostsMainHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesMainHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.PassivesMainHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesMainHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.BoostsMainHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding DataContext.PassivesMainHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsMainHand" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DataContext.BoostsOffHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesOffHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.PassivesOffHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="BoostsAndPassivesOffHand" Property="Visibility" Value="Visible" />
                <Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BoostsOffHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding PassivesOffHand.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsOffHand" Property="Margin" Value="{StaticResource DefaultMarginTop}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

			<DataTrigger Binding="{Binding DataContext.PermanentStatusEffects.Count, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
				<Setter TargetName="BoostsAndPassivesSection" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=Visibility, ElementName=BoostsAndPassivesSection}" Value="Visible">
                <Setter TargetName="BoostsAndPassivesSection" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
            </DataTrigger>

            <!-- Equiping Character -->
            <DataTrigger Binding="{Binding DataContext.EquippingCharacter.Name, ElementName=root, Converter={StaticResource NullToBoolTrueConverter}}" Value="False">
                <Setter TargetName="EquippedByWarning" Property="Visibility" Value="Visible" />
            </DataTrigger>
            
            <!-- Armor AC bonus warning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.ACAbility, ElementName=root}" Value="None" />
                    <Condition Binding="{Binding DataContext.EquipmentSlot, ElementName=root}" Value="Breast" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ACAbilityWarning" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.ACAbilityCap, ElementName=root, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                    <Condition Binding="{Binding DataContext.ACAbility, ElementName=root}" Value="Dexterity" />
                    <Condition Binding="{Binding DataContext.EquipmentSlot, ElementName=root}" Value="Breast" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ACAbilityWarning" Property="Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DataContext.ACAbilityCap, ElementName=root}" Value="0" >
                <Setter TargetName="ACAbilityWarning" Property="Tag" Value="{Binding Source='h24a49208g1912g4270g9d2dgc2986ab10ae0',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <!-- Warnings -->
            <DataTrigger Binding="{Binding EncumbranceStateWarning}" Value="AtCarryLimit">
                <Setter TargetName="weightIcon" Property="Source" Value="{StaticResource IconWeightWarning}"/>
                <Setter TargetName="weightText" Property="Foreground" Value="{StaticResource LS_bar100TxtColor}"/>
            </DataTrigger>

            <!-- Footer -->
            <DataTrigger Binding="{Binding IsEquipment}" Value="False">
                <Setter TargetName="CostSummary" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>



    <Storyboard x:Key="DelayedShowComparisonItem">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EquippedItemPanel" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Compare Tooltip Template (without background images or pin message) -->
    <ControlTemplate x:Key="CompareTooltipTemplate" TargetType="ContentControl">
        <DockPanel x:Name="EnclosingPanel" VerticalAlignment="Top">
            <ContentControl x:Name="EquippedItemPanel" Template="{StaticResource BaseTooltipTemplate}" Content="{Binding Path=(ls:TooltipExtender.Data).EquippedItem,ElementName=EnclosingPanel}" ls:AttachedProperties.InheritedTag="Equipped" VerticalAlignment="Top" DockPanel.Dock ="Right" ls:TooltipExtender.Data ="{Binding Path=(ls:TooltipExtender.Data).EquippedItemData,ElementName=EnclosingPanel}" Margin="0,8,0,0"/>
            <ContentControl x:Name="HoveredItemPanel" Template="{StaticResource BaseTooltipTemplate}" Content="{Binding Path=(ls:TooltipExtender.Data).Item,ElementName=EnclosingPanel}" VerticalAlignment="Top" DockPanel.Dock="Left" ls:TooltipExtender.Data ="{Binding Path=(ls:TooltipExtender.Data).ItemData,ElementName=EnclosingPanel}"/>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=TemplatedParent} , Converter={StaticResource TypeConverter}}" Operator="Equal" RightOperand="ls.LSTooltip"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction Storyboard="{StaticResource DelayedShowComparisonItem}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </DockPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding FinalPlacement,RelativeSource={RelativeSource Mode=Self}}" Value="Left">
                <Setter TargetName="EquippedItemPanel" Property="DockPanel.Dock" Value="Left"/>
                <Setter TargetName="HoveredItemPanel" Property="DockPanel.Dock" Value="Right"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Dice Roll Tooltip -->
    <ControlTemplate x:Key="RollDescriptionTemplate">
        <StackPanel HorizontalAlignment="Left" >
            <StackPanel Orientation="Vertical" Margin="0,6">
                <TextBlock x:Name="AdvantageText" TextWrapping="Wrap" FontSize="{DynamicResource MediumFontSize}"/>
                <TextBlock x:Name="txt" TextWrapping="Wrap" FontSize="{DynamicResource MediumFontSize}" Tag="{Binding DiceTypeSet.Amount}" Foreground="{DynamicResource TooltipColor.Secondary}">
                    <Run x:Name="PrefixText" Text=""/>
                    <Run x:Name="ValueText" Text="{Binding ElementName=txt, Path=Tag}"/><Run x:Name="DieText" Text="{Binding DiceTypeSet.DiceType}"/><Run x:Name="additionalVal" Text="{Binding AdditionalValue, StringFormat='{}{0:+#;-#;+0}'}"/>
                </TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,6">
                <ItemsControl ItemsSource="{Binding Modifiers}" Padding="0" HorizontalAlignment="Left" Margin="0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DiceTypeSet.Amount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" Text="{Binding DiceTypeSet.Str, StringFormat={}+{0}}" FontSize="{DynamicResource MediumFontSize}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Vertical"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                            <Setter Property="Orientation" Value="Horizontal"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding AdditionalValue}" Value="0">
                <Setter TargetName="additionalVal" Property="Text" Value=""/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                <Setter TargetName="AdvantageText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h9ad6cf4dg119cg4c28g8527gc2bec6466e0f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='hfc9b8156g8e4fg4086g9c6cg26dbb03aa466', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{DynamicResource TooltipColor.Bonus}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2 , StringFormat=N1}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h6e3a9885ga3ffg4f82gb9f7gb2833b2a2e96', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h34944186g018cg474dg96d8gd56417c3e086', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h0017825fgda99g495fg938dg196a95011901', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RollAdvantageDisplay">
        <Grid>
            <StackPanel x:Name="advantageList" Orientation="Vertical" Visibility="{Binding Advantages.Count, Converter={StaticResource CountToVisibilityConverter}}">
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <ItemsControl ItemsSource="{Binding Advantages}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="img" Stretch="None" Visibility="Collapsed" VerticalAlignment="Center"/>
                                <TextBlock x:Name="desc" Text="{Binding Description}" FontSize="{DynamicResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" VerticalAlignment="Center" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_advantage.png" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{DynamicResource TooltipColor.Bonus}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_disadvantage.png" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock Text="{Binding Source='hb047e755gd92bg43d8gac73gcf2a011a5ca1', Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource MediumFontSize}" Foreground="{StaticResource TooltipColor.Secondary}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>

            <!--advantage fallBack-->
            <StackPanel>
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <StackPanel Orientation="Horizontal">
                    <Image Stretch="None" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_advantage.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_disadvantage.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Text="{Binding Source='h7c258c4fg5467g48e5ga704g2ccd2e80dfe6', Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource MediumFontSize}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Bonus}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=advantageList,Path=Visibility}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <!--advantage fallBack-->
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="RollDieContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource RollDiceSet}" Content="{Binding}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMRoll}">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" HorizontalAlignment="Left">
                    <Run Text="{Binding Source='hd54ec827g2cd8g480fg9b76g74a62c213271', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run Text="{Binding DifficultyCheck}"/>
            </TextBlock>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding RollDescription}" Style="{StaticResource TooltipSubTitleStyle}"/>

            <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" Margin="{StaticResource DefaultMarginTopBottom}">
                <Grid VerticalAlignment="Center" ClipToBounds="False" >
                    <!-- Dice -->
                    <Grid Width="128" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-20 0 0 0">
                        <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}" 
                                        VerticalAlignment="Center" HorizontalAlignment="Center" Margin="-52,0,0,0"/>
                    </Grid>

                    <StackPanel Margin="100 18 0 0" VerticalAlignment="Center">
                        <!-- Description -->
                        <Control Template="{StaticResource RollDescriptionTemplate}"/>

                        <!-- Details -->
                        <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" FontSize="{DynamicResource MediumFontSize}" Margin="0 0 10 0">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value="{Binding Value, StringFormat={}{0:+#;-#;+0}}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Value}" Value="0">
                                                            <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat={}+{0}}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                            <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Bonus}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2" Foreground="{StaticResource TooltipColor.Secondary}"/>
                                        <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2" Foreground="{StaticResource TooltipColor.Keyword}"/>
                                        <TextBlock x:Name="AdditionalText" ls:TextBlockFormatter.SourceText="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 0 2" Foreground="{StaticResource TooltipColor.Keyword}"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                                            <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Grid>
            </ContentControl>

            <TextBlock TextWrapping="Wrap" Foreground="{StaticResource TooltipColor.Primary}" Margin="{StaticResource DefaultMarginTop}" FontSize="{DynamicResource MediumFontSize}">
                <Run Text="{Binding Source='h87e79fa7gcd5eg41ceg8f66g245868d1fedf', Converter={StaticResource TranslatedStringConverter}}"/>
                <Run Text="{Binding RollDescription}"/>
            </TextBlock>

            <Control Template="{StaticResource RollAdvantageDisplay}" />
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="RollTooltipTemplate" TargetType="Control">
        <ContentControl Template="{StaticResource BaseTooltipTemplate}" Content="{Binding .}"/>
    </ControlTemplate>

    <Style x:Key="DamageIconStyle" TargetType="Image">
        <Setter Property="Source" Value="{x:Null}"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="MaxHeight" Value="38"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_healing.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_healing.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_slashing.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_piercing.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_blunt.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_acid.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_thunder.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_necrotic.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_fire.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_lightning.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_cold.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_psychic.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_poison.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_radiant.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_force.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DamageParamRun" TargetType="ls:LSRun">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <!-- Spell (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Spell">
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Bonus}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Spell Tooltip -->
    <DataTemplate x:Key="SpellsTooltip">
        <DataTemplate.Resources>
            <Style TargetType="TextBlock" >
                <Setter Property="Foreground" Value="{StaticResource TooltipColor.Primary}" />
            </Style>
        </DataTemplate.Resources>
        <Grid x:Name="root" DataContext="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}" ls:TooltipExtender.Owner="{Binding TemplatedParent.TemplatedParent.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <Image x:Name="DecorationImage" Style="{StaticResource TooltipMainIconStyle}" Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter}, ConverterParameter='Assets/Tooltips/Icons/'}"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" MaxWidth="{StaticResource MaxTooltipContentWidth}" Width="{StaticResource MaxTooltipContentWidth}">
                    <!-- HEADER -->
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}" Width="{StaticResource MaxWidthOnCollisionWithImage}"/>
                    <ContentPresenter ContentTemplate="{StaticResource SpellSchoolTitle}" Content="{Binding .}" Margin="0,-5,0,16"/>

                    <!-- DAMAGE -->
                    <ContentPresenter x:Name="SpellDamage" ContentTemplate="{StaticResource SpellDamageSection}" Content="{Binding Path=DataContext , ElementName=root}" Visibility="Collapsed"/>

                    <!-- DESCRIPTIONS -->
                    <!-- Description -->
                    <TextBlock Style="{StaticResource TooltipSectionAdjustableTextStyle}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="{StaticResource DefaultMarginBottom}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description }" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                    </TextBlock>
                    <!-- Extra description -->
                    <TextBlock x:Name="SpellExtraDescription" Style="{StaticResource TooltipSectionAdjustableTextStyle}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Visibility="{Binding ExtraDescription.Text, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}">
                            <b:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </b:Interaction.Behaviors>
                    </TextBlock>

                    <!-- Only enable if visible so as to not eat input used by other systems e.g. World Tooltips -->
                    <ls:LSInputBinding x:Name="expanderInput" BoundEvent="ExpandTooltip" PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <ls:LSInputBinding.Style>
                            <Style TargetType="ls:LSInputBinding">
                                <Setter Property="IsEnabled" Value ="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding ="{Binding ElementName=expandableSection, Path=Visibility}" Value="Visible">
                                        <Setter Property="IsEnabled" Value ="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ls:LSInputBinding.Style>
                    </ls:LSInputBinding>

                    <!-- STATUS/CONDITIONS -->
                    <ContentPresenter x:Name="SpellStatus" ContentTemplate="{StaticResource StatusList}" Content="{Binding ResultSections}"/>

                    <!-- METAMAGIC -->
                    <ContentPresenter ContentTemplate="{StaticResource MetamagicSection}" Content="{Binding .}"/>

                    <!-- WARNINGS -->
                    <ItemsControl x:Name="Warnings" ItemsSource="{Binding UnavailableReasons}" Visibility="{Binding UnavailableReasons.Count, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding Line, Converter={StaticResource StringToVisibilityConverter}}" Margin="0,-4,0,0">
                                    <Image Source="{StaticResource IconWarning}" Stretch="None" Margin="-8 -4 4 0" VerticalAlignment="Top"/>
                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Line}" Style="{StaticResource TooltipUnavailableReasonStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <StackPanel Width="{StaticResource MaxTooltipContentWidth}">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Override}" Value="None">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h4693f78cge101g4dbcg8d2fg314806236010', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipOverrideTextStyle}"/>
                        <TextBlock Margin="{StaticResource DefaultMarginBottom}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipOverrideTextStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Override}" Value="Worse">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfa9b9be2gb7eeg4d98g8869gc4126276e512', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Equal">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha231a88fg57f3g4bf2g9bd5g21c728ca318f', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Better">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5f14e2f1g251cg4d45g972dg35f77e231d81', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Different">
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf70e793egfa56g4da3ga018ga4c6a012733f', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                    <!-- LORE DESCRIPTION -->
                    <ContentControl Template="{StaticResource TooltipStripLoreTextTemplate}" Visibility="{Binding LoreDescription, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}">
                        <TextBlock Style="{StaticResource TooltipSpecialDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding LoreDescription.Str}" ls:AttachedProperties.InheritedTag="{Binding ElementName=DecorationImage}" Margin="0,8,0,16"/>
                    </ContentControl>

                    <!-- PROPERTIES -->
                    <ItemsControl ItemsSource="{Binding Properties}" ItemTemplate="{StaticResource PropertyTemplate}" Visibility="{Binding Properties.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource ItemsControlHorizontalWrapPanel}" Margin="{StaticResource DefaultMarginBottom}"/>

                </StackPanel>

                <!-- FOOTER -->
                <ContentControl Grid.Row="1" VerticalAlignment="Bottom" Template="{StaticResource TooltipStripBottomTemplate}">
                    <StackPanel>
                        <WrapPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <!-- Cost -->
                            <ItemsControl AlternationCount="{Binding CostSummary.Count}" ItemsSource="{Binding CostSummary}" HorizontalAlignment="Center" Visibility="{Binding CostSummary.Count, Converter={StaticResource CountToVisibilityConverter}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Margin="0,0,30,0">
                                            <ContentPresenter ContentTemplate="{StaticResource FooterFloatingWarningCost}" Content="{Binding .}"/>

                                            <!-- When in the cost, the max value represents the cost-->
                                            <TextBlock Margin="0" VerticalAlignment="Center" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource SectionResourceNameStyle}">
                                                        <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding MaxValue, StringFormat='{}{0} '}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding TypeId}" Value="Movement">
                                                                <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short', StringFormat='{}{0} '}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource SectionResourceNameStyle}">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <!-- gray out if use cost resources are not used due to ritual casting enabled -->
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                                                                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Tertiary}"/>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!-- Ritual -->
                            <StackPanel x:Name="RitualIndicator" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding RitualCost, Converter={StaticResource NullToCollapsedConverter}}">
                                <Image Source="{StaticResource ResourceDivider}" Stretch="None" Margin="40,0,40,0"/>
                                <Image Stretch="None" Margin="0,-2,0,0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="{StaticResource IconRitualPoint}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource IconRitualPointDisabled}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DataContext.RitualCost.Value, Converter={StaticResource LessThanConverter}, ConverterParameter=1, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource IconRitualPointSpent}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </WrapPanel>
                    </StackPanel>
                </ContentControl>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DataContext.Damages.Count, ElementName=root , Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellDamage" Property="Margin" Value="{StaticResource DefaultMarginBottom}"/>
                <Setter TargetName="SpellDamage" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ResultSections.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter TargetName="SpellStatus" Property="Margin" Value="0,-12,0,16"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Visibility, ElementName=SpellExtraDescription}" Value="Visible">
                <Setter TargetName="SpellExtraDescription" Property="Margin" Value="0,0,0,4"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Visibility, ElementName=Warnings}" Value="Visible">
                <Setter TargetName="Warnings" Property="Margin" Value="0,8,0,16"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterAction}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMCharacterCreationSpell}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMFeatureSpell}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMContextTransStringSpellParam}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <!-- Boost -->
    <DataTemplate DataType="{x:Type ls:VMBoost}">
        <ContentPresenter x:Name="BoostTooltipContent" Content="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=Self}}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                <Setter TargetName="BoostTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="BoostTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ls:VMTooltipBoost}">
        <ContentPresenter x:Name="BoostTooltipContent" Content="{Binding .}" ContentTemplate="{StaticResource SpellsTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding (ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}}" Value="{x:Null}">
                <Setter TargetName="BoostTooltipContent" Property="Content" Value="{Binding .}"/>
                <Setter TargetName="BoostTooltipContent" Property="ContentTemplate" Value="{StaticResource BoostSimpleTooltipContent}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipSpell}">
        <ContentPresenter Content="{Binding DataContext}" ContentTemplate="{StaticResource SpellsTooltip}"/>
    </DataTemplate>

    <!-- Dialogue Answer Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMDialogueAnswerTag}">
        <StackPanel Orientation="Vertical">
            <TextBlock Style="{StaticResource TooltipTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Name}"/>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Category}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="{StaticResource DefaultMarginTop}" ls:TextBlockFormatter.SourceText="{Binding Tooltip}"/>

            <StackPanel Orientation="Vertical" Visibility="{Binding IsRoll, Converter={StaticResource BoolToVisibleConverter}}">
                <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" >
                    <Grid VerticalAlignment="Center" ClipToBounds="False"  Margin="-20,0,-20,0">
                        <!-- Dice -->
                        <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0 0 0 0" />
                        <!-- Description -->
                        <Control Template="{StaticResource RollDescriptionTemplate}" Margin="140 0 0 0" VerticalAlignment="Center"/>
                    </Grid>
                </ContentControl>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h57a05f43g5361g4b03g8883g56d4683b7100', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}"/>
                <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
                            </DataTemplate.Resources>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" FontSize="{DynamicResource MediumFontSize}">
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text" Value="{Binding Value, StringFormat='{}{0:+#;-#;+0} '}"/>
                                                <Style.Triggers>
                                                     <DataTrigger Binding="{Binding Value}" Value="0">
                                                        <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat='{}+{0} '}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Alert}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource TooltipColor.Bonus}"/>
                                                    </DataTrigger>                                                
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                </TextBlock>

                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 0" VerticalAlignment="Center"/>
                                <TextBlock x:Name="AdditionalText" ls:TextBlockFormatter.SourceText="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                                    <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Control Template="{StaticResource RollAdvantageDisplay}" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- Input Event Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMInputEvent}">
        <TextBlock x:Name="content" VerticalAlignment="Top" Foreground="{DynamicResource TooltipColor.Primary}">
            <Run Text="{Binding Caption}"/>
            <Run Text=" ["/>
            <Run Text="{Binding Shortcut}" Foreground="{DynamicResource TooltipColor.Secondary}"/>
            <Run Text="]"/>
        </TextBlock>
    </DataTemplate>
    


    <!-- Action Resource Tooltip -->
    <DataTemplate x:Key="VMActionResourceTooltip">
        <StackPanel x:Name="root"  Margin="0 5" DataContext="{Binding (ls:TooltipExtender.Data) , RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ls:LSActionPointResources x:Name="ResourcePoints" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" MaxActionPoints="1" AvailableActionPoints="1" HighlightedActionPoints="0" MaxGroupActionPoints="4" MaxActionPointGroups="0" ActionPointSize="44" SmallActionPointSize="24" ActionPointGroupSize="64" Style="{DynamicResource ActionResourcesTemplateSelector}" Margin="0,0,5,0"/>
                <TextBlock VerticalAlignment="Center" Style="{StaticResource TooltipTitleNoCollapseStyle}" Grid.Column="1">
                    <Run x:Name="nameRun" Text="{Binding Name}"/>
                    <Run x:Name="level" Text="{Binding Source='hb7c9dbb8gd727g421egaf0ag910c2bec58e1',Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run x:Name="levelNr" Text="{Binding ActionResource.Level}"/>
                </TextBlock>
            </Grid>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Subtitle}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}" Margin="{StaticResource DefaultMarginBottom}"/>
            <StackPanel x:Name="RechargeInfo" Orientation="Horizontal">
                <Image Source="{StaticResource IconCooldown}" Stretch="None" Margin="0 0 11 0"/>
                <TextBlock Style="{StaticResource TooltipBodyStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h835d57a1g1280g47efg86deg12e69ba1ced4',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Margin="0 0 0 0"/>
                <TextBlock Style="{StaticResource TooltipBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" ls:TextBlockFormatter.SourceText="{Binding ReplenishType}" VerticalAlignment="Center" Margin="0 0 0 0"/>
            </StackPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DataContext.ActionResource.ReplenishType, ElementName=root}" Value="Never">
                <Setter TargetName="RechargeInfo" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.ActionResource.Level, ElementName=root}" Value="0">
                <Setter TargetName="level" Property="Text" Value=""/>
                <Setter TargetName="levelNr" Property="Text" Value=""/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <!-- Action Resource Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMActionResource}">
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMGroupResource}">
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    

    <DataTemplate DataType="{x:Type ls:VMActionResourceCostPreview}">
        <ContentPresenter x:Name="root" Content="{Binding DataContext}" ContentTemplate="{StaticResource VMActionResourceTooltip}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(ls:TooltipExtender.Data),RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource VMStatTooltip}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Resistance Tooltips -->
    <ControlTemplate x:Key="ResistanceTypesTemplate">
        <StackPanel>
            <StackPanel.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipDescriptionStyle}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="Image">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Stretch" Value="None"/>
                </Style>
                <Style TargetType="ls:LSSpan" BasedOn="{StaticResource LSSpanStyle}">
                    <Style.Triggers>
                        <Trigger Property="TagType" Value="hl">
                            <Setter Property="Foreground" Value="{StaticResource TooltipColor.Secondary}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

            <StackPanel x:Name="ResistanceType" Orientation="Horizontal" Visibility="Collapsed">
                <Image x:Name="Icon"  Source="{StaticResource IconResistanceVulnerable}"/>
                <TextBlock x:Name="Txt" ls:TextBlockFormatter.SourceText="{Binding Source='h0c3f8279g8a3cg4482g9520g3d8dea6b638a',Converter={StaticResource TranslatedStringConverter}}"/>
            </StackPanel>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}}" Value="Vulnerable">
                <Setter TargetName="ResistanceType" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}}" Value="Resistant">
                <Setter TargetName="ResistanceType" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Source" Value="{StaticResource IconResistanceResistant}"/>
                <Setter TargetName="Txt" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4aef1a30g1e36g45d0gb2c8g418b5910ecae',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}}" Value="Immune">
                <Setter TargetName="ResistanceType" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Source" Value="{StaticResource IconResistanceImmune}"/>
                <Setter TargetName="Txt" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hccec68aeg14fbg43f6ga35cg40da5c109da7',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate DataType="{x:Type ls:VMResistance}">
        <StackPanel>
            <TextBlock x:Name="Title" Style="{StaticResource TooltipTitleNoCollapseStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h3d8c1481ga7e5g47c0gbcbeg6432ea83a828',Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Source='h3ccd7825gf6fdg4461g8e69g41e641dbeb96',Converter={StaticResource TranslatedStringConverter}}"/>
            <Control Template="{StaticResource ResistanceTypesTemplate}" Tag="{Binding Full}"/>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h59125b90g01acg47d1g9b6fg239f85116364',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3550bb64g7af7g4e91gb461g1cae98ec840c',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h58c367f5g2c2cg4045ga1b9g7b2e1a912d17',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbecb4ca9g48bag40fag819egafd249d8b96b',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h033b1adbgc977g4d9fg8168g5fadcd6fd9f5',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hfe5d3972g45f0g4e17gacd5g8054c0d40574',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hdd679dc1gf504g462eg85f5gebd04359aff8',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4eb283f1gbfddg4fdcgb417g84f28d5ae29b',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h10fd9484g2096g46e6g9ec9g751d5fed0e45',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h0d110711g9de8g4803ga322g2b76ae2f0637',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hbb704683g7464g4c39g80d3g2b9487108a7c',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter TargetName="Title" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1e927ef5g95e7g4c38g8534g39dcb3d42691',Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTag}">
        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0,10,0,10" Text="{Binding Tooltip}"/>
    </DataTemplate>

    <!-- Resistance Tooltip Nonmagical -->
    <DataTemplate x:Key="ResistanceTooltipNonmagicalTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h8a6537cdg4967g472bg9bbfg64a000c6359b',Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Source='h8d033c84g7d23g479ag801cg89e8eba46ff4',Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}"/>
            <Control Template="{StaticResource ResistanceTypesTemplate}" Tag="{Binding .}"/>
        </StackPanel>
    </DataTemplate>

    <!-- Resistance Tooltip Magical -->
    <DataTemplate x:Key="ResistanceTooltipMagicalTemplate">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='ha413cc41g130eg473eg88acg712effb701be',Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Source='h3ac6b87ag09c5g4c49gb469gacceb1f1f6d9',Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}"/>
            <Control Template="{StaticResource ResistanceTypesTemplate}" Tag="{Binding .}"/>
        </StackPanel>
    </DataTemplate>

    <!-- Description tooltip -->
    <DataTemplate x:Key="DescriptionTooltipContent">
        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource TooltipBodyStyle}" Width="{StaticResource MaxTooltipContentWidth}" Margin="0,11,0,0"/>
    </DataTemplate>

    <!-- Character Tooltip-->
    <DataTemplate x:Key="CharacterTooltipTemplate">
        <StackPanel x:Name="root" ls:TooltipExtender.Owner="{Binding }" MinWidth="{StaticResource MinNarrowTooltipContentWidth}" MaxWidth="{StaticResource MaxNarrowTooltipContentWidth}">
            <!-- Name/Class/Level -->
            <TextBlock Style="{StaticResource TooltipTitleStyle}" ls:TextBlockFormatter.SourceText="{Binding Name}"/>
            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipSubTitleStyle}">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Stats.ClassList.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                                    <Condition Binding="{Binding Stats.Level.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <Binding Path="DataContext.Stats.ClassList" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource ListConcatenationConverter}" ConverterParameter=","/>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Stats.Level.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h5df00b79ga6acg4d9fgb8dag23340151fba7"/>
                                            <Binding Path="DataContext.Stats.Level.Value" RelativeSource="{RelativeSource Mode=Self}"/>
                                            <Binding Path="DataContext.Stats.ClassList" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource ListConcatenationConverter}" ConverterParameter=","/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!-- Remaining time for summons -->
            <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripTemplate}" Margin="-70,0">
                <StackPanel x:Name="Duration" Orientation="Horizontal" Margin="{StaticResource DefaultMarginTopBottom}">
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Center" Margin="108,0,28,0" />
                    <TextBlock x:Name="DurationText" FontSize="{DynamicResource MediumFontSize}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Special}">
                        <ls:TextBlockFormatter.SourceText>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                <Binding Path="DataContext.Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </StackPanel>
            </ContentControl>

            <!-- Stats -->
            <StackPanel Margin="-16,16,0,16">

                <StackPanel Orientation="Horizontal" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip Content="{Binding Path=DataContext.Stats.RaceDescription, ElementName=root}" ContentTemplate="{StaticResource DescriptionTooltipContent}" IsHitTestVisible="False"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconRace}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Stats.Race}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Visibility="{Binding IsValid, Converter={StaticResource BoolToVisibleConverter}}" DataContext="{Binding Stats.Health}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.Health, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconHealth}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Run Text="{Binding Value}"/><Run 
                        Text="{Binding Max, StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DataContext="{Binding Stats.ArmorClass}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip  IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.ArmorClass, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconArmorClassCharacter}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Value}"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DataContext="{Binding Stats.MovementResource}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True" Margin="0,-16,0,0">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip  IsHitTestVisible="False" Content="{Binding Path=DataContext.Stats.MovementResource, ElementName=root}" ls:TooltipExtender.Owner="{Binding Path=DataContext,ElementName=root}"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconSpeed}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Run>
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance RoundUp N1'}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='1.5'}" Value="True">
                                            <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance'}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run><Run 
                        Text="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short', StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel>

            <!-- Active Conditions -->
            <ContentPresenter ContentTemplate="{StaticResource ActiveConditionsSection}" Content="{Binding StatusEffects}" Margin="-16,0,0,0"/>

            <!-- Action resources -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="{StaticResource DefaultMarginTop}">
                <StackPanel.Resources>
                    <DataTemplate x:Key="resourceTemplate">
                        <ContentControl ToolTip="{StaticResource ManagedTooltip}">
                            <Grid Margin="5,0,0,0" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                                <Rectangle Style="{StaticResource TooltipBoostIconBorderDashedStyle}" Width="49" Height="49" StrokeThickness="2" StrokeDashArray="4 0"/>
                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Style="{StaticResource SectionImageStyle}" Width="49" Height="49" />
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Level, Converter={StaticResource DecimalToRomanConverter}}" FontSize="{StaticResource MiniFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,50"/>
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Value}" FontSize="{StaticResource MiniFontSize}" Foreground="{StaticResource TooltipColor.Secondary}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,50,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=2}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </ContentControl>
                    </DataTemplate>
                </StackPanel.Resources>

                <ItemsControl ItemsSource="{Binding Stats.ActionResources}" ItemTemplate="{DynamicResource resourceTemplate}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding Stats.SpellSlots}" ItemTemplate="{DynamicResource resourceTemplate}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MaxValue}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>

            <!-- Footer -->
            <ContentControl x:Name="Footer" Template="{StaticResource TooltipStripBottomTemplate}" Visibility="Collapsed">
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal" HorizontalAlignment="Right" Margin="-16,-8">
                    <StackPanel Orientation="Horizontal" Background="Transparent">
                        <StackPanel.ToolTip>
                            <ls:LSTooltip>
                                <TextBlock Style="{StaticResource TooltipStringBodyStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h6dd6596fg1433g4b04g9d74g5dc6fb0048ea',Converter={StaticResource TranslatedStringConverter}}" MaxWidth="{DynamicResource MaxTooltipContentWidth}"/>
                            </ls:LSTooltip>
                        </StackPanel.ToolTip>
                        <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Run Text="{Binding Inventory.Weight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight'}"/><Run 
                            Text="{Binding EncumbranceStats.WeightMaximum, Converter={StaticResource UnitConverter}, ConverterParameter='Weight', StringFormat='/{0}'}"/>
                        </TextBlock>
                        <Image Source="{StaticResource IconWeight}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center" Margin="-10,0,0,0"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"  Background="Transparent">
                        <StackPanel.ToolTip>
                            <ls:LSTooltip>
                                <TextBlock Style="{StaticResource TooltipStringBodyStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='he70ba432g24d1g4fbdg8ca0g1f16ecdf713c',Converter={StaticResource TranslatedStringConverter}}" MaxWidth="{DynamicResource MaxTooltipContentWidth}"/>
                            </ls:LSTooltip>
                        </StackPanel.ToolTip>

                        <TextBlock Style="{StaticResource TooltipStringBodyStyle}" Foreground="{StaticResource TooltipColor.Secondary}" HorizontalAlignment="Center" VerticalAlignment="Center" ls:TextBlockFormatter.SourceText="{Binding Inventory.Gold, Mode=OneWay}"/>
                        <Image Source="{StaticResource IconGold}" Stretch="None" Width="64" Height="64" VerticalAlignment="Center" Margin="-10,0,0,0"/>
                    </StackPanel>
                </StackPanel>
            </ContentControl>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                <Setter TargetName="durationDis" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=1.1}" Value="True">
                <Setter TargetName="DurationText" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Path="Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding CharacterType}" Value="Avatar">
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterType}" Value="Companion">
                <Setter TargetName="Footer" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Surface tooltip -->
    <DataTemplate x:Key="SurfaceTooltipContentTemplate">
        <StackPanel>
            <TextBlock x:Name="HeaderTxt"  Text="{Binding Header}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock x:Name="SubTitleTxt" ls:TextBlockFormatter.SourceText="{Binding Source='h12bbc6ddg3c77g4b0dg91d5g974527cce656', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" />

            <ContentControl x:Name="DurationHolder" Template="{StaticResource TooltipStripTemplate}" Margin="0 10">
                <StackPanel Orientation="Horizontal" Margin="0 11">
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/btn_endTurn_ico_TB_h.png" Stretch="None" VerticalAlignment="Center" Margin="28 0 20 0" />
                    <TextBlock x:Name="DurationText" FontSize="{DynamicResource MediumFontSize}" VerticalAlignment="Center" Foreground="{StaticResource TooltipColor.Title}">
                        <ls:TextBlockFormatter.SourceText>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                <Binding Path="DataContext.Duration" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource UnitConverter}" ConverterParameter='Distance RoundUp'/>
                            </MultiBinding>
                        </ls:TextBlockFormatter.SourceText>
                    </TextBlock>
                </StackPanel>
            </ContentControl>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}" Width="{StaticResource SurfaceTooltipTextWidth}" Style="{StaticResource TooltipDescriptionStyle}"/>

            <ItemsControl ItemsSource="{Binding InflictStatuses}" VerticalContentAlignment="Stretch" ItemTemplate="{StaticResource StatusListElement}" Margin="-28,0,0,0"/>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SurfaceLayer}" Value="Cloud">
                <Setter TargetName="SubTitleTxt" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h037b15bagf64bg47dbg90e7g798121f89c55', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                <Setter TargetName="DurationHolder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="DurationText" Property="ls:TextBlockFormatter.SourceText">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h134a812fgc09eg43d7gbaadg9cb153532707"/>
                            <Binding Path="DataContext.Duration" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource UnitConverter}" ConverterParameter='Distance RoundUp'/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="CombatLog.Tooltip.EntryIconTemplate" TargetType="ContentControl">
        <Border>
            <Image x:Name="icon" HorizontalAlignment="Left" Stretch="None">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="Dice">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_dice.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="ArmorClass">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC.png" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Border>
    </ControlTemplate>


    <Style x:Key="CombatLog.Tooltip.Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="LineHeight" Value="62" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="Foreground" Value="{StaticResource LS_SecondaryColor}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <DataTemplate x:Key="CombatLog.Tooltip.Entry" DataType="{x:Type ls:CombatLogTooltipEntry}">
        <DockPanel>
            <ContentControl x:Name="iconContainer" Template="{StaticResource CombatLog.Tooltip.EntryIconTemplate}" DockPanel.Dock="Left" />

            <TextBlock Style="{StaticResource CombatLog.Tooltip.Text}" HorizontalAlignment="Stretch">
                <b:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding CtxTransText}" ParamRunStyle="{DynamicResource CombatLog.Tooltip.ParamRun}" />
                </b:Interaction.Behaviors>
            </TextBlock>
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="CombatLog.Tooltip" >
        <ItemsControl ItemsSource="{Binding TooltipEntries}" ItemTemplate="{StaticResource CombatLog.Tooltip.Entry}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>



    <DataTemplate  x:Key="CombatLog.RollsTooltip">
        <ItemsControl ItemsSource="{Binding Rolls}" AlternationCount="{Binding Rolls.Count}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Foreground="{StaticResource TooltipColor.Primary}">
                        <Run Text="{Binding DiceTypeSet.Amount}"/><Run
                            Text="{Binding DiceTypeSet.DiceType}"/><Run 
                            Text="{Binding Source='hb897c56egaa6fg460bg8676g8ebfa0340954',Converter={StaticResource TranslatedStringConverter}}"/><Run
                            Text="{Binding RolledNumber}" Foreground="{StaticResource TooltipColor.Secondary}"/>
                    </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!--Don't use basedon Styles in CtxTransStringRunGeneratorBehavior since it doesn't get copied for lsspans-->
    <Style x:Key="CombatLog.Entry.ParamRun" TargetType="ls:LSRun">
        <!--This provides the owner for the combatlog-->
        <Setter Property="ls:TooltipExtender.PlayerId" Value="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="ls:TooltipExtender.Owner" Value="{Binding Path=DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" />
        <Setter Property="ToolTipService.IsEnabled" Value="{Binding HasTooltip}"/>
        <Style.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding HasTooltip}" Value="True" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" >
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext, RelativeSource={RelativeSource Mode=Self}}" ls:TooltipExtender.Owner="{Binding Path=Inline.(ls:TooltipExtender.Owner), RelativeSource={RelativeSource Mode=Self}}" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" Placement="Top" VerticalOffset="-5" HorizontalOffset="-14" IsHitTestVisible="False" />
                    </Setter.Value>
                </Setter>

            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding HasTooltip}" Value="True" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="{StaticResource ManagedTooltip}"/>

            </MultiDataTrigger>

            <DataTrigger Binding="{Binding TooltipEntries.Count,Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip" >
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext,RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{DynamicResource CombatLog.Tooltip}" IsHitTestVisible="False" Placement="Top" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" CanBePinned="False">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Rolls.Count,Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip"  >
                    <!---->
                    <Setter.Value>
                        <ls:LSTooltip Content="{Binding Path=Inline.DataContext,RelativeSource={RelativeSource Mode=Self}}" ContentTemplate="{StaticResource CombatLog.RollsTooltip}" IsHitTestVisible="False" Placement="Top" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}" CanBePinned="False">
                        </ls:LSTooltip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!-- Enemy character (MISSING COLOR CODE) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Character" />
                    <Condition Binding="{Binding RelationType}" Value="Enemy" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="Red" />
            </MultiDataTrigger>
            <!-- Ally character (MISSING COLOR CODE) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Character" />
                    <Condition Binding="{Binding RelationType}" Value="Ally" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="MediumAquamarine" />
            </MultiDataTrigger>
            <!-- Damage type: None -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="None" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#aaaaaa" />
            </MultiDataTrigger>
            <!-- Damage type: Slashing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Slashing" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#aaaaaa" />
            </MultiDataTrigger>
            <!-- Damage type: Piercing -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Piercing" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#aaaaaa" />
            </MultiDataTrigger>
            <!-- Damage type: Bludgeoning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Bludgeoning" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#aaaaaa" />
            </MultiDataTrigger>
            <!-- Damage type: Force -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Force" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#dc1c24" />
            </MultiDataTrigger>
            <!-- Damage type: Psychic -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Psychic" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#efacdf" />
            </MultiDataTrigger>
            <!-- Damage type: Thunder -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Thunder" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#7e46ae" />
            </MultiDataTrigger>
            <!-- Damage type: Lightning -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Lightning" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#877eff" />
            </MultiDataTrigger>
            <!-- Damage type: Cold -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Cold" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#4197e2" />
            </MultiDataTrigger>
            <!-- Damage type: Necrotic -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Necrotic" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#a5f280" />
            </MultiDataTrigger>
            <!-- Damage type: Poison -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Poison" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#c8f000" />
            </MultiDataTrigger>
            <!-- Damage type: Acid -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Acid" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#f7ff09" />
            </MultiDataTrigger>
            <!-- Damage type: Radiant -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Radiant" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#ffc000" />
            </MultiDataTrigger>
            <!-- Damage type: Fire -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Type}" Value="Damage" />
                    <Condition Binding="{Binding DamageType}" Value="Fire" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#ff6600" />
            </MultiDataTrigger>
            <!-- Spell (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Spell">
                <Setter Property="Foreground" Value="Green" />
            </DataTrigger>
            <!-- Experience (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Experience">
                <Setter Property="Foreground" Value="{DynamicResource LS_ExperienceTextColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="ExperienceOverflow">
                <Setter Property="Foreground" Value="{DynamicResource LS_ExperienceOverflowTextColor}" />
            </DataTrigger>
            <!-- Status (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Status">
                <Setter Property="Foreground" Value="GreenYellow" />
            </DataTrigger>
            <!-- Surface (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Surface">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Template="{StaticResource BaseSurfaceTooltipTemplate}" ContentTemplate="{StaticResource SurfaceTooltipContentTemplate}" PlayerId="{Binding Path=Inline.Parent.(ls:UIWidget.PlayerId), RelativeSource={RelativeSource Mode=Self}}"  Content="{Binding Path=Inline.DataContext.SurfaceInformation, RelativeSource={RelativeSource Mode=Self}}" Placement="Top" VerticalOffset="-6" HorizontalOffset="-14"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TextBlock}}}" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count}" Value="0" />
                    <Condition Binding="{Binding ManagedTooltip}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="TextDecorations" Value="None" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.Entry.Text" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}" />
        <Setter Property="LineHeight" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="Foreground" Value="{DynamicResource CombatLog.DefaultTextColor}" />
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxWidth" Value="920"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipEntries.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="TextDecorations" Value="Underline" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.Entry.TextContainer" TargetType="ContentControl">
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipInitialShowDelay}" />
        <Setter Property="ToolTipService.Placement" Value="Top" />
        <Setter Property="ToolTipService.VerticalOffset" Value="-5" />
        <Setter Property="ToolTipService.HorizontalOffset" Value="-14" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding TooltipEntries.Count}" Value="0">
                <Setter Property="ToolTipService.IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TargetNotification.Entry.ParamRun" TargetType="ls:LSRun" BasedOn="{StaticResource CombatLog.Entry.ParamRun}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="Spell">
                <Setter Property="Foreground" Value="Gold" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CombatLog.GeneratedRunWithTooltip" TargetType="ls:LSRun">
        <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipInitialShowDelay}" />
        <Setter Property="ToolTipService.PlacementTarget" Value="{Binding Path=Parent, RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="CombatLog.Tooltip.ParamRun" TargetType="ls:LSRun" BasedOn="{StaticResource CombatLog.Entry.ParamRun}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="DiceDescription">
                <Setter Property="Foreground" Value="#999" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--VMContextTransStringDamageParam-->
    <DataTemplate DataType="{x:Type ls:VMContextTransStringDamageParam}">
        <StackPanel MaxWidth="{StaticResource MaxCombatEntryTooltipWidth}">
            <ItemsControl ItemsSource="{Binding TooltipEntries}" ItemTemplate="{DynamicResource CombatLog.Tooltip.Entry}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <!--#endregion-->
</ResourceDictionary>
