<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Library/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- The default "Show Delay" (milliseconds) for Tooltips -->
    <System:Int32 x:Key="ToolTipInitialShowDelay">0</System:Int32>
    <!-- The show delay for world surface tooltips -->
    <System:Int32 x:Key="SurfaceToolTipInitialShowDelay">1000</System:Int32>
    <System:Double x:Key="SurfaceTooltipTextWidth">472</System:Double>

    <System:Int16 x:Key="ExpandedSectionCount">1</System:Int16>

    <System:Double x:Key="MaxTooltipContentWidth">682</System:Double>
    <System:Double x:Key="MaxWideTooltipContentWidth">860</System:Double>
    <System:Double x:Key="MaxCompareTooltipContentWidth">1700</System:Double>
    <System:Double x:Key="TooltipWidth">640</System:Double>
    <System:Double x:Key="TooltipStripWidth">620</System:Double>
    <System:Double x:Key="TooltipNarrowWidth">268</System:Double>

    <!-- Tooltip Icons -->
    <ImageSource x:Key="IconActionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_d.png</ImageSource>
    <ImageSource x:Key="IconActionPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_used.png</ImageSource>
    <ImageSource x:Key="IconActionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ap_missing.png</ImageSource>

    <ImageSource x:Key="IconBonusActionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/bap_d.png</ImageSource>
    <ImageSource x:Key="IconBonusActionPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/bap_used.png</ImageSource>
    <ImageSource x:Key="IconBonusActionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/bap_missing.png</ImageSource>

    <ImageSource x:Key="IconReactionPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/rp_d.png</ImageSource>
    <ImageSource x:Key="IconReactionPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/rp_missing.png</ImageSource>

    <ImageSource x:Key="IconSpellSlot" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot.png</ImageSource>
    <ImageSource x:Key="IconSpellSlotUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_spent.png</ImageSource>
    <ImageSource x:Key="IconSpellSlotUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_missing.png</ImageSource>

    <ImageSource x:Key="IconWarlockSpellSlot" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock.png</ImageSource>
    <ImageSource x:Key="IconWarlockSpellSlotUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_spent.png</ImageSource>
    <ImageSource x:Key="IconWarlockSpellSlotUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_missing.png</ImageSource>

    <ImageSource x:Key="SorceryPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_d.png</ImageSource>
    <ImageSource x:Key="SorceryPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_spent.png</ImageSource>
    <ImageSource x:Key="SorceryPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_missing.png</ImageSource>

    <!-- MOD START - Custom action resources -->
	<ImageSource x:Key="SneakAttack" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_d.png</ImageSource>
    <ImageSource x:Key="SneakAttackDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_spent.png</ImageSource>
    <ImageSource x:Key="SneakAttackDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_spent.png</ImageSource>
	
	<ImageSource x:Key="PsiPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_d.png</ImageSource>
    <ImageSource x:Key="PsiPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_spent.png</ImageSource>
    <ImageSource x:Key="PsiPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_missing.png</ImageSource>

    <ImageSource x:Key="PsiPointMastery" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_d.png</ImageSource>
    <ImageSource x:Key="PsiPointMasteryUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_spent.png</ImageSource>
    <ImageSource x:Key="PsiPointMasteryUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_missing.png</ImageSource>

    <ImageSource x:Key="HitDice" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_d.png</ImageSource>
    <ImageSource x:Key="HitDiceUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_spent.png</ImageSource>
    <ImageSource x:Key="HitDiceUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_missing.png</ImageSource>

    <ImageSource x:Key="RampageDie" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_d.png</ImageSource>
    <ImageSource x:Key="RampageDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_spent.png</ImageSource>
    <ImageSource x:Key="RampageDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_missing.png</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD4" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD4Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD4Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad1_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD6" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD6Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD6Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad2_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD8" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD8Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD8Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad3_d.dds</ImageSource>
	
	<ImageSource x:Key="MartialArtsDieD10" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD10Used" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
    <ImageSource x:Key="MartialArtsDieD10Unavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_mad4_d.dds</ImageSource>
	
	<ImageSource x:Key="NecroThaum" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Icon.dds</ImageSource>
    <ImageSource x:Key="NecroThaumUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Used.dds</ImageSource>
    <ImageSource x:Key="NecroThaumUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Used.dds</ImageSource>
	<!-- MOD END -->

    <ImageSource x:Key="KiPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki.png</ImageSource>
    <ImageSource x:Key="KiPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_spent.png</ImageSource>
    <ImageSource x:Key="KiPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_missing.png</ImageSource>

    <ImageSource x:Key="Rage" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage.png</ImageSource>
    <ImageSource x:Key="RageUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_spent.png</ImageSource>
    <ImageSource x:Key="RageUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_missing.png</ImageSource>

    <ImageSource x:Key="BardicInspiration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration.png</ImageSource>
    <ImageSource x:Key="BardicInspirationUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_spent.png</ImageSource>
    <ImageSource x:Key="BardicInspirationUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_missing.png</ImageSource>

    <ImageSource x:Key="ChannelDivinity" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_d.png</ImageSource>
    <ImageSource x:Key="ChannelDivinityUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_spent.png</ImageSource>
    <ImageSource x:Key="ChannelDivinityUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_missing.png</ImageSource>

    <ImageSource x:Key="SuperiorityDie" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_d.png</ImageSource>
    <ImageSource x:Key="SuperiorityDieUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_spent.png</ImageSource>
    <ImageSource x:Key="SuperiorityDieUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_missing.png</ImageSource>

    <ImageSource x:Key="ArcaneRecoveryPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_d.png</ImageSource>
    <ImageSource x:Key="ArcaneRecoveryPointUsed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_spent.png</ImageSource>
    <ImageSource x:Key="ArcaneRecoveryPointUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_missing.png</ImageSource>

    <ImageSource x:Key="IconMovement" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_movement.png</ImageSource>
    <ImageSource x:Key="IconMovementUnavailable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_movement_missing.png</ImageSource>

    <ImageSource x:Key="IconRitualPoint" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_d.png</ImageSource>
    <ImageSource x:Key="IconRitualPointSpent" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_spent.png</ImageSource>
    <ImageSource x:Key="IconRitualPointDisabled" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_disabled.png</ImageSource>

    <ImageSource x:Key="NaturalRecovery">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery.png</ImageSource>
    <ImageSource x:Key="NaturalRecoverySpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_spent.png</ImageSource>
    <ImageSource x:Key="NaturalRecoveryUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_missing.png</ImageSource>

    <ImageSource x:Key="WildShape">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape.png</ImageSource>
    <ImageSource x:Key="WildShapeSpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_spent.png</ImageSource>
    <ImageSource x:Key="WildShapeUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_missing.png</ImageSource>

    <ImageSource x:Key="TidesOfChaos">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_d.png</ImageSource>
    <ImageSource x:Key="TidesOfChaosSpent">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_spent.png</ImageSource>
    <ImageSource x:Key="TidesOfChaosUnavailable">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_missing.png</ImageSource>

    <ImageSource x:Key="ResourceDivider" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/resourceDivider.png</ImageSource>

    <ImageSource x:Key="IconMagicDamage" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_dmg_magic.png</ImageSource>
    <ImageSource x:Key="IconRange" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_range.png</ImageSource>
    <ImageSource x:Key="IconArmorClass" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC.png</ImageSource>
    <ImageSource x:Key="IconHanded" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_handedness.png</ImageSource>
    <ImageSource x:Key="IconWeight" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight.png</ImageSource>
    <ImageSource x:Key="IconWeightWarning" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight_warning.png</ImageSource>
    <ImageSource x:Key="IconGold" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_coin.png</ImageSource>
    <ImageSource x:Key="IconAmmunition" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_ammunitionType.png</ImageSource>
    <ImageSource x:Key="IconAttackSave" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_attackSave.png</ImageSource>
    <ImageSource x:Key="IconConcentration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_concentration.png</ImageSource>
    <ImageSource x:Key="IconDippable" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_dippable.png</ImageSource>
    <ImageSource x:Key="IconFinesse" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_finesse.png</ImageSource>
    <ImageSource x:Key="IconHeavy" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_heavyWeight.png</ImageSource>
    <ImageSource x:Key="IconLight" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_lightWeight.png</ImageSource>
    <ImageSource x:Key="IconLoading" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_loading.png</ImageSource>
    <ImageSource x:Key="IconNoDuelWield" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_noDuelWield.png</ImageSource>
    <ImageSource x:Key="IconReach" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_reach.png</ImageSource>
    <ImageSource x:Key="IconPreparation" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_spellbook.png</ImageSource>
    <ImageSource x:Key="IconStoryItem" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_storyItem.png</ImageSource>
    <ImageSource x:Key="IconWarning" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_warning.png</ImageSource>
    <ImageSource x:Key="IconCastAbility" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_spellbook.png</ImageSource>
    <ImageSource x:Key="IconCooldown" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_recharge.png</ImageSource>
    <ImageSource x:Key="IconRace" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_type.png</ImageSource>
    <ImageSource x:Key="IconHealth" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_health.png</ImageSource>
    <ImageSource x:Key="IconSpeed" >pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_speed.png</ImageSource>
    <ImageSource x:Key="IconDuration" >pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_duration.dds</ImageSource>

    <!-- Controlled by the TooltipManager -->
    <ls:LSTooltip x:Key="ManagedTooltip" IsHitTestVisible="False"/>

    <!-- Tooltip Styles -->
    <Style x:Key="TooltipVerticalSpacer" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,16" />
    </Style>

    <Style x:Key="TooltipBaseTextStyle" TargetType="TextBlock" >
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
        <Setter Property="noesis:Text.Stroke" Value="Black" />
        <Setter Property="noesis:Text.StrokeThickness" Value="4" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TooltipDefaultTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipLargeFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
    </Style>

    <Style x:Key="TooltipCtxTransStringDefaultTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding NameCTS.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NameCTS.Text}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipCtxTransStringTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringDefaultTitleStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipLargeFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
    </Style>

    <Style x:Key="TooltipTitleNoCollapseStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipLargeFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
    </Style>

    <Style x:Key="TooltipItemTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipTitleStyle}">
        <Style.Triggers>
            <!-- Common is not displayed -->
            <DataTrigger Binding="{Binding Rarity}" Value="Uncommon">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Uncommon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Rare">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Rare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="VeryRare">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.VeryRare}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Rarity}" Value="Legendary">
                <Setter Property="Foreground" Value="{DynamicResource ItemRarityColour.Legendary}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipSubTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource TooltipSmallFontSize}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,-8,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
    </Style>


    <Style x:Key="TooltipSubTitleNoCollapseStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource TooltipSmallFontSize}" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
    </Style>

    <Style x:Key="TooltipBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource TooltipSmallFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TooltipCtxTransStringBodyStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="FontSize" Value="{StaticResource TooltipSmallFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Description.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Description.Text}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipGeneralTextDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="LineHeight" Value="{StaticResource TooltipSmallLineHeight}"/>
    </Style>

    <Style x:Key="TooltipDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="Width" Value="678" />
        <Setter Property="Margin" Value="0,24,0,0" />
    </Style>

    <Style x:Key="TooltipCtxTransStringDescriptionStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}">
        <Setter Property="Width" Value="678" />
        <Setter Property="Margin" Value="0,24,0,0" />
    </Style>

    <Style x:Key="TooltipUnavailableReasonStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}" />
        <Setter Property="Width" Value="565" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TooltipBoostIconStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="80" />
    </Style>

    <Style x:Key="TooltipSectionTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBodyStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Margin" Value="0,54,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{DynamicResource LS_InfoColor1}" />
    </Style>

    <Style x:Key="TooltipSectionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipCtxTransStringBodyStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Highlight}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipOverrideTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Override}" Value="Worse">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideWorse}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Equal">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideEqual}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Better">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideBetter}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Override}" Value="Different">
                <Setter Property="Foreground" Value="{DynamicResource LS_SpellOverrideDifferent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TooltipBottomTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
        <Setter Property="FontSize" Value="{StaticResource TooltipSmallFontSize}" />
    </Style>

    <Style x:Key="RomanNumeralLevelImage" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Level}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="1">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_01.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="2">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_02.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="3">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_03.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="4">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_04.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="5">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_05.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="6">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_06.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="7">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_07.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="8">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_08.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="9">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_09.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Level}" Value="10">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/num_10.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#region Tooltip narrow base-->
    <Style x:Key="NarrowTooltipTotalValue" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource TitleFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
        <Setter Property="Margin" Value="0,44,0,0" />
    </Style>

    <Style x:Key="NarrowTooltipTotalValueDescription" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipMiniFontSize}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,-8,0,0" />
    </Style>

    <Style x:Key="NarrowTooltipDescriptionText" TargetType="TextBlock" BasedOn="{StaticResource TooltipDefaultTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipSmallFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
    </Style>
    <Style x:Key="NarrowTooltipDescriptionText.Base" TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}">
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontSize" Value="{DynamicResource TooltipSmallFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
    </Style>

    <Style x:Key="NarrowTooltipSectionText" TargetType="TextBlock" BasedOn="{StaticResource NarrowTooltipDescriptionText}">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Foreground" Value="{DynamicResource LS_TertiaryColor}" />
    </Style>

    <Style x:Key="NarrowTooltipModifierText" TargetType="TextBlock" BasedOn="{StaticResource NarrowTooltipDescriptionText}">
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>

    <!--#endregion-->

    <!-- Tooltip ctxTransString parameter unit conversion -->
    <Style x:Key="TooltipUnitParamRun" TargetType="ls:LSRun">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Range" />
                    <Condition Binding="{Binding Type}" Value="Distance" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TooltipSectionType}" Value="Description" />
                    <Condition Binding="{Binding Type}" Value="Weight" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Text" Value="{Binding Text, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <!-- Tooltip ctxTransString parameter unit conversion END-->

    <!--
        Storyboards
    -->
    <Storyboard x:Key="DelayedShowComparisonItem">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EquippedItemPanel" Storyboard.TargetProperty="Visibility">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>
    
    <Style x:Key="DamageText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource LS_PrimaryColor}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AbilityTooltipIconStyle" TargetType="Image">
        <Setter Property="Stretch" Value="None"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Ability}" Value="Strength">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityStrength.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Constitution">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityConstitution.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Dexterity">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityDexterity.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Intelligence">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityIntelligence.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Wisdom">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityWisdom.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Ability}" Value="Charisma">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_abilityCharisma.png"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DiceImage" TargetType="Control">
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Path x:Name="colourPath" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="88" Height="88" StrokeThickness="10" Style="{DynamicResource DiceBgStyle}">
                <Path.Data>
                    <Geometry>M11,26 L44,6 L76,26 V63 L44,82 L11,63 Z</Geometry>
                </Path.Data>
            </Path>
            <Image x:Name="frontImg" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d20.png" Stretch="None"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="None">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d4">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d4.png" />
                <Setter TargetName="colourPath" Property="Data">
                    <Setter.Value>
                        <Geometry>M11,58 L44,12 L76,58 L44,77 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d6">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d6.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d8">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d8.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,28 L44,11 L72,28 V60 L44,77 L15,60 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d10">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d10.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M15,39 L44,13 L73,42 L72,54 L45,75 L16,52 Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding DiceTypeSet.DiceType}" Value="d12">
                <Setter TargetName="frontImg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_d12.png" />
                <Setter TargetName="colourPath" Property="Data" >
                    <Setter.Value>
                        <Geometry>M63.958,70.734L44.006,77.226,24.057,70.715,11.732,53.688,11.738,32.65,24.073,15.635,44.026,9.144l19.949,6.511L76.3,32.681,76.293,53.72Z</Geometry>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RollDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="#6da4e7" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage" >
                <Setter Property="Fill" Value="{DynamicResource LS_bonusTxtColor}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                <Setter Property="Fill" Value="{DynamicResource LS_alertTxtColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DamageDiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="White" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Fill" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Fill" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Fill" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Fill" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Fill" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Fill" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Fill" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Fill" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Fill" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Fill" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Fill" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DamageDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource DamageDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding}"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="DieItemContainerStyle"  TargetType="{x:Type ContentPresenter}">
        <Setter Property="Panel.ZIndex" Value="1" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Panel.ZIndex" Value="99" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Panel.ZIndex" Value="98" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                <Setter Property="Panel.ZIndex" Value="97" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="3">
                <Setter Property="Panel.ZIndex" Value="95" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="4">
                <Setter Property="Panel.ZIndex" Value="94" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="5">
                <Setter Property="Panel.ZIndex" Value="93" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="6">
                <Setter Property="Panel.ZIndex" Value="92" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="7">
                <Setter Property="Panel.ZIndex" Value="91" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="8">
                <Setter Property="Panel.ZIndex" Value="90" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="9">
                <Setter Property="Panel.ZIndex" Value="96" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DieListStyle"  TargetType="{x:Type ItemsControl}">
        <Setter Property="AlternationCount" Value="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="128" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DieItemContainerStyle}" />
        <Setter Property="ItemsPanel" >
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
                    <Condition Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource LessThanConverter}, ConverterParameter=6}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="RenderTransform" >
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.95" ScaleY="0.95" />
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=5}" Value="True">
                <Setter Property="RenderTransform" >
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DieIconStyle"  TargetType="ContentControl">
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <TransformGroup >
                    <ScaleTransform ScaleX="1" ScaleY="1" />
                    <RotateTransform Angle="0"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="40,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex),RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="0" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="1" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,25"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="2" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,25"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="3" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,50"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="4" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,50"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="5" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,75"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="6" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,60,75"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="7" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="22"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="60,0,0,100"/>
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}" Value="8" />
                    <Condition Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="RenderTransform" >
                        <Setter.Value>
                            <TransformGroup >
                                <RotateTransform Angle="0"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DieItemContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}"  ContentTemplate="{StaticResource DamageDiceSet}" Content="{Binding .}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate x:Key="RollDiceSet">
        <DataTemplate.Resources>
            <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
        </DataTemplate.Resources>
        <Grid ClipToBounds="False">
            <Control Template="{StaticResource DiceImage}" DataContext="{Binding}"/>
        </Grid>
    </DataTemplate>

    <!--
        Tooltip ControlTemplates
    -->
    <ControlTemplate x:Key="BaseSurfaceTooltipTemplate" TargetType="ContentControl">
        <ls:LSNineSliceImage Style="{StaticResource DefaultTooltip9Slice}">

            <ContentPresenter x:Name="tooltipContent" MaxWidth="{DynamicResource MaxTooltipContentWidth}" />

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Show"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Hide"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ls:LSNineSliceImage>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ., Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="tooltipContent" Property="MaxWidth" Value="{DynamicResource MaxWideTooltipContentWidth}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BaseLSTooltipTemplate" TargetType="ContentControl">
        <ControlTemplate.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipBaseTextStyle}"/>
        </ControlTemplate.Resources>
        <ls:LSNineSliceImage Style="{StaticResource DefaultTooltip9Slice}">
            <StackPanel>
                <ContentPresenter x:Name="tooltipContent" MaxWidth="{DynamicResource MaxTooltipContentWidth}" />
                <TextBlock x:Name="uiHint" HorizontalAlignment="Center" Foreground="{StaticResource LS_baseTxtColor}">
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Source='h0468b422gac91g47b8gae98g4c881d63d4d0', Converter={StaticResource TranslatedStringConverter}}" PlayerId="{Binding PlayerId,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          NamedParamInputEvents="{Binding Path=DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                                <Style TargetType="ContentControl">
                                    <Setter Property="Margin" Value="0,18,0,-18" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_square_d.png" Stretch="None"/>
                                                    <TextBlock Text="{Binding ShortShortcut}" Foreground="{StaticResource LS_accent100TxtColor}" FontSize="{StaticResource MediumFontSize}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,2,0,-2"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                        </ls:CtxTransStringRunGeneratorBehavior>
                    </i:Interaction.Behaviors>
                </TextBlock>

            </StackPanel>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Show"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_Shared_Tooltip_Hide"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ls:LSNineSliceImage>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding CanBePinned, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter TargetName="uiHint" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CanBePinned, Converter={StaticResource NullToBoolFalseConverter}}" Value="False">
                <Setter TargetName="uiHint" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ., Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipStat">
                <Setter TargetName="tooltipContent" Property="MaxWidth" Value="{DynamicResource MaxWideTooltipContentWidth}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ., Converter={StaticResource TypeConverter}}" Value="ls.VMTooltipCompareItems">
                <Setter TargetName="tooltipContent" Property="MaxWidth" Value="{DynamicResource MaxCompareTooltipContentWidth}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="HeaderBodyTemplate">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" Margin="0,10,0,32" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" FontSize="{DynamicResource TitleFontSize}" ls:TextBlockFormatter.SourceText="{Binding Tag, RelativeSource={RelativeSource AncestorType=ContentControl, AncestorLevel=2}, Converter={StaticResource TranslatedStringConverter}}"/>
            <TextBlock TextWrapping="Wrap" Width="{StaticResource MaxTooltipContentWidth}" TextAlignment="Left" ls:TextBlockFormatter.SourceText="{Binding ., Converter={StaticResource TranslatedStringConverter}}"/>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="TooltipStripDP" TargetType="DockPanel">
        <Setter Property="Margin" Value="-48,0,-48,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!-- Base Tooltip Strip Template (background images) -->
    <ControlTemplate x:Key="TooltipStripPrimaryContainerTemplate" TargetType="ContentControl">
        <Grid >
            <!-- Background Images -->
            <DockPanel Style="{StaticResource TooltipStripDP}">
                <Image DockPanel.Dock="Top" HorizontalAlignment="Left" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_radial_top.png" Margin="26,-104,0,-10"/>
                <Image DockPanel.Dock="Bottom" HorizontalAlignment="Left" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_radial_bottom.png" Margin="0,0,0,-124"/>
            </DockPanel>
            <ContentPresenter />
        </Grid>
    </ControlTemplate>

    <!-- Base Tooltip Strip Template (background images) -->
    <ControlTemplate x:Key="TooltipStripPrimaryTemplate" TargetType="ContentControl">
        <Grid>
            <!-- Background Images -->
            <DockPanel Style="{StaticResource TooltipStripDP}">
                <Image DockPanel.Dock="Top" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_primary_top.png" Margin="0,0,0,-38"/>
                <Image DockPanel.Dock="Bottom" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_bottom.png" Stretch="None"/>
                <Grid>
                    <Grid.Background>
                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_middle.png" Stretch="None" TileMode="Tile" AlignmentY="Top"/>
                    </Grid.Background>
                </Grid>
            </DockPanel>

            <!-- Text and other content  -->
            <ContentPresenter Margin="0,52,0,0" MaxWidth="{StaticResource MaxTooltipContentWidth}"/>

        </Grid>
    </ControlTemplate>

    <!-- Base Tooltip Strip Template (background images) -->
    <ControlTemplate x:Key="TooltipStripTemplate" TargetType="ContentControl">
        <Grid  Margin="0,0,0,-10">
            <!-- Background Images -->
            <DockPanel Style="{StaticResource TooltipStripDP}" >
                <Image DockPanel.Dock="Top" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_top.png" />
                <Image DockPanel.Dock="Bottom" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_bottom.png" Stretch="None"/>
                <Grid >
                    <Grid.Background>
                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_middle.png" Stretch="None" TileMode="Tile" AlignmentY="Top"/>
                    </Grid.Background>
                </Grid>
            </DockPanel>

            <!-- Text and other content  -->
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="TooltipStripSpellCostTemplate" TargetType="ContentControl">
        <Grid x:Name="Container" Margin="0,0,0,-10">

            <!-- Background Images -->
            <DockPanel x:Name="Background"  Style="{StaticResource TooltipStripDP}" >
                <Image x:Name="TopImage" Margin="0,0,0,0" DockPanel.Dock="Top" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_top.png" />
                <Image DockPanel.Dock="Bottom" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_bottom.png" Stretch="None"/>
                <Grid >
                    <Grid.Background>
                        <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_middle.png" Stretch="None" TileMode="Tile" AlignmentY="Top"/>
                    </Grid.Background>
                </Grid>
            </DockPanel>
            <TextBlock Text="{Binding Level ,Converter={StaticResource DecimalToRomanConverter}}" FontSize="{StaticResource TooltipSmallFontSize}" Foreground="{StaticResource LS_SecondaryColor}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-34,0,0"/>
            <!-- Text and other content  -->
            <ContentPresenter x:Name="Content" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Level,Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="False">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_Strip_top_spell.png" TargetName="TopImage" />
                <Setter Property="Margin" Value="-8,0,8,0" TargetName="TopImage" />
                <Setter Property="Margin" Value="-78,-48,-78,0" TargetName="Background" />
                <Setter Property="Margin" Value="0,50,0,0" TargetName="Container" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- All classes that inherit from VMTooltipDataBase will just show their TooltipData -->
    <DataTemplate DataType="{x:Type ls:VMTooltipDataBase}">
        <ContentPresenter Content="{Binding TooltipData}"/>
    </DataTemplate>

    <!-- Approval Rating Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMApprovalRating}">
        <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0 20" ls:TextBlockFormatter.SourceText="{Binding Description}"/>
    </DataTemplate>

    <!-- Stat Desc Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMTooltipStat}">
        <StackPanel Margin="0 20">
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}"/>

            <ItemsControl Visibility="{Binding CalculationParameters.Count, Converter={StaticResource CountToVisibleConverter}}" ItemsSource="{Binding CalculationParameters}" Margin="0,20,0,20" AlternationCount="{Binding CalculationParameters.Count}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid MinWidth="{StaticResource TooltipWidth}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                                <TextBlock x:Name="additionSign" Text="+" Foreground="{StaticResource LS_ActivePanelFontColor}" Visibility="Collapsed"/>
                                <TextBlock Foreground="{StaticResource LS_ActivePanelFontColor}">
                                        <Run Text="{Binding Value}"/><Run Text=" "/>
                                </TextBlock>
                                <TextBlock Foreground="{StaticResource LS_ActivePanelFontColor}" ls:TextBlockFormatter.SourceText="{Binding Description}"/>
                            </StackPanel>
                            <TextBlock Text="{Binding SourceName}" Foreground="{StaticResource LS_ActivePanelFontColor}" HorizontalAlignment="Right" Grid.Column="1"/>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='-1'}" Value="True">
                                <Setter TargetName="additionSign" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter TargetName="additionSign" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Value}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </StackPanel>
    </DataTemplate>

    <!-- Skill Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMTooltipSkill}">
        <StackPanel Margin="0 20">
            <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock Text="{Binding AbilityName}" Style="{StaticResource TooltipSubTitleStyle}"/>
            <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                    <Grid VerticalAlignment="Top" Margin="-20,0,-20,0" ClipToBounds="False">
                        <!-- Dice -->
                        <ItemsControl ItemsSource="{Binding DiceList}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" 
                                          VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4 -50 0 0" />
                        <!-- Description -->
                        <TextBlock Text="{Binding RollString}" Margin="140 0 0 0"/>
                    </Grid>
                </ContentControl>
            </ContentControl>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0,16,0,0" ls:TextBlockFormatter.SourceText="{Binding Description}"/>
        </StackPanel>
    </DataTemplate>

    <!-- Ability Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMTooltipAbility}">
        <Grid>
            <Image Style="{DynamicResource AbilityTooltipIconStyle}" DataContext="{Binding}" VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="None" Margin="0 -80 -105 0"/>
            <StackPanel Margin="0 20">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
                    <TextBlock x:Name="AbilityValue" Text="{Binding Value}" Style="{StaticResource TooltipTitleStyle}" Margin="10 0 0 0"/>
                </StackPanel>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='hdb40eff6g84d1g421dg906cg6779df63479f', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>
                <ContentControl Content="{Binding .}" ContentTemplate="{StaticResource {x:Type ls:VMTooltipStat}}" Margin="0 16 0 0"/>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                <Setter TargetName="AbilityValue" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Status Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMTooltipStatus}" >
        <StackPanel Margin="0,20,0,20">
            <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock Text="{Binding Source='h40b6867ag0d94g4132ga679g791cb1c8968a',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}"/>

            <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                <ContentControl Template="{StaticResource TooltipStripPrimaryTemplate}" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Top" Margin="48 -20 28 0" />
                        <TextBlock x:Name="DurationText" FontSize="{DynamicResource TooltipSmallFontSize}" Foreground="{StaticResource LS_SecondaryColor}" TextWrapping="Wrap" MaxWidth="500" Margin="0 0 0 10"
                                       Style="{DynamicResource StatusDurationTextStyle}" DataContext="{Binding Status}"/>
                    </StackPanel>
                </ContentControl>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="False"/>
                                    <Condition Binding="{Binding Status.DurationType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                                    <Condition Binding="{Binding DurationType}" Value="None"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}" >
                <i:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                </i:Interaction.Behaviors>
            </TextBlock>
            <ItemsControl x:Name="GroupFlags" ItemsSource="{Binding Status.GroupFlags}" MinHeight="20"  Margin="10,20,10,0">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_type.png" Stretch="None" Margin="0,-6,0,0"/>
                            <TextBlock FontSize="{StaticResource TooltipSmallFontSize}">
                                    <Run Text="{Binding Source='hf777db58gf537g4f59g8bb2g4fb9b9d3fd59',Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0}:'}" Foreground="{StaticResource LS_PrimaryColor }" />
                                    <Run Text="{Binding Name}" Foreground="{StaticResource LS_SecondaryColor }"/>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding GroupFlags.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="ItemsControl.ItemsSource" Value="{Binding GroupFlags}" TargetName="GroupFlags"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
                <Setter Property="DataContext" Value="{Binding}" TargetName="DurationText"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Progression Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMProgression}">
        <StackPanel>
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </i:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" Text="{Binding DisplayType}"/>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </i:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <!-- Name + Description Tooltip -->
    <DataTemplate x:Key="NameAndDescTooltipContent">
        <StackPanel Margin="0 20">
            <TextBlock Style="{StaticResource TooltipCtxTransStringTitleStyle}">
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </i:Interaction.Behaviors>
            </TextBlock>
            <TextBlock Style="{StaticResource TooltipCtxTransStringDescriptionStyle}">
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                    </i:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMFeatureBoost}">
        <ContentPresenter ContentTemplate="{StaticResource NameAndDescTooltipContent}" Content="{Binding .}"/>
    </DataTemplate>

    <Style TargetType="TextBlock" x:Key="SectionResourceNameStyle">
        <Setter Property="Text" Value="{Binding Name}"/>
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Style.Triggers>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="SectionImageStyle">
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_red_star.png"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Margin" Value="0,-2,0,0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TypeId}" Value="">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ActionPoint">
                <Setter Property="Source" Value="{StaticResource IconActionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BonusActionPoint">
                <Setter Property="Source" Value="{StaticResource IconBonusActionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ReactionPoint">
                <Setter Property="Source" Value="{StaticResource IconReactionPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Movement">
                <Setter Property="Source" Value="{StaticResource IconMovement}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WarlockSpellSlot">
                <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlot}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SpellSlot">
                <Setter Property="Source" Value="{StaticResource IconSpellSlot}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SorceryPoint">
                <Setter Property="Source" Value="{StaticResource SorceryPoint}"/>
            </DataTrigger>
			<!-- MOD START - Custom action resources -->
			<DataTrigger Binding="{Binding TypeId}" Value="SneakAttack">
                <Setter Property="Source" Value="{StaticResource SneakAttack}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="PsiPoint">
                <Setter Property="Source" Value="{StaticResource PsiPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="PsiPointMastery">
                <Setter Property="Source" Value="{StaticResource PsiPointMastery}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="HitDice">
                <Setter Property="Source" Value="{StaticResource HitDice}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="RampageDie">
                <Setter Property="Source" Value="{StaticResource RampageDie}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD4">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD4}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD6">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD6}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD8">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD8}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="MartialArtsDieD10">
                <Setter Property="Source" Value="{StaticResource MartialArtsDieD10}"/>
            </DataTrigger>
			<DataTrigger Binding="{Binding TypeId}" Value="NecroThaum">
                <Setter Property="Source" Value="{StaticResource NecroThaum}"/>
            </DataTrigger>
			<!-- MOD END -->
            <DataTrigger Binding="{Binding TypeId}" Value="KiPoint">
                <Setter Property="Source" Value="{StaticResource KiPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Rage">
                <Setter Property="Source" Value="{StaticResource Rage}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BardicInspiration">
                <Setter Property="Source" Value="{StaticResource BardicInspiration}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ChannelDivinity">
                <Setter Property="Source" Value="{StaticResource ChannelDivinity}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="SuperiorityDie">
                <Setter Property="Source" Value="{StaticResource SuperiorityDie}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint">
                <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPoint}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="NaturalRecoveryPoint">
                <Setter Property="Source" Value="{StaticResource NaturalRecovery}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WildShape">
                <Setter Property="Source" Value="{StaticResource WildShape}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="TidesOfChaos">
                <Setter Property="Source" Value="{StaticResource TidesOfChaos}"/>
            </DataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ActionPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconActionPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BonusActionPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconBonusActionPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Movement"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconMovementUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SpellSlot"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconSpellSlotUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WarlockSpellSlot"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SorceryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SorceryPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD START - Custom action resources -->
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SneakAttack"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SneakAttackDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPointMastery"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointMasteryUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="HitDice"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource HitDiceUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="RampageDie"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource RampageDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD4"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD4Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD6"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD6Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD8"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD8Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD10"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource MartialArtsDieD10Unavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NecroThaum"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaicResource NecroThaumUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD END -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="KiPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource KiPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Rage"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RageUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BardicInspiration"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource BardicInspirationUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ChannelDivinity"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ChannelDivinityUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SuperiorityDie"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SuperiorityDieUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPointUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NaturalRecoveryPoint"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NaturalRecoveryUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WildShape"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource WildShapeUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="TidesOfChaos"/>
                    <Condition Binding="{Binding Value}" Value="0"/>
                    <Condition Binding="{Binding IgnoreCost}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource TidesOfChaosUnavailable}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!-- show action resource icons as disabled if ritual casting is enabled-->
            <!-- TODO : Perhaps check with design if it's intended to have all the resources hidden because of the ritual tag ?-->
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ActionPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconActionPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BonusActionPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconBonusActionPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SpellSlot"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconSpellSlotUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WarlockSpellSlot"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SorceryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SorceryPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD START - Custom action resources -->
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SneakAttack"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SneakAttackDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="PsiPointMastery"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource PsiPointMasteryUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="HitDice"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource HitDiceUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="RampageDie"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RampageDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD4"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD4Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD6"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD6Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD8"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD8Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="MartialArtsDieD10"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource MartialArtsDieD10Used}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NecroThaum"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NecroThaumUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
			<!-- MOD END -->
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="KiPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource KiPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="Rage"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource RageUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="BardicInspiration"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource BardicInspirationUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ChannelDivinity"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ChannelDivinityUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="SuperiorityDie"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource SuperiorityDieUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="ArcaneRecoveryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource ArcaneRecoveryPointUsed}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="NaturalRecoveryPoint"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource NaturalRecoverySpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="WildShape"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource WildShapeSpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TypeId}" Value="TidesOfChaos"/>
                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Source" Value="{StaticResource TidesOfChaosSpent}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--<DataTrigger Binding="{Binding TypeId}" Value="SpellSlotUnavailable">
                <Setter Property="Source" Value="{StaticResource IconSpellSlotUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="WarlockSpellUnavailable">
                <Setter Property="Source" Value="{StaticResource IconWarlockSpellSlotUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ActionPointUnavailable">
                <Setter Property="Source" Value="{StaticResource IconActionPointUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="BonusActionPointUnavailable">
                <Setter Property="Source" Value="{StaticResource IconBonusActionPointUnavailable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="MovementUnavailable">
                <Setter Property="Source" Value="{StaticResource IconMovementUnavailable}"/>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding TypeId}" Value="MagicDamage">
                <Setter Property="Source" Value="{StaticResource IconMagicDamage}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Range">
                <Setter Property="Source" Value="{StaticResource IconRange}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="CastAbility">
                <Setter Property="Source" Value="{StaticResource IconCastAbility}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="AlwaysPrepared">
                <Setter Property="Source" Value="{StaticResource IconPreparation}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Cooldown">
                <Setter Property="Source" Value="{StaticResource IconCooldown}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="ArmorClass">
                <Setter Property="Source" Value="{StaticResource IconArmorClass}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="TwoHanded">
                <Setter Property="Source" Value="{StaticResource IconHanded}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Versatile">
                <Setter Property="Source" Value="{StaticResource IconHanded}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Light">
                <Setter Property="Source" Value="{StaticResource IconLight}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Heavy">
                <Setter Property="Source" Value="{StaticResource IconHeavy}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Reach">
                <Setter Property="Source" Value="{StaticResource IconReach}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Ammunition">
                <Setter Property="Source" Value="{StaticResource IconAmmunition}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="AttackSave">
                <Setter Property="Source" Value="{StaticResource IconAttackSave}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Concentration">
                <Setter Property="Source" Value="{StaticResource IconConcentration}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Dippable">
                <Setter Property="Source" Value="{StaticResource IconDippable}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Finesse">
                <Setter Property="Source" Value="{StaticResource IconFinesse}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Loading">
                <Setter Property="Source" Value="{StaticResource IconLoading}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="NoDualWield">
                <Setter Property="Source" Value="{StaticResource IconNoDuelWield}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="StoryItem">
                <Setter Property="Source" Value="{StaticResource IconStoryItem}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding TypeId}" Value="Warning">
                <Setter Property="Source" Value="{StaticResource IconWarning}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Race">
                <Setter Property="Source" Value="{StaticResource IconRace}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Health">
                <Setter Property="Source" Value="{StaticResource IconHealth}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Speed">
                <Setter Property="Source" Value="{StaticResource IconSpeed}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DetailSectionsTemplate">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible">
            <Grid x:Name="SectionIcon" Width="64" Height="64"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="52,0,0,0">
                <Image Stretch="None" Style="{StaticResource SectionImageStyle}"/>
                <Rectangle Fill="{Binding Brush}" Width="48" Height="48"/>
            </Grid>

            <TextBlock x:Name="SectionDesc" Width="500" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0" >
                <TextBlock.Style>
                    <Style BasedOn="{StaticResource TooltipSectionTextStyle}" TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.IsOverridden, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                <Setter Property="Opacity" Value="0.75"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <i:Interaction.Behaviors>
                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                </i:Interaction.Behaviors>
            </TextBlock>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                    <Condition Binding="{Binding TypeId}" Value="" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding TypeId}" Value="Warning">
                <Setter TargetName="SectionDesc" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="SectionTemplate">
        <StackPanel>
            <ItemsControl ItemsSource="{Binding Details}" ItemTemplate="{StaticResource DetailSectionsTemplate}"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SpellSchoolTitle">
        <TextBlock x:Name="txt" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="None"/>
                    <Condition Binding="{Binding IsSpell}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding GroupType, Converter={StaticResource EnumTranslatedStringConverter}}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--cantrips-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h84d192f5g6473g4932gb6a8g1387eae58320',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='he52cfcbag8a50g453agb4c8g2fac2ff17c10',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h39ad0edbg77d3g4021g9e2eg191042e6d467',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h79636df9g296cg4bfdga59cgb7db7d3419ab',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h42bcd6b2g9deag452cgb9adg4ce569758b0f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h6b2a69f0g57e8g45c0gb271gbd317790bc8f',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h1431ea5eg3cd6g464dga8c6gfd9653e48f7e',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding GroupType}" Value="Cantrip"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt" Value="{Binding Source='h2e7f0955g4be5g4a21g8f1cg221d590807d4',Converter={StaticResource TranslatedStringConverter}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <!--Levelled Spells W SpellSchool-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Abjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3d4828d5gd55ag409dgae7dg3bd8a511ab88"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Conjuration"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="ha6d3a561g6626g44fegbbd4g77ad67a79367"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Divination"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h4059b271gffb3g401dga73ag759f7727aa35"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Enchantment"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h53d95750g137ag47f1ga9f4g80a302360a96"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Evocation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3fe64b3dgfa67g41acg8626g616f6431c50e"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Illusion"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h777f9097ge5e2g4741g8b78gde7559263ce5"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Necromancy"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h3818a08fg8f0fg47d1gaadegffd9ad47278e"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SpellSchool}" Value="Transmutation"/>
                    <Condition Binding="{Binding IsSpell}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="ls:TextBlockFormatter.SourceText" TargetName="txt">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="had85051cg9819g432ag8014gcd586df07944"/>
                                <Binding Path="DataContext.Level" RelativeSource="{RelativeSource Mode=Self}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipPassive}">
        <Grid>
            <Image x:Name="DecorationImage" VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="None" Margin="0,-110,-50,0"
                   Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter} , ConverterParameter='Assets/Tooltips/Icons/'}" />
            <StackPanel>
                <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource NameAndDescTooltipContent}"/>
                <ItemsControl ItemsSource="{Binding Sections}" ItemTemplate="{StaticResource SectionTemplate}"/>
                <ContentControl x:Name="ExtraDescBlock" Template="{StaticResource TooltipStripTemplate}" Visibility="Visible" Margin="0,0,0,8">
                    <TextBlock Width="680" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,26,0,16" >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
                                <Setter Property="FontSize" Value="{StaticResource TooltipMiniFontSize}" />
                                <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
                            </Style>
                        </TextBlock.Style>
                    <i:Interaction.Behaviors>
                        <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                    </i:Interaction.Behaviors>
                    </TextBlock>
                </ContentControl>
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ExtraDescription.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ExtraDescBlock" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Item Tooltip-->
    <DataTemplate DataType="{x:Type ls:VMTooltipItem}" >
        <Grid x:Name="root">
            <Image x:Name="DecorationImage" VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="None" Margin="0,-74,0,0" Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter} , ConverterParameter='Assets/Tooltips/ItemIcons/'}" />
            <!-- Text and other content  -->
            <StackPanel HorizontalAlignment="Center" Margin="0 26 0 0" MaxWidth="{StaticResource MaxTooltipContentWidth}" Width="{StaticResource MaxTooltipContentWidth}">
                <StackPanel.Resources>
                    <DataTemplate x:Key="BoostDataTemplate">
                        <StackPanel Margin="0,10,0,0" >
                            <StackPanel Orientation="Horizontal" >
                                <Border x:Name="Icon" Visibility="Collapsed" BorderBrush="{StaticResource LS_tint00}" BorderThickness="4" Margin="0,10,20,0" VerticalAlignment="Top">
                                    <Rectangle  Style="{StaticResource TooltipBoostIconStyle}" Fill="{Binding Icon}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                        <Rectangle.ToolTip>
                                            <ls:LSTooltip CustomData="{Binding UnlockSpell}"/>
                                        </Rectangle.ToolTip>
                                    </Rectangle>
                                </Border>
                                <StackPanel>
                                    <DockPanel Width="{StaticResource TooltipStripWidth}">
                                        <TextBlock x:Name="Name" ls:TextBlockFormatter.SourceText="{Binding Name}" FontSize="{StaticResource DefaultFontSize}" Style="{StaticResource TooltipDefaultTextStyle}" DockPanel.Dock="Left" />
                                        <TextBlock x:Name="Value" Text="{Binding Value, StringFormat={}{0:+#;-#;''}}" Visibility="Visible" Style="{StaticResource TooltipBaseTextStyle}" FontSize="{StaticResource DefaultFontSize}" TextAlignment="Right" DockPanel.Dock="Right" />
                                    </DockPanel>

                                    <ContentPresenter ContentTemplate="{StaticResource SpellSchoolTitle }" Content="{Binding UnlockSpell}" Width="430" HorizontalAlignment="Left"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="UnlockSpell">
                                <Setter TargetName="Value" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                <Setter TargetName="Value" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                <Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding GUID}" Value="Movement">
                                <Setter TargetName="Value" Property="Text" Value="{Binding DValue,Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short',StringFormat='+{0}'}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="PassiveDataTemplate">
                        <StackPanel Margin="0,10,0,0">
                            <TextBlock x:Name="Name" FontSize="{StaticResource MediumFontSize}" Style="{StaticResource TooltipCtxTransStringDefaultTitleStyle}" >
                                            <i:Interaction.Behaviors>
                                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                            </i:Interaction.Behaviors>
                            </TextBlock>
                            <TextBlock x:Name="Desc" Style="{StaticResource TooltipSectionTextStyle}" Foreground="{DynamicResource LS_SecondaryColor}" FontSize="{DynamicResource SmallFontSize}" >
                                            <i:Interaction.Behaviors>
                                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                            </i:Interaction.Behaviors>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </StackPanel.Resources>
                
                <TextBlock Style="{StaticResource TooltipItemTitleStyle}" Text="{Binding Name}"/>
                <TextBlock x:Name="SubTitle" Visibility="{Binding Type, Converter={StaticResource StringToVisibilityConverter}}" Style="{StaticResource TooltipSubTitleStyle}">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h98651f22g529fg45fbg8fbagba0d3eadf389"/>
                            <Binding Path="DataContext.RarityText" RelativeSource="{RelativeSource Mode=Self}"/>
                            <Binding Path="DataContext.Type" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <!-- Remaining time for summons -->
                <ContentControl x:Name="LifetimeHolder" Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                    <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <StackPanel x:Name="Duration" Orientation="Horizontal">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Top" Margin="38,-20,28,0" />
                            <TextBlock FontSize="{DynamicResource TooltipSmallFontSize}"  Foreground="{StaticResource LS_SecondaryColor}">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                        <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                        <Binding Path="DataContext.Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>
                    </ContentControl>
                </ContentControl>

                <!-- Show number of Camp Supplies provided by this Item -->
                <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" Visibility="{Binding CampSupplies, Converter={StaticResource CountToVisibleConverter}}">
                    <ContentControl x:Name="suppliesDisplay" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <Grid Margin="20,0,0,0" ToolTipService.Placement="Top" ToolTipService.VerticalOffset="0">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_campSupplies.png" Stretch="None" HorizontalAlignment="Left" Margin="0,-40,0,0"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="92,-10,0,0">
                                <TextBlock FontSize="{StaticResource IntermediateFontSize}">
                                    <ls:TextBlockFormatter.SourceText>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="hbae5dd01g4c64g4b58ga7bcg84360d7a5458"/>
                                            <Binding Path="CampSupplies"/>
                                        </MultiBinding>
                                    </ls:TextBlockFormatter.SourceText>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </ContentControl>

                <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" Visibility="{Binding ArmorSection.Details.Count, Converter={StaticResource CountToVisibleConverter}}">
                    <ContentControl x:Name="armorDisplay" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-4,-46,0,0" ClipToBounds="False">
                            <Grid DataContext="{Binding ArmorSection.Details[0]}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_AC_primary.png" Stretch="None" />
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
	                                <TextBlock.Style>
		                                <Style TargetType="TextBlock">
			                                <Setter Property="Text" Value="{Binding Value}"/>
			                                <Style.Triggers>
				                                <DataTrigger Binding="{Binding ShowPlus}" Value="True">
													<Setter Property="Text" Value="{Binding Value, StringFormat='+{0}'}"/>
				                                </DataTrigger>
			                                </Style.Triggers>
		                                </Style>
	                                </TextBlock.Style>
                                </TextBlock>
							</Grid>
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,54,0,0">
                                <StackPanel Orientation="Horizontal" >
                                    <StackPanel.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <TextBlock Text="{Binding ArmorSection.Details[1].Value, StringFormat={}{0:+#;-#;''}}" VerticalAlignment="Center"/>
                                    <TextBlock Text=" (" VerticalAlignment="Center" Visibility="{Binding ArmorSection.Details.Count, Converter={StaticResource CountToVisibleConverter},ConverterParameter={StaticResource IntCountOne}}"/>
                                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource LS_SecondaryColor}" >
                                            <i:Interaction.Behaviors>
                                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ArmorSection.Details[1].Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                            </i:Interaction.Behaviors>
                                    </TextBlock>
                                    <TextBlock Text=")" VerticalAlignment="Center" Visibility="{Binding ArmorSection.Details.Count, Converter={StaticResource CountToVisibleConverter},ConverterParameter={StaticResource IntCountOne}}"/>
                                </StackPanel>
                                <Rectangle DataContext="{Binding ArmorSection.Details[1].SubjectVM}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Fill="Transparent"/>
                            </Grid>
                        </StackPanel>
                    </ContentControl>
                </ContentControl>

                <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                    <ContentControl x:Name="damageDisplay" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <Grid VerticalAlignment="Top" Margin="0,-46,0,20" ClipToBounds="False">
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Height="200"  Margin="-52,-60,0,-100" >
                                <ItemsControl ItemsSource="{Binding Damages, Converter={StaticResource TooltipDamageConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />
                            </Grid>

                            <ItemsControl ItemsSource="{Binding Damages}" AlternationCount="{Binding Damages.Count}" Margin="108,52,0,0" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="DamageLabel" Style="{StaticResource DamageText}" Text="{Binding Damage, StringFormat='+{0}'}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                <Setter TargetName="DamageLabel" Property="Text" Value="{Binding Damage}" />
                                            </Trigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock x:Name="handedLabel" Text="{Binding Source='h46fbfb55g8805g4f8ag9b21g00d4cd9eb944',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right"  Foreground="{DynamicResource LS_SecondaryColor}" Margin="0,52,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" >
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding VersatileDamages.Count}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl" BasedOn="{StaticResource {x:Type ContentControl}}">
                            <Setter Property="Visibility" Value="{Binding Damages.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                            <Style.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding VersatileTwohanded}" Value="True" />
                                        <Condition Binding="{Binding Equipped}" Value="ThisEquipped" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                    <ContentControl x:Name="versatileDamageDisplay" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <Grid VerticalAlignment="Top" Margin="0,-46,0,20" ClipToBounds="False">
                            <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Height="200"  Margin="-52,-60,0,-100" >
                                <ItemsControl ItemsSource="{Binding VersatileDamages, Converter={StaticResource TooltipDamageConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />
                            </Grid>

                            <ItemsControl ItemsSource="{Binding VersatileDamages}" AlternationCount="{Binding VersatileDamages.Count}" Margin="108,52,0,0" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="DamageLabel" Style="{StaticResource DamageText}" Text="{Binding Damage, StringFormat='+{0}'}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                <Setter TargetName="DamageLabel" Property="Text" Value="{Binding Damage}" />
                                            </Trigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <TextBlock Text="{Binding Source='h36a9679ag7e1dg40bfg9ad2g0adf1703d822',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="{DynamicResource LS_SecondaryColor}" Margin="0,52,0,0"/>
                        </Grid>
                    </ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl" BasedOn="{StaticResource {x:Type ContentControl}}">
                            <Setter Property="Visibility" Value="{Binding VersatileDamages.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                            <Style.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding VersatileTwohanded}" Value="False" />
                                        <Condition Binding="{Binding Equipped}" Value="ThisEquipped" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0,16,0,0" ls:TextBlockFormatter.SourceText="{Binding Description}"/>

                <!-- Exclusive User -->
                <TextBlock Margin="0,16,0,0" Visibility="{Binding ExclusiveUser, Converter={StaticResource StringToVisibilityConverter}}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource TooltipDescriptionStyle}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsExclusiveUser}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsExclusiveUser}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h5f70fbe9g3fc1g4d97g9619g407012798c10"/>
                            <Binding Path="DataContext.ExclusiveUser" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>

                <ItemsControl ItemsSource="{Binding Sections}" ItemTemplate="{StaticResource SectionTemplate}"/>
                <!-- Boosts and Passives  -->
                <StackPanel Margin="0,20,0,18">
                    <!-- No hand related -->
                    <ContentControl x:Name="BoostsAndPassives" Template="{StaticResource TooltipStripTemplate}" Margin="0,0,0,2">
                        <StackPanel Margin="0,20,0,20">
                            <TextBlock x:Name="BoostTitle" Style="{StaticResource TooltipSectionTitleStyle}" Text="{Binding Source='h1f7b0442gc9ddg496bga471g5dff643e5aa1',Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0}:'}" Margin="0,0,0,0" />
                            <ItemsControl ItemsSource="{Binding Boosts}" Visibility="{Binding Boosts.Count, Converter={StaticResource CountToVisibleConverter}}" ItemTemplate="{StaticResource BoostDataTemplate}"/>
                            <ItemsControl ItemsSource="{Binding Passives}"   ItemTemplate="{StaticResource PassiveDataTemplate}"/>
                        </StackPanel>
                    </ContentControl>
                    <!-- Main hand related -->
                    <ContentControl x:Name="BoostsAndPassivesMainHand" Template="{StaticResource TooltipStripTemplate}" Margin="0,0,0,2">
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock x:Name="BoostMainHandTitle" Style="{StaticResource TooltipSectionTitleStyle}" Text="{Binding Source='h34936560gdcedg4635g8368g989a30af4bb6',Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0}:'}" Margin="0,20,0,0" />
                            <ItemsControl ItemsSource="{Binding BoostsMainHand}" Visibility="{Binding BoostsMainHand.Count, Converter={StaticResource CountToVisibleConverter}}" ItemTemplate="{StaticResource BoostDataTemplate}"/>
                            <ItemsControl ItemsSource="{Binding PassivesMainHand}"   ItemTemplate="{StaticResource PassiveDataTemplate}"/>
                        </StackPanel>
                    </ContentControl>
                    <!-- Off hand related -->
                    <ContentControl x:Name="BoostsAndPassivesOffHand" Template="{StaticResource TooltipStripTemplate}" Margin="0,0,0,2">
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock x:Name="BoostOffHandTitle" Style="{StaticResource TooltipSectionTitleStyle}" Text="{Binding Source='h9a554413ga080g40fcg8adfg5a1faccc31da',Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0}:'}" Margin="0,20,0,0" />
                            <ItemsControl ItemsSource="{Binding BoostsOffHand}" Visibility="{Binding BoostsOffHand.Count, Converter={StaticResource CountToVisibleConverter}}" ItemTemplate="{StaticResource BoostDataTemplate}"/>
                            <ItemsControl ItemsSource="{Binding PassivesOffHand}"   ItemTemplate="{StaticResource PassiveDataTemplate}"/>
                        </StackPanel>
                    </ContentControl>
                </StackPanel>

                <!-- Status Effect -->
                <ItemsControl ItemsSource="{Binding StatusEffects}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DockPanel Margin="0,20,0,0">
                                <Grid Width="{DynamicResource StatusWidth}" Height="{DynamicResource StatusHeight}" DockPanel.Dock="Left" Margin="0,0,20,0" >
                                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/statusBG_floating.png" Stretch="Uniform" />
                                    <ls:LSPie Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" Width="120" Height="110" Margin="-20,-10,-10,-10" >
                                        <ls:LSPie.Style>
                                            <Style TargetType="ls:LSPie">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Duration}" Value="-1">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ls:LSPie.Style>
                                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/statusBG_floating_bar.png" Stretch="UniformToFill" Width="80" Height="80" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </ls:LSPie>
                                    <Ellipse Width="60" Height="60" Fill="{Binding Icon}"/>
                                    <Label VerticalAlignment="Bottom" HorizontalAlignment="Right" IsHitTestVisible="False" Content="{Binding Duration}" Margin="0,0,16,8" Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{DynamicResource MediumFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="2">
                                        <Label.Style>
                                            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Duration}" Value="-1">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Duration}" Value="0">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                </Grid>
                                <StackPanel DockPanel.Dock="Right">
                                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource BigFontSize}"/>
                                    <TextBlock DockPanel.Dock="Bottom" Style="{StaticResource TooltipCtxTransStringBodyStyle}">
                                        <i:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding TooltipDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                        </i:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>
                            </DockPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ContentControl Template="{StaticResource TooltipStripTemplate}" Margin="0,20,0,0">
                    <ItemsControl AlternationCount="{Binding CostSummary.Count}" ItemsSource="{Binding CostSummary}" HorizontalAlignment="Center">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!-- Use + as separator if multiple costs -->
                                <StackPanel Orientation="Horizontal" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                    <TextBlock x:Name="separator" Text=" + " Visibility="Visible" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource MediumFontSize}" VerticalAlignment="Center" Margin="0,0,0,-8"/>
                                    <TextBlock Style="{StaticResource SectionResourceNameStyle}" Margin="0" Text="{Binding MaxValue}" VerticalAlignment="Center" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibleConverter}, ConverterParameter='1'}"/>
                                    <Image Stretch="None"   Style="{StaticResource SectionImageStyle}"/>
                                    <TextBlock  Style="{StaticResource SectionResourceNameStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="{Binding CostSummary.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Item.IsEquipment}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <!-- Bottom Section -->
                <ContentControl Template="{StaticResource TooltipStripTemplate}" Visibility="{Binding CanMove, Converter={StaticResource BoolToVisibleConverter}}" VerticalAlignment="Bottom" Margin="0 10 0 -4">
                    <Grid >
                        <Grid.Resources>
                            <Style x:Key="ItemTooltipBottomTextStyle" TargetType="TextBlock" BasedOn="{StaticResource TooltipBottomTextStyle}">
                                <Setter Property="Margin" Value="0,16,0,0" />
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal" Background="Transparent">
                            <Image x:Name="weightIcon" Source="{StaticResource IconWeight}" Stretch="None" Margin="0,0,0,6"/>
                            <TextBlock x:Name="weightText" Text="{Binding Weight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight N2'}" Style="{StaticResource ItemTooltipBottomTextStyle}"/>
                            <StackPanel.ToolTip>
                                <ls:LSTooltip IsHitTestVisible="False" Content="h9b3f757dgbe75g41a6gae52g0c2b1a5e49f2" Tag="hd4969285gc8d8g41afg8e2cg12d5444acbe2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                            </StackPanel.ToolTip>
                        </StackPanel>
                        <Control Grid.Column="1" Grid.ColumnSpan="3" Template="{StaticResource EncumbranceStateWarningTemplate}" Tag="Visible"/>
                        <StackPanel Grid.Column="4" Orientation="Horizontal" HorizontalAlignment="Right" Background="Transparent">
                            <!-- Original gold value -->
                            <Grid>
                                <Path x:Name="Strikethrough" Stroke="{DynamicResource LS_OriginalTradePriceColor}" StrokeThickness="4" Stretch="Fill" Visibility="Hidden" Margin="-4,0,-4,4">
                                    <Path.Data>
                                        <LineGeometry StartPoint="0,0.5" EndPoint="1,0.5"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock Text="{Binding Gold}" Style="{StaticResource ItemTooltipBottomTextStyle}">
                                        <i:Interaction.Triggers>
                                            <ei:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                                <i:Interaction.Behaviors>
                                                    <ei:ConditionBehavior>
                                                        <ei:ConditionalExpression>
                                                            <ei:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                            <ei:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                        </ei:ConditionalExpression>
                                                    </ei:ConditionBehavior>
                                                </i:Interaction.Behaviors>
                                                <ei:ChangePropertyAction PropertyName="Foreground" Value="{DynamicResource LS_OriginalTradePriceColor}"/>
                                                <ei:ChangePropertyAction PropertyName="StrokeThickness" Value="0"/>
                                                <ei:ChangePropertyAction TargetName="Strikethrough" PropertyName="Visibility" Value="Visible"/>
                                            </ei:PropertyChangedTrigger>
                                        </i:Interaction.Triggers>
                                </TextBlock>
                            </Grid>
                            <!-- Trade price -->
                            <TextBlock Text="{Binding TradePrice}" Margin="14,16,0,0" x:Name="TradePriceText" Visibility="Collapsed" Style="{StaticResource ItemTooltipBottomTextStyle}"> 
                                    <i:Interaction.Triggers>
                                        <ei:PropertyChangedTrigger Binding="{Binding TradePrice}">
                                            <i:Interaction.Behaviors>
                                                <ei:ConditionBehavior>
                                                    <ei:ConditionalExpression>
                                                        <ei:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="-1"/>
                                                        <ei:ComparisonCondition LeftOperand="{Binding TradePrice}" Operator="NotEqual" RightOperand="{Binding Gold}"/>
                                                    </ei:ConditionalExpression>
                                                </ei:ConditionBehavior>
                                            </i:Interaction.Behaviors>
                                            <ei:ChangePropertyAction TargetName="TradePriceText" PropertyName="Visibility" Value="Visible"/>
                                        </ei:PropertyChangedTrigger>
                                    </i:Interaction.Triggers>
                            </TextBlock>
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_coin.png" Stretch="None" Margin="10,0,0,4"/>
                            <StackPanel.ToolTip>
                                <ls:LSTooltip IsHitTestVisible="False" Content="hcea50cc0gbeebg4aaeg992bgdb79cbfef7e8" Tag="hf9b209b9g3745g41a1g85dfg129065b9b215" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                            </StackPanel.ToolTip>
                        </StackPanel>

                        <TextBlock x:Name="Equipped" Grid.Column="2"  FontSize="{DynamicResource TooltipSmallFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource LS_PrimaryColor}" Visibility="Collapsed" Text="{Binding Source='ha1ff7c28g1ddcg41d2g92e4g3b15371c596d',Converter={StaticResource TranslatedStringConverter} }" />
                    </Grid>
                </ContentControl>

            </StackPanel>

        </Grid>
        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                <Setter TargetName="LifetimeHolder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(ls:AttachedProperties.InheritedTag), ElementName=root}" Value="Equipped">
                <Setter TargetName="Equipped" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Rarity}" Value="Common">
                <Setter TargetName="SubTitle" Property="Text" Value="{Binding Type}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ArmorSection.Details.Count, Converter={StaticResource GreaterThanConverter},ConverterParameter=0}" Value="True">
                <Setter TargetName="SubTitle" Property="Text" Value="{Binding ArmorSection.Header}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Damages.Count}" Value="0">
                <Setter TargetName="BoostTitle" Property="Text" Value="{Binding Source='hc4981ec0g7695g48bagaba6g8e5548a04fc8',Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0}:'}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Boosts.Count}" Value="0" />
                    <Condition Binding="{Binding Passives.Count}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassives" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BoostsMainHand.Count}" Value="0" />
                    <Condition Binding="{Binding PassivesMainHand.Count}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassivesMainHand" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding BoostsOffHand.Count}" Value="0" />
                    <Condition Binding="{Binding PassivesOffHand.Count}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BoostsAndPassivesOffHand" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding EncumbranceStateWarning}" Value="AtCarryLimit">
                <Setter TargetName="weightIcon" Property="Source" Value="{StaticResource IconWeightWarning}"/>
                <Setter TargetName="weightText" Property="Foreground" Value="{StaticResource LS_bar100TxtColor}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Compare Items Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMTooltipCompareItems}">
        <DockPanel x:Name="EnclosingPanel">
            <ContentControl Template="{StaticResource BaseTooltipTemplate}" Content="{Binding EquippedItem}" x:Name="EquippedItemPanel" ls:AttachedProperties.InheritedTag="Equipped" VerticalAlignment="Top">
                <ContentControl.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard x:Name="Showdelay" Storyboard="{StaticResource DelayedShowComparisonItem}"/>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                        <StopStoryboard BeginStoryboardName="Showdelay"/>
                    </EventTrigger>
                </ContentControl.Triggers>
                <ContentControl.Style>
                    <Style TargetType="Control">
                        <Setter Property="DockPanel.Dock" Value="Left"/>
                        <Setter Property="Margin" Value="-832,0,0,0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.ComparisonOnRight, ElementName=EnclosingPanel}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Right"/>
                                <Setter Property="Margin" Value="0,0,0,0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
            <ContentControl Template="{StaticResource BaseTooltipTemplate}" Content="{Binding Item}" VerticalAlignment="Top"/>
        </DockPanel>
    </DataTemplate>

    <!-- Dice Roll Tooltip -->
    <ControlTemplate x:Key="RollDescriptionTemplate">
        <StackPanel HorizontalAlignment="Left" >
            <StackPanel Orientation="Vertical">
                <TextBlock x:Name="AdvantageText" TextWrapping="Wrap"/>
                <TextBlock x:Name="txt" TextWrapping="Wrap" Tag="{Binding DiceTypeSet.Amount}">
                <Run x:Name="PrefixText" Text=""/>
                <Run x:Name="ValueText" Text="{Binding ElementName=txt , Path=Tag}"/><Run x:Name="DieText" Text="{Binding DiceTypeSet.DiceType}"/>
                </TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="additionalVal" Text="{Binding AdditionalValue, StringFormat='{}{0:+#;-#;+0}' }" />
                <ItemsControl ItemsSource="{Binding Modifiers}" Padding="0" HorizontalAlignment="Left" Margin="0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibleConverter}}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DiceTypeSet.Amount}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock TextWrapping="Wrap" Text="{Binding DiceTypeSet.Str, StringFormat={}+{0}}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Vertical"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                            <Setter Property="Orientation" Value="Horizontal"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding AdditionalValue}" Value="0">
                <Setter TargetName="additionalVal" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                <Setter TargetName="AdvantageText" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h9ad6cf4dg119cg4c28g8527gc2bec6466e0f', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='hfc9b8156g8e4fg4086g9c6cg26dbb03aa466', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{DynamicResource LS_bonusTxtColor}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2 , StringFormat=N1}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h6e3a9885ga3ffg4f82gb9f7gb2833b2a2e96', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h34944186g018cg474dg96d8gd56417c3e086', Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="AdvantageText" Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                <Setter TargetName="txt" Property="Tag" Value="{Binding DiceTypeSet.Amount, Converter={StaticResource MultiplierConverter} , ConverterParameter=2}"/>
                <Setter TargetName="PrefixText" Property="Text" Value="{Binding Source='h0017825fgda99g495fg938dg196a95011901', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RollAdvantageDisplay">
        <Grid>
            <StackPanel x:Name="advantageList" Orientation="Vertical" Visibility="{Binding Advantages.Count, Converter={StaticResource CountToVisibleConverter}}">
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <ItemsControl ItemsSource="{Binding Advantages}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="img" Stretch="None" Visibility="Collapsed" />
                                <TextBlock x:Name="desc" Text="{Binding Description}" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Advantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_advantage.png" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{DynamicResource LS_bonusTxtColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding AdvantageType}" Value="Disadvantage">
                                    <Setter TargetName="img" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_disadvantage.png" />
                                    <Setter TargetName="desc" Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock Text="{Binding Source='hb047e755gd92bg43d8gac73gcf2a011a5ca1', Converter={StaticResource TranslatedStringConverter}}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>

            <!--advantage fallBack-->
            <StackPanel>
                <TextBlock Text="{Binding Source='hf07e401cgdd53g45f6g9c28ga2656dd26179', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0"/>
                <StackPanel Orientation="Horizontal">
                    <Image Stretch="None" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_advantage.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_disadvantage.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <TextBlock Text="{Binding Source='h7c258c4fg5467g48e5ga704g2ccd2e80dfe6', Converter={StaticResource TranslatedStringConverter}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Advantage">
                                        <Setter Property="Foreground" Value="{DynamicResource LS_bonusTxtColor}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RollAdvantageType}" Value="Disadvantage">
                                        <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>

                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=advantageList,Path=Visibility}" Value="Visible">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RollAdvantageType}" Value="None">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <!--advantage fallBack-->
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="RollDieContainerTemplate">
        <ContentControl x:Name="Die" Style="{StaticResource DieIconStyle}" ContentTemplate="{StaticResource RollDiceSet}" Content="{Binding}" RenderTransformOrigin="0.5,0.5"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMRoll}">
        <StackPanel Margin="0,22,0,12">

            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" HorizontalAlignment="Left">
                    <Run Text="{Binding Source='hd54ec827g2cd8g480fg9b76g74a62c213271', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run Text=" "/>
                    <Run Text="{Binding DifficultyCheck}"/>
            </TextBlock>

            <TextBlock Text="{Binding RollDescription}" Style="{StaticResource TooltipSubTitleStyle}"/>

            <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                    <Grid VerticalAlignment="Top" ClipToBounds="False" >
                        <!-- Dice -->
                        <Grid Width="128" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-20 -50 0 0">
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}" 
                                          VerticalAlignment="Top" HorizontalAlignment="Center"/>
                        </Grid>

                        <!-- Description -->
                        <Control Template="{StaticResource RollDescriptionTemplate}" Margin="140 0 0 6"/>
                    </Grid>
                </ContentControl>
            </ContentControl>

            <TextBlock Margin="0 15 0 0" TextWrapping="Wrap">
                    <Run Text="{Binding Source='h87e79fa7gcd5eg41ceg8f66g245868d1fedf', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run Text="{Binding RollDescription}"/>
            </TextBlock>

            <TextBlock Text="{Binding Source='h57a05f43g5361g4b03g8883g56d4683b7100', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibleConverter}}"/>
            <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibleConverter}}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" >
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text" Value="{Binding Value, StringFormat={}{0:+#;-#;+0}}"/>
                                                <Style.Triggers>
                                                     <DataTrigger Binding="{Binding Value}" Value="0">
                                                        <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat={}+{0}}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_bonusTxtColor}"/>
                                                    </DataTrigger>                                                
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                    <Run Text=" "/>
                            </TextBlock>
                            <TextBlock Text="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2"/>
                            <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2"/>
                            <TextBlock x:Name="AdditionalText" Text="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 0 2"/>
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                                <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Control Template="{StaticResource RollAdvantageDisplay}" />
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="RollTooltipTemplate" TargetType="Control">
        <ContentControl Template="{StaticResource BaseTooltipTemplate}" Content="{Binding .}"/>
    </ControlTemplate>

    <!-- Spell Slot Indicator -->
    <ControlTemplate x:Key="SpellSlotIndicator" TargetType="ContentControl">
        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,32,0">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSpell}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/spellSlotbudgetIndicator.png" Stretch="None"/>

            <TextBlock Text="{Binding Source='h35fb1deag4acbg4cd4g985cgba3d0a3f17a5',Converter={StaticResource TranslatedStringConverter}}" FontSize="{DynamicResource MiniFontSize}" HorizontalAlignment="Center" Margin="0,8,0,0"/>

            <Image Style="{StaticResource RomanNumeralLevelImage}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,40,0,0" Stretch="None"/>

            <Grid Width="72" Height="72" VerticalAlignment="Top" Margin="0,84,0,0">
                <ItemsControl ItemsSource="{Binding SpellSlots}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Center"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Image x:Name="img" Stretch="None"/>
                            <DataTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SpellSlotType}" Value="Available" />
                                        <Condition Binding="{Binding SpellSlotName}" Value="SpellSlot" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/spelslot_available.png"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SpellSlotType}" Value="Available" />
                                        <Condition Binding="{Binding SpellSlotName}" Value="WarlockSpellSlot" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_mini_spellSlot_warlock.png"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding SpellSlotType}" Value="NotAvailable">
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_mini_spellSlot_unavailable.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SpellSlotType}" Value="ToBeUsed">
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_mini_spellSlot_active.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SpellSlotType}" Value="Exhausted">
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_mini_spellSlot_spent.png"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

        </Grid>
    </ControlTemplate>

    <Style x:Key="DamageParamRun" TargetType="ls:LSRun">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="HealAmount">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="None">
                <Setter Property="Foreground" Value="{StaticResource DamageType.HealAmount}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Slashing}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Acid}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Thunder}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Necrotic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Fire}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Lightning}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Cold}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Psychic}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Poison}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Radiant}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DamageType}" Value="Force">
                <Setter Property="Foreground" Value="{StaticResource DamageType.Force}" />
            </DataTrigger>
            <!-- Spell (MISSING COLOR CODE) -->
            <DataTrigger Binding="{Binding Type}" Value="Spell">
                <Setter Property="Foreground" Value="{StaticResource LS_bonusTxtColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Spell Tooltip -->
    <DataTemplate DataType="{x:Type ls:VMTooltipSpell}">
        <DataTemplate.Resources>
            <Style TargetType="TextBlock" >
                <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}" />
            </Style>
        </DataTemplate.Resources>
        <Border >
            <Grid Margin="0,26,0,0">
                <Image x:Name="DecorationImage" VerticalAlignment="Top" HorizontalAlignment="Right" Stretch="None" Margin="0,-94,-76,0" Source="{Binding IconName, Converter={StaticResource IconIdToSourceConverter} , ConverterParameter='Assets/Tooltips/Icons/'}" />
                <StackPanel >
                    <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}" Width="456" LineStackingStrategy="BlockLineHeight" LineHeight="{StaticResource TooltipTitleLineHeight}"/>

                    <ContentPresenter ContentTemplate="{StaticResource SpellSchoolTitle }" Content="{Binding .}" Margin="0,0,0,22" Width="430" HorizontalAlignment="Left" Panel.ZIndex="10"/>

                    <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}">
                        <StackPanel>
                            <ContentControl Template="{StaticResource TooltipStripPrimaryTemplate}" Visibility="{Binding DamageList.Count, Converter={StaticResource CountToVisibleConverter}}">
                                <Grid VerticalAlignment="Top" Margin="0,-46,0,20" ClipToBounds="False">

                                    <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Height="200"  Margin="-52,-60,0,-100" >
                                        <ItemsControl ItemsSource="{Binding DamageList, Converter={StaticResource TooltipDamageConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource DieItemContainerTemplate}" />
                                    </Grid>

                                    <ItemsControl ItemsSource="{Binding DamageList}" Width="460" Margin="0,46,0,0">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate >
                                                <StackPanel>
                                                    <TextBlock  x:Name="SectionDesc" Width="600" TextWrapping="Wrap" Style="{StaticResource DamageText}" FontSize="{DynamicResource BigFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="5" VerticalAlignment="Top"  >
                                                        <i:Interaction.Behaviors>
                                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding .}" ParamRunStyle="{StaticResource DamageParamRun}" />
                                                        </i:Interaction.Behaviors>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </ContentControl>
                            <ItemsControl ItemsSource="{Binding ResultSections}" HorizontalAlignment="Center" Margin="-78,0,-78,0" Visibility="{Binding ResultSections.Count, Converter={StaticResource CountToVisibleConverter}}" >
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate >
                                        <ContentControl Template="{StaticResource TooltipStripPrimaryTemplate}">
                                            <ItemsControl ItemsSource="{Binding Details}" HorizontalAlignment="Center" Width="736" Margin="0,-40,0,0">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Visible" ClipToBounds="False" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                                            <Grid x:Name="SectionIcon" Width="80" Height="80"  VerticalAlignment="Top" HorizontalAlignment="Left" Margin="44,0,0,0" ClipToBounds="False">
                                                                <Image VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Style="{StaticResource SectionImageStyle}"/>
                                                                <Ellipse Height="72" Width="72" VerticalAlignment="Center" HorizontalAlignment="Center"  Fill ="{Binding Brush}" />
                                                                <TextBlock x:Name="SectionDuration" VerticalAlignment="Top" HorizontalAlignment="Right"  noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="2" Text="{Binding Duration}" FontWeight="Bold" FontSize="{DynamicResource DefaultFontSize}">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Foreground" Value="{DynamicResource LS_accent100TxtColor}"/>
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding DataContext.IsOverridden, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                                                                    <Setter Property="Foreground" Value="{DynamicResource LS_accent25TxtColor}"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </Grid>
                                                            <TextBlock x:Name="ApplyText" VerticalAlignment="Top" Margin="14,40,0,0" Text="{Binding Source='hfd91f94eg7274g4716g92cagc4aa3b826925', Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0} '}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource BigFontSize}" />
                                                            <TextBlock Margin="0,40,0,0" x:Name="SectionDesc" Style="{StaticResource TooltipSectionTextStyle}" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource BigFontSize}" VerticalAlignment="Top" TextWrapping="Wrap" MaxWidth="430">
                                                                <i:Interaction.Behaviors>
                                                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                                                </i:Interaction.Behaviors>
                                                            </TextBlock>
                                                        </StackPanel>
                                                        <DataTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Brush}" Value="{x:Null}" />
                                                                    <Condition Binding="{Binding TypeId}" Value="" />
                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="Visibility" Value="Collapsed" TargetName="SectionIcon"/>
                                                                </MultiDataTrigger.Setters>
                                                            </MultiDataTrigger>
                                                            <DataTrigger Binding="{Binding IsPositiveContext}" Value="True">
                                                                <Setter TargetName="ApplyText" Property="Text" Value="{Binding Source='hd46ad4d5gaaa1g4289g99eeg2b87c99962db', Converter={StaticResource TranslatedStringConverter},StringFormat='{}{0} '}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Duration, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="False">
                                                                <Setter TargetName="SectionDuration" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ContentControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DamageList.Count}" Value="0" />
                                            <Condition Binding="{Binding ResultSections.Count}" Value="0" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>

                    <TextBlock x:Name="SectionDesc" Width="680" Style="{StaticResource TooltipSectionTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,26,0,16" >
                            <i:Interaction.Behaviors>
                                <ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description.Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                            </i:Interaction.Behaviors>
                    </TextBlock>

                    <!-- Only enable if visible so as to not eat input used by other systems e.g. World Tooltips -->
                    <ls:LSInputBinding x:Name="expanderInput" BoundEvent="ExpandTooltip" PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <ls:LSInputBinding.Style>
                            <Style TargetType="ls:LSInputBinding">
                                <Setter Property="IsEnabled" Value ="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding ="{Binding ElementName=expandableSection, Path=Visibility}" Value="Visible">
                                        <Setter Property="IsEnabled" Value ="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ls:LSInputBinding.Style>
                    </ls:LSInputBinding>

                    <StackPanel x:Name="AttackSave" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding AttackSave, Converter={StaticResource StringToVisibilityConverter}}">
                        <Grid x:Name="ASIcon" Width="64" Height="64"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="52,0,0,0">
                            <Image Stretch="None" Source="{StaticResource IconAttackSave}"/>
                        </Grid>
                        <TextBlock x:Name="ASLabel" Width="500" Style="{StaticResource TooltipSectionTextStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0" >
                                <Run Text="{Binding Source='h3389e203g28c8g49feg950fg830a997ac943', Converter={StaticResource TranslatedStringConverter}}"/><Run Text=": "/><Run Text="{Binding AttackSave}"/>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel x:Name="Concentration" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding NeedsConcentration, Converter={StaticResource BoolToVisibleConverter}}">
                        <Grid x:Name="ConcentrationIcon" Width="64" Height="64"  VerticalAlignment="Center" HorizontalAlignment="Left" Margin="52,0,0,0">
                            <Image Stretch="None" Source="{StaticResource IconConcentration}"/>
                        </Grid>
                        <TextBlock x:Name="ConcentrationDesc" Width="500" Style="{StaticResource TooltipSectionTextStyle}" Text="{Binding Source='h0217f663g36beg4b16g929eg1c6dfdd6a859', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,4,0,0" />
                    </StackPanel>

                    <ItemsControl ItemsSource="{Binding Sections}" ItemTemplate="{StaticResource SectionTemplate}" Margin="0,0,0,22" HorizontalAlignment="Left"/>

                    <ItemsControl ItemsSource="{Binding UnavailableReasons}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="0 0 0 22" HorizontalAlignment="Left" Visibility="{Binding Line, Converter={StaticResource StringToVisibilityConverter}}">
                                    <Image Source="{StaticResource IconWarning}" Stretch="None" Margin="52 -8 0 0"/>
                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Line}" Style="{StaticResource TooltipUnavailableReasonStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Grid>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CooldownTime}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None"/>
                            <TextBlock Text="{Binding CooldownTime, StringFormat={}{0:0.}}" FontSize="{DynamicResource HugeFontSize}" Margin="8,8,0,0"/>
                        </StackPanel>
                    </Grid>

                    <ContentControl x:Name="ExtraDescBlock" Template="{StaticResource TooltipStripTemplate}" Visibility="Visible" Margin="0,0,0,8">
                        <TextBlock Width="680" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,26,0,16" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipSectionTextStyle}">
                                    <Setter Property="FontSize" Value="{StaticResource TooltipMiniFontSize}" />
                                    <Setter Property="Foreground" Value="{DynamicResource LS_SecondaryColor}" />
                                </Style>
                            </TextBlock.Style>
                                <i:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding ExtraDescription.Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}" />
                                </i:Interaction.Behaviors>
                        </TextBlock>
                    </ContentControl>

                    <ContentControl Template="{StaticResource TooltipStripSpellCostTemplate}" Visibility="{Binding CostSummary.Count, Converter={StaticResource CountToVisibleConverter}}">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <ItemsControl AlternationCount="{Binding CostSummary.Count}" ItemsSource="{Binding CostSummary}" HorizontalAlignment="Center">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <!-- Use + as separator if multiple costs -->
                                        <StackPanel Orientation="Horizontal" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right">
                                            <TextBlock x:Name="separator" Text=" + " Visibility="Visible" FontSize="{DynamicResource MediumFontSize}" VerticalAlignment="Center" Margin="0,10,0,10">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <!-- gray out if use cost resources are not used due to ritual casting enabled -->
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                                                                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{DynamicResource LS_TertiaryColor}"/>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <!-- When in the cost, the max value represents the cost-->
                                            <TextBlock Style="{StaticResource SectionResourceNameStyle}" Margin="0" Text="{Binding MaxValue}" VerticalAlignment="Center" Visibility="{Binding MaxValue, Converter={StaticResource CountToVisibleConverter}, ConverterParameter='1'}"/>
                                            <Image Stretch="None"   Style="{StaticResource SectionImageStyle}" VerticalAlignment="Center"/>
                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource SectionResourceNameStyle}">
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <!-- gray out if use cost resources are not used due to ritual casting enabled -->
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding Path=DataContext.RitualCost, Converter={StaticResource NullToBoolFalseConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True" />
                                                                    <Condition Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{DynamicResource LS_TertiaryColor}"/>
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                <Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <StackPanel x:Name="RitualIndicator" HorizontalAlignment="Right" Orientation="Horizontal" Visibility="{Binding RitualCost, Converter={StaticResource NullToCollapsedConverter}}">
                                <Image Source="{StaticResource ResourceDivider}" Stretch="None" Margin="40,0,40,0"/>
                                <Image Stretch="None" Margin="0,-2,0,0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="{StaticResource IconRitualPoint}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=DataContext.IsRitualDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource IconRitualPointDisabled}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=DataContext.RitualCost.Value, Converter={StaticResource LessThanConverter}, ConverterParameter=1, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource IconRitualPointSpent}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>


                    <StackPanel Width="680" Margin="0,26,0,16">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Override}" Value="None">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="{Binding Source='h4693f78cge101g4dbcg8d2fg314806236010', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipOverrideTextStyle}"/>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipOverrideTextStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Override}" Value="Worse">
                                            <Setter Property="Text" Value="{Binding Source='hfa9b9be2gb7eeg4d98g8869gc4126276e512', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Equal">
                                            <Setter Property="Text" Value="{Binding Source='ha231a88fg57f3g4bf2g9bd5g21c728ca318f', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Better">
                                            <Setter Property="Text" Value="{Binding Source='h5f14e2f1g251cg4d45g972dg35f77e231d81', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Override}" Value="Different">
                                            <Setter Property="Text" Value="{Binding Source='hf70e793egfa56g4da3ga018ga4c6a012733f', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>

                </StackPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ExtraDescription.Description.Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ExtraDescBlock" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ExtraDescription}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ExtraDescBlock" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ExtraDescription.Description}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ExtraDescBlock" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMDialogueAnswerTag}">
        <StackPanel Orientation="Vertical" Margin="0,22,0,12">
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{StaticResource TooltipTitleStyle}" Text="{Binding Name}" Margin="0 0 10 0"/>
            </StackPanel>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" Text="{Binding Category}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" Margin="0 20 0 0" Text="{Binding Tooltip}"/>

            <StackPanel Orientation="Vertical" Visibility="{Binding IsRoll, Converter={StaticResource BoolToVisibleConverter}}">
                <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                    <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                        <Grid VerticalAlignment="Top" ClipToBounds="False"  Margin="-20,0,-20,0">
                            <!-- Dice -->
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource TooltipRollDiceConverter}}" Style="{StaticResource DieListStyle}" ItemTemplate="{StaticResource RollDieContainerTemplate}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0 -50 0 0" />
                            <!-- Description -->

                            <Control Template="{StaticResource RollDescriptionTemplate}" Margin="140 0 0 6"/>
                        </Grid>
                    </ContentControl>
                </ContentControl>
                <TextBlock Text="{Binding Source='h57a05f43g5361g4b03g8883g56d4683b7100', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 20 0 0" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibleConverter}}"/>
                <ItemsControl ItemsSource="{Binding Modifiers}" Visibility="{Binding Modifiers.Count, Converter={StaticResource CountToVisibleConverter}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style x:Key="DiceBgStyle" TargetType="Path" BasedOn="{StaticResource RollDiceBgStyle}"/>
                            </DataTemplate.Resources>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" >
                                    <Run >
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text" Value="{Binding Value, StringFormat='{}{0:+#;-#;+0} ' }"/>
                                                <Style.Triggers>
                                                     <DataTrigger Binding="{Binding Value}" Value="0">
                                                        <Setter Property="Text" Value="{Binding DiceTypeSet.Str, StringFormat='{}+{0} '}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=0}" Value="False">
                                                        <Setter Property="Foreground" Value="{DynamicResource LS_bonusTxtColor}"/>
                                                    </DataTrigger>                                                
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                </TextBlock>

                                <TextBlock Text="{Binding Source='h8493c134g46fdg4a51gb78ag901a25906630', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center" Margin="0 0 10 2"/>
                                <TextBlock Text="{Binding Name}" Style="{StaticResource TooltipSubTitleStyle}" Margin="0 0 10 2" VerticalAlignment="Center"/>
                                <TextBlock x:Name="AdditionalText" Text="{Binding AdditionalValue}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center" Margin="0 0 0 2"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AdditionalValue, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                                    <Setter TargetName="AdditionalText" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Control Template="{StaticResource RollAdvantageDisplay}" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMInputEvent}">
        <TextBlock x:Name="content" VerticalAlignment="Top" Margin="0 10 0 0">
                    <Run Text="{Binding Caption}"/>
                    <Run Text=" ["/>
                    <Run Text="{Binding Shortcut}" Foreground="{DynamicResource LS_ButtonHintFontColor}"/>
                    <Run Text="]"/>
        </TextBlock>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ls:VMTooltipActionResource}">
        <StackPanel Margin="0 25">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ls:LSActionPointResources x:Name="ResourcePoints" VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent" MaxActionPoints="1" AvailableActionPoints="1" HighlightedActionPoints="0" MaxGroupActionPoints="4" MaxActionPointGroups="0" ActionPointSize="44" SmallActionPointSize="24" ActionPointGroupSize="64" Style="{DynamicResource ActionResourcesTemplateSelector}" Margin="0,0,5,0"/>
                <TextBlock VerticalAlignment="Center" Style="{StaticResource TooltipBaseTextStyle}" Grid.Column="1" FontSize="{StaticResource TooltipLargeFontSize}">
                    <Run x:Name="nameRun" Text="{Binding Name}"/>
                    <Run x:Name="level" Text="{Binding Source='hb7c9dbb8gd727g421egaf0ag910c2bec58e1',Converter={StaticResource TranslatedStringConverter}}"/>
                    <Run x:Name="levelNr" Text="{Binding ActionResource.Level}"/>
                </TextBlock>
            </Grid>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}" Text="{Binding Subtitle}"/>
            <TextBlock Style="{StaticResource TooltipDescriptionStyle}" ls:TextBlockFormatter.SourceText="{Binding Description}" Margin="0 20"/>
            <StackPanel x:Name="RechargeInfo" Orientation="Horizontal">
                <Image Source="{StaticResource IconCooldown}" Stretch="None" Margin="0 0 15 0"/>
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h835d57a1g1280g47efg86deg12e69ba1ced4',Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Center" Margin="0 0 10 0"/>
                <TextBlock Text="{Binding ReplenishType}" Style="{StaticResource TooltipSubTitleStyle}" VerticalAlignment="Center" Margin="0 1 0 0"/>
            </StackPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ActionResource.ReplenishType}" Value="Never">
                <Setter TargetName="RechargeInfo" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActionResource.Level}" Value="0">
                <Setter TargetName="level" Property="Text" Value=""/>
                <Setter TargetName="levelNr" Property="Text" Value=""/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Description tooltip -->
    <DataTemplate x:Key="DescriptionTooltipContent">
        <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource TooltipBodyStyle}" MaxWidth="600" Margin="0,11,0,0"/>
    </DataTemplate>

    <!-- Character Tooltip-->
    <DataTemplate x:Key="CharacterTooltipContent">
        <StackPanel Margin="0 25 0 0" MaxWidth="560">

            <!-- Name/Class/Level -->
            <TextBlock Style="{StaticResource TooltipTitleNoCollapseStyle}" Text="{Binding Name}"/>
            <TextBlock Style="{StaticResource TooltipSubTitleStyle}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                        <Binding Source="h5df00b79ga6acg4d9fgb8dag23340151fba7"/>
                        <Binding Path="DataContext.Stats.Level.Value" RelativeSource="{RelativeSource Mode=Self}"/>
                        <Binding Path="DataContext.Stats.ClassList" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource ListConcatenationConverter}" ConverterParameter=","/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <!-- Remaining time for summons -->
            <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                <ContentControl x:Name="durationDis" Template="{StaticResource TooltipStripPrimaryTemplate}" >
                    <StackPanel x:Name="Duration" Orientation="Horizontal">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/ico_hourglass.png" Stretch="None" VerticalAlignment="Top" Margin="38,-20,28,0" />
                        <TextBlock FontSize="{DynamicResource TooltipSmallFontSize}" Foreground="{StaticResource LS_SecondaryColor}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                    <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                    <Binding Path="DataContext.Lifetime" RelativeSource="{RelativeSource Mode=Self}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </ContentControl>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Lifetime, Converter={StaticResource LessThanConverter}, ConverterParameter=0.1}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <!-- Stats -->
            <StackPanel Margin="25 25 0 25">
                <StackPanel Orientation="Horizontal" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                    <StackPanel.ToolTip>
                        <ls:LSTooltip Content="{Binding Stats.RaceDescription}" ContentTemplate="{StaticResource DescriptionTooltipContent}" IsHitTestVisible="False"/>
                    </StackPanel.ToolTip>
                    <Image Source="{StaticResource IconRace}" Stretch="None" Margin="0 0 15 0"/>
                    <TextBlock>
                            <Run Text="{Binding Source='hf4cf9188gf1ddg4c70g8512g4578eb1e15b6', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}: '}"/><Run
                            Text="{Binding Stats.Race}"/>
                    </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Visibility="{Binding IsValid, Converter={StaticResource BoolToVisibleConverter}}" DataContext="{Binding Stats.Health}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                    <Image Source="{StaticResource IconHealth}" Stretch="None" Margin="0 0 15 0"/>
                    <TextBlock>
                            <Run Text="{Binding Name, StringFormat='{}{0}: '}"/><Run
                            Text="{Binding Value}"/><Run
                            Text="{Binding Max, StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DataContext="{Binding Stats.MovementResource}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                    <Image Source="{StaticResource IconSpeed}" Stretch="None" Margin="0 0 15 0"/>
                    <TextBlock>
                            <Run Text="{Binding Source='h19c905a4g8058g4bc9gaaf6gfd89d3f5376d', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}:'}"/>
                            <Run>
                                <Run.Style>
                                    <Style TargetType="Run">
                                        <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance RoundUp N1'}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='1.5'}" Value="True">
                                                <Setter Property="Text" Value="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance'}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Run.Style>
                            </Run><Run
                            Text="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short', StringFormat='/{0}'}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <!-- Status Effect -->
            <ItemsControl ItemsSource="{Binding StatusEffects}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Margin="0,20,0,0">
                            <Grid Width="{DynamicResource StatusWidth}" Height="{DynamicResource StatusHeight}" DockPanel.Dock="Left" VerticalAlignment="Top" Margin="0,0,20,0" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.IsEnabled="True">
                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/statusBG_floating.png" Stretch="Uniform" />
                                <ls:LSPie Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" Width="120" Height="110" Margin="-20,-10,-10,-10" >
                                    <ls:LSPie.Style>
                                        <Style TargetType="ls:LSPie">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Duration}" Value="-1">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ls:LSPie.Style>
                                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/statusBG_floating_bar.png" Stretch="UniformToFill" Width="80" Height="80" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </ls:LSPie>
                                <Ellipse Width="60" Height="60" Fill="{Binding Icon}"/>
                                <Label VerticalAlignment="Bottom" HorizontalAlignment="Right" IsHitTestVisible="False" Content="{Binding Duration}" Margin="0,0,16,8" Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{DynamicResource MediumFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="2">
                                    <Label.Style>
                                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Duration}" Value="-1">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Duration}" Value="0">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                            <StackPanel DockPanel.Dock="Right">
                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource BigFontSize}" TextWrapping="Wrap" Width="460"/>
                                <TextBlock DockPanel.Dock="Bottom" Style="{StaticResource TooltipCtxTransStringBodyStyle}">
                                        <i:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding TooltipDescription}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                        </i:Interaction.Behaviors>
                                </TextBlock>
                            </StackPanel>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Weight and gold -->
            <ContentControl Template="{StaticResource TooltipStripTemplate}" Margin="0 30 0 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" HorizontalAlignment="Left">
                        <Image Source="{StaticResource IconWeight}" Stretch="None" VerticalAlignment="Center"/>
                        <TextBlock VerticalAlignment="Center" Margin="5 5 0 0">
                                <Run Text="{Binding Inventory.Weight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight'}"/><Run
                                Text="{Binding EncumbranceStats.WeightMaximum, Converter={StaticResource UnitConverter}, ConverterParameter='Weight', StringFormat='/{0}'}"/>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding Inventory.Gold, Mode=OneWay}" VerticalAlignment="Center" Margin="0 5 5 0"/>
                        <Image Source="{StaticResource IconGold}" Stretch="None" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CharacterType}" Value="Avatar">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CharacterType}" Value="Companion">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </StackPanel>
    </DataTemplate>

    <!-- Character Tooltip-->
    <ControlTemplate x:Key="CharacterTooltipTemplate" TargetType="ContentControl">
        <ContentControl Template="{StaticResource BaseTooltipTemplate}" ContentTemplate="{StaticResource CharacterTooltipContent}" Content="{Binding .}" />
    </ControlTemplate>

    <DataTemplate x:Key="BoostSimpleTooltipContent">
        <Grid>
            <TextBlock x:Name="dummyValue" Text="{Binding Value, StringFormat={}{0:+#;-#;''}}" Visibility="Collapsed"/>
            <TextBlock x:Name="desc" Text="{Binding Name}" Style="{StaticResource TooltipSubTitleNoCollapseStyle}"/>
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type}" Value="WeaponEnchantment">
                <Setter TargetName="desc" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h22431a3cg7670g4cabg987fge9a1bbbbbd32"/>
                            <Binding Path="Text" ElementName="dummyValue"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="AC">
                <Setter TargetName="desc" Property="Text">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                            <Binding Source="h4200bb68gc854g4b01g8bb9gc64e9ba8457f"/>
                            <Binding Path="Text" ElementName="dummyValue"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Surface tooltip -->
    <DataTemplate x:Key="SurfaceTooltipContentTemplate">
        <StackPanel Margin="0 20 0 0">
            <TextBlock Text="{Binding Header}" Style="{StaticResource TooltipTitleStyle}"/>
            <TextBlock>
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TooltipSubTitleStyle}">
                        <Setter Property="Text" Value="{Binding Source='h12bbc6ddg3c77g4b0dg91d5g974527cce656', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SurfaceLayer}" Value="Cloud">
                                <Setter Property="Text" Value="{Binding Source='h037b15bagf64bg47dbg90e7g798121f89c55', Converter={StaticResource TranslatedStringConverter}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <ItemsControl ItemsSource="{Binding InflictStatuses}" VerticalContentAlignment="Stretch">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Template="{StaticResource TooltipStripPrimaryTemplate}" Margin="20 0" VerticalAlignment="Stretch">
                            <Grid Margin="28 -55 0 0" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="SectionIcon" Grid.Column="0">
                                    <Ellipse Height="70" Width="70" Margin="0 30 0 0" VerticalAlignment="Top" HorizontalAlignment="Center" Fill="{Binding Brush}"/>
                                    <TextBlock x:Name="DurationTxt" VerticalAlignment="Top" HorizontalAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="2" Text="{Binding Duration}" FontWeight="Bold" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource DefaultFontSize}"/>
                                </Grid>
                                <!--HACK: Width is here because of a Noesis bug! If you don't set it directly it doesn't correctly calculate the Height of multiline text-->
                                <TextBlock x:Name="Label" Width="297" Grid.Column="1" Margin="10 55 -20 0" Style="{StaticResource TooltipSectionTextStyle}"  Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource LargeFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4"
                                           TextWrapping="Wrap" VerticalAlignment="Stretch">
                                    <ls:TextBlockFormatter.SourceText>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Source="hfd91f94eg7274g4716g92cagc4aa3b826925" Converter="{StaticResource TranslatedStringConverter}" StringFormat="{}{0} "/>
                                            <Binding Path="Description.Text"/>
                                        </MultiBinding>
                                    </ls:TextBlockFormatter.SourceText>
                                </TextBlock>
                            </Grid>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding OverrideLabel}" Value="True">
                                <Setter TargetName="Label" Property="ls:TextBlockFormatter.SourceText">
                                    <Setter.Value>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Source="h9dfccd96g26a4g48b9ga03dg8b792dee9846" Converter="{StaticResource TranslatedStringConverter}" StringFormat="{}{0} "/>
                                            <Binding Path="Description.Text"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Duration, Converter={StaticResource LessThanConverter}, ConverterParameter=1}" Value="True">
                                <Setter TargetName="DurationTxt" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ContentControl Template="{StaticResource TooltipStripPrimaryContainerTemplate}" >
                <ContentControl Template="{StaticResource TooltipStripPrimaryTemplate}" >
                    <StackPanel Orientation="Horizontal">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/btn_endTurn_ico_TB_h.png" Stretch="None" VerticalAlignment="Top" Margin="28 -34 20 0" />
                        <TextBlock FontSize="{DynamicResource LargeFontSize}" >
                                    <Run Foreground="{StaticResource LS_SecondaryColor }">
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                    <Setter Property="Text">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                                <Binding Source="h2dc60835g9000g440fga70fg330291eda7eb"/>
                                                                <Binding Path="DataContext.Duration" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource UnitConverter}" ConverterParameter='Distance RoundUp'/>
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                        </TextBlock>
                    </StackPanel>
                </ContentControl>
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Duration, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}" HorizontalAlignment="Left" TextWrapping="Wrap" Width="{StaticResource SurfaceTooltipTextWidth}" Foreground="{StaticResource LS_SecondaryColor}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="0 20 0 10"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Description}" Value="">
                                <Setter Property="Margin" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <!--#endregion-->

    <Style TargetType="ls:LSSpan" BasedOn="{StaticResource BaseSpanStyle}">
        <Style.Triggers>

            <DataTrigger Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding TagType, RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareStringConverter}, ConverterParameter='NoStyle'}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource LS_NestedTooltipColour}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TagTooltip, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Foreground" Value="{StaticResource LS_NestedTooltipColour}" />
            </MultiDataTrigger>

            <Trigger Property="TagTooltip" Value="stub">
                <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" Tag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Stats -->
            <Trigger Property="TagTooltip" Value="ArmourClass">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.ArmorClass, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HitPoints">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Health, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeAttackBonus">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MeleeAttackBonus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedAttackBonus">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.RangedAttackBonus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellAttackBonus">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.SpellAttackBonus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellDifficultyClass">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.SpellDifficultyCheck, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ProficiencyBonus">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.ProficiencyBonus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MovementSpeed">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MovementResource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>

            <!-- Abilities -->
            <Trigger Property="TagTooltip" Value="Strength">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dexterity">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[1], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Constitution">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[2], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intelligence">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Wisdom">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Charisma">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[5], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>

            <!-- Skills -->
            <Trigger Property="TagTooltip" Value="Deception">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[5].Skills[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Intimidation">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[5].Skills[1], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Performance">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[5].Skills[2], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Persuasion">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[5].Skills[3], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Acrobatics">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[1].Skills[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SleightOfHand">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[1].Skills[1], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Stealth">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[1].Skills[2], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Arcana">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3].Skills[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="History">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3].Skills[1], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Investigation">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3].Skills[2], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Nature">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3].Skills[3], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Religion">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[3].Skills[4], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Athletics">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[0].Skills[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AnimalHandling">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4].Skills[0], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Insight">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4].Skills[1], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Medicine">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4].Skills[2], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Perception">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4].Skills[3], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Survival">
                <Setter Property="DataContext" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Abilities[4].Skills[4], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </Trigger>

            <!-- Concepts -->
            <Trigger Property="TagTooltip" Value="Abilities">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h65fb6cd0g8607g4934gb7c4g104c02bc16b9" Tag="hd1f220a4g25dcg4b09g89c7g835f1226e19b" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7cfd682g4dc5g48a2gb092gf0a95867a56c" Tag="hfe8e49d4gaf99g4b2dg8daag33c2570ced45" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heb5af8afgc5feg469cg8511gb6e0ce14510f" Tag="ha064084dg4b5cg45cbg8645ge19ab3b65e21" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Action">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hfcd95fc3g4707g4262g80f7gacb371aa8e92" Tag="hba0d4fd0ga762g43bfgb86fg1c9c8982c6b2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Advantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h079123e0geee2g410cgaaf3g7978a3dafdc7" Tag="h986f906agb172g4956g9567g5cbd32150349" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AlwaysPrepared">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he7ce4a41g56a9g4abdg9dbcg311275bfb868" Tag="h9d690e3fg8baag4917ga818gf127b3da7b93" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ArmourProficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he15abbcag7b88g4a1dg912cgfd0eb15c18af" Tag="hc59029cbgfc04g4b48gaef3gee950831af87" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="AttackRoll">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4a99c2a6g82e6g42e4ga19dg92a27c7c8b77" Tag="h2f87537agd7e2g4e34g9dd7gf3a6f9baf298" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Background">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3d129eb2g502dg477fgbfe7gad33c8b508a9" Tag="hd020153fg6a95g4ebegb6c3g043bb05c7bba" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="BackgroundGoals">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5b3d2eb3g5ec9g47acg9d0ag456e4dae5d00" Tag="hb217debcgddbfg4a07g9822g0bdc63c1c178" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CampSupplies">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5ea38d02gf6cbg407aga1adg879a5b259f8d" Tag="h3cef439fg92cdg4b5bgb3fdg5fd5db63d33a" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Cantrip">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9dd3b484g4092g4f1bgb272gb64846326fdb" Tag="h7175e72dgff3ag4f4cg99e0g98b787956275" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="CarryWeight">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h752667e2g5fc4g4d9cg851eg953eb1031379" Tag="h5993ac14ga81fg4902g90bage47c540e3fad" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Check">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h00e54a74ga0acg4b44g94d1gb31afcc7cd25" Tag="h3cbb470dg461bg4744gab02g515b1a981cbf" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="DifficultyClass">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="ha80d9b90g21bcg44a2gbedfgc4672da63a81" Tag="hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Dippable">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0aca5069g42a6g4f69ga43ag1622334c5324" Tag="hb4d757c3g2661g4ccbg9572g14fc97502d31" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Disadvantage">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h3723f6abgc46cg42b4gb95eg2449e683e25a" Tag="h8d1a14e2gc17cg4ab6gbe5dg85557ae06a7e" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Downed">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h82d41284g4437g4202g859cgb7470b39bc22" Tag="h371b7c23g65beg45f4g8680gbcd03907e57f" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Encumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h04852025ga3c0g47b2gbe02g7d22a3d12ab8" Tag="h4bffc7fbgfeaag44d9gb179gfd55c807b440" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Finesse">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h69e74667g16c7g4826g823ege6fc84ef8d77" Tag="h95e41a96g0bbcg4932gabf4g1fda223a1ee9" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HeavilyEncumbered">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hde40b598g2937g47f5ga342g2480628c8106" Tag="h18065f0dg0169g4560gaff3g46fea09fd366" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="HighGroundRules">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h0e6581dag3136g4990gb14eg8a3f8f2ebba1" Tag="h34b3cc1ag0d97g481fg9bdfge1233821e3cb" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Inspiration">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd14181dbgc234g48f9gbb1dg4a014583669e" Tag="h62619d26gd851g48a3g9c91ge21ad5928086" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Light">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h36799934g476eg45beg9ca6geb9589e75380" Tag="h5cc9c7e9g048ag43c7g8b08gba53ec2423a2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="LongRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h631e68c7g95f2g4437ga8cfg13e7449d375f" Tag="h8d993cfag30d7g474fgaf29gdcdc3cd67bdc" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hb7b21e1fg9371g4c90ga8ddg2bf398db2ea2" Tag="hd8904247g6498g4ff6g8285g89651ca68092" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="MeleeWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="heda1f51fge118g41d4gb3abg9548ac7a7243" Tag="h2a2aa88bg8cfbg40c9gae2egffc0e0996787" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="OpportunityAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h4e93ecd7g953cg4af6gbddag3a698f2a6d0f" Tag="he003d2eeg8a1eg4b5fgbc67g1e78799e8610" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="PreparedSpells">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hd23c59cegee91g48b4ga353g1b626f6f801b" Tag="h9d690e3fg8baag4917ga818gf127b3da7b93" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Proficiency">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h92a7f788g9fd4g419eg9c88gebd9d9bd1667" Tag="hc36a544fg6ae1g45f0gb74aga36d2961a9b1" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedSpellAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h56d23fbbg59ddg491fg86e5g8999d98bcb09" Tag="h8b85b657g17fbg41fdg9b25g44d2d80d1700" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="RangedWeaponAttack">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h31e87ff2g4eb9g4464gafdcg08e7468ed844" Tag="h68f90b52gfa7cg4be3ga606gfe6cef184567" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Reach">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h88026dfbgaedbg446fga24eg7397ffff5a2c" Tag="h4ca07d0bg10cag4f06g9bc6gf7ac4fe61322" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SavingThrow">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h9cca53d7g6b66g4224g94cdg918af4ee01fe" Tag="he05df610g11a9g404bgb057g9456bdbe6883" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="ShortRest">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h5f8707edgc150g4445gaefeg8fe0236fca03" Tag="h199b711fg12f1g49c1ga68dg576a864a1fc2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Skill">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h499b7b98g1d6bg4cb9g87afgf4425c5e8dd1" Tag="h8caa094cg4365g483fgb63ag3e6267854a33" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SkillCheck">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="had597db8g1555g4d1cgb0e5g788de86ebf19" Tag="he4acf6a5gd317g410fgada7gddc109ec2f5b" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h2ace8502g2abag418ag96bbgfbe3b64d60dc" Tag="hbdeb8e2fg50e9g424fgbe6dg248268275452" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="SpellcastingAbilityModifier">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="hab459fecge010g4b13g8e54gb99d5a3a5620" Tag="h29093bb2g6cf3g4eadgba58ge1cefb1019eb" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TemporaryHitPoints">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h55f7caaag8004g4057g9712g9fbfc31bfc49" Tag="h8aaf9bf5g6eb5g4417g9a93g89319d3c7c41" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="TwoHanded">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="he07ef4d4gd151g4071gbcb4ge33046cb0453" Tag="hc18aa105g6477g47dcg9962gc0554eda3c77" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="Versatile">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h755f7955g27b6g499fgb0aag0b51d65fc7a7" Tag="h3aa10065g9edcg407bg82f8g4c445f4c0ae2" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WarlockSpellSlot">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h045fee7agb340g404cg8b4cgd638ab01f04e" Tag="h89f33eeeg9befg4fa7g96f6g715568bf3e9b" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TagTooltip" Value="WildMagic">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ls:LSTooltip IsHitTestVisible="False" Content="h63415200gb6c7g41c2g9d2dg8a0341e5afe3" Tag="h04ded653gcf76g4ad4gaa36g523db04a9487" ContentTemplate="{StaticResource HeaderBodyTemplate}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>